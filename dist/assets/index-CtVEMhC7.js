var uw=Object.defineProperty;var ef=n=>{throw TypeError(n)};var cw=(n,e,t)=>e in n?uw(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var Do=(n,e,t)=>cw(n,typeof e!="symbol"?e+"":e,t),tf=(n,e,t)=>e.has(n)||ef("Cannot "+t);var kt=(n,e,t)=>(tf(n,e,"read from private field"),t?t.call(n):e.get(n)),Ts=(n,e,t)=>e.has(n)?ef("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(n):e.set(n,t),nr=(n,e,t,r)=>(tf(n,e,"write to private field"),r?r.call(n,t):e.set(n,t),t);function lw(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dw=1e-7,hw=1e-4;class Dm{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Du{refCount(e){return gt("refCount")}incRef(e){return gt("incRef")}timerAvailable(){return!0}time(e){return gt("time")}read(e){return gt("read")}readSync(e){return gt("readSync")}readToGPU(e,t){return gt("readToGPU")}numDataIds(){return gt("numDataIds")}disposeData(e,t){return gt("disposeData")}write(e,t,r){return gt("write")}move(e,t,r,s,o){return gt("move")}createTensorFromGPUData(e,t,r){return gt("createTensorFromGPUData")}memory(){return gt("memory")}floatPrecision(){return gt("floatPrecision")}epsilon(){return this.floatPrecision()===32?dw:hw}dispose(){return gt("dispose")}}function gt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fm(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,xn(n,e,t)}function pw(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,xn(n,t,r),xn(e,t,r)}function Ps(n,e,t){return Math.max(n,Math.min(e,t))}function _a(n){return n%2===0?n:n+1}function xn(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function Pm(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function fw(n,e){const t=Math.random();return e*t+(1-t)*n}function mw(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function I(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Ze(n,e,t=""){I(Ae(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Ir(n){I(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function q(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function gw(n){return n.length===0}function Lm(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Ae(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function gr(n){return n%1===0}function yw(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function da(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function xw(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return Fm(e),e}function hr(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Qi(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function Bm(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function Ve(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),I(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),I(n.every(r=>gr(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function En(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Ve(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function Cn(n,e){return Be(n,e)}function Be(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Vm(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Mm(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Um(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ls(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Wm(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function wn(n){return typeof n=="string"||n instanceof String}function zm(n){return typeof n=="boolean"}function Gm(n){return typeof n=="number"}function ss(n){return Array.isArray(n)?ss(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Gm(n)?"float32":wn(n)?"string":zm(n)?"bool":"float32"}function Vn(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ha(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ge(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function Hm(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=Hm(n+u*i,a,t,r)}return s}function pr(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Hm(0,n,e,t)}function bw(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Fu(n,e){const t=Tn(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function Tn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function ww(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return pr(n,new Float32Array(t));if(e==="int32")return pr(n,new Int32Array(t));if(e==="bool")return pr(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function $t(n){n.forEach(e=>{I(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function pa(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Aa(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function Mn(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nf="tfjsflags";class jm{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=vw,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Mn(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);nf in e&&e[nf].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=Sw(s,o)})}}function vw(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>($w(e,r[0],r[1]),r.join("="))),e}function $w(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Sw(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function U(){return Pu}let Pu=null;function Cw(n){Pu=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ri;function qm(){if(Ri==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Ri=n}return Ri}function Tw(){const n=qm();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Lu(n,e){const t=Tw();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Bu="Abs",Vu="Acos",Mu="Acosh",Oa="Add",Uu="AddN",Wu="All",zu="Any",Gu="ArgMax",Hu="ArgMin",ju="Asin",qu="Asinh",Ku="Atan",Xu="Atanh",Yu="Atan2",Qu="AvgPool",Km="AvgPoolGrad",Zu="AvgPool3D",Xm="AvgPool3DGrad",Ju="BatchMatMul",ec="BatchToSpaceND",tc="Bincount",nc="BitwiseAnd",Nw="BroadcastTo",rc="BroadcastArgs",Da="Cast",sc="Ceil",oc="ClipByValue",ac="Complex",ic="ComplexAbs",uc="Concat",cc="Conv2D",lc="Conv2DBackpropFilter",dc="Conv2DBackpropInput",hc="Conv3D",Ym="Conv3DBackpropFilterV2",pc="Conv3DBackpropInputV2",fc="Cos",mc="Cosh",gc="Cumprod",yc="Cumsum",xc="CropAndResize",bc="DenseBincount",wc="DepthToSpace",vc="DepthwiseConv2dNative",$c="DepthwiseConv2dNativeBackpropFilter",Sc="DepthwiseConv2dNativeBackpropInput",Cc="Diag",Tc="Dilation2D",Ew="Dilation2DBackpropInput",Iw="Dilation2DBackpropFilter",Nc="Draw",Ec="RealDiv",Ic="Einsum",kc="Elu",Qm="EluGrad",Rc="Erf",_c="Equal",Ac="Exp",Oc="ExpandDims",Dc="Expm1",Fc="FFT",Pc="Fill",Lc="FlipLeftRight",Bc="Floor",Vc="FloorDiv",Mc="FusedBatchNorm",Uc="GatherV2",Wc="GatherNd",zc="Greater",Gc="GreaterEqual",Fa="Identity",Hc="IFFT",jc="Imag",qc="IsFinite",Kc="IsInf",Xc="IsNan",Yc="LeakyRelu",Qc="Less",Zc="LessEqual",Jc="LinSpace",el="Log",tl="Log1p",nl="LogicalAnd",rl="LogicalNot",sl="LogicalOr",kw="LogicalXor",Rw="LogSoftmax",_w="LowerBound",ol="LRN",Zm="LRNGrad",Aw="MatrixBandPart",al="Max",il="Maximum",ul="MaxPool",Jm="MaxPoolGrad",cl="MaxPool3D",eg="MaxPool3DGrad",ll="MaxPoolWithArgmax",dl="Mean",hl="Min",pl="Minimum",fl="MirrorPad",ml="Mod",gl="Multinomial",yl="Multiply",xl="Neg",bl="NotEqual",wl="NonMaxSuppressionV3",vl="NonMaxSuppressionV4",$l="NonMaxSuppressionV5",Sl="OnesLike",Cl="OneHot",Tl="Pack",Nl="PadV2",Ow="Pool",El="Pow",Il="Prelu",kl="Prod",Rl="RaggedGather",_l="RaggedRange",Al="RaggedTensorToTensor",Ol="Range",Dl="Real",Fl="Reciprocal",Pl="Relu",Ll="Reshape",Bl="ResizeNearestNeighbor",tg="ResizeNearestNeighborGrad",Vl="ResizeBilinear",ng="ResizeBilinearGrad",Ml="Relu6",Ul="Reverse",Wl="Round",zl="Rsqrt",Gl="ScatterNd",Hl="TensorScatterUpdate",jl="SearchSorted",ql="Select",Kl="Selu",Xl="Slice",Yl="Sin",Ql="Sinh",Zl="Sign",Jl="Sigmoid",ed="Softplus",td="Sqrt",nd="Sum",rd="SpaceToBatchND",sd="SplitV",od="Softmax",ad="SparseFillEmptyRows",id="SparseReshape",ud="SparseSegmentMean",cd="SparseSegmentSum",ld="SparseToDense",dd="SquaredDifference",rg="Square",hd="StaticRegexReplace",pd="StridedSlice",fd="StringNGrams",md="StringSplit",gd="StringToHashBucketFast",yd="Sub",xd="Tan",bd="Tanh",Pa="Tile",wd="TopK",vd="Transform",Fs="Transpose",$d="Unique",Sd="Unpack",Cd="UnsortedSegmentSum",Dw="UpperBound",Td="ZerosLike",Nd="Step",fa="FromPixels",Ed="RotateWithOffset",ma="_FusedMatMul",ga="FusedConv2D",ya="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(...n){U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(...n)}function Fw(...n){U().getBool("IS_TEST")||U().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=Lu("kernelRegistry",()=>new Map),Bs=Lu("gradRegistry",()=>new Map);function Vs(n,e){const t=kd(n,e);return Xr.get(t)}function Zi(n){return Bs.get(n)}function xa(n){const e=Xr.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===n&&t.push(a)}return t}function Id(n){const{kernelName:e,backendName:t}=n,r=kd(e,t);Xr.has(r)&&Ot(`The kernel '${e}' for backend '${t}' is already registered`),Xr.set(r,n)}function Pw(n){const{kernelName:e}=n;Bs.has(e)&&U().getBool("DEBUG")&&Ot(`Overriding the gradient for '${e}'`),Bs.set(e,n)}function Lw(n,e){const t=kd(n,e);if(!Xr.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Xr.delete(t)}function Bw(n){if(!Bs.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Bs.delete(n)}function Vw(n,e){xa(n).forEach(r=>{const s=Object.assign({},r,{backendName:e});Id(s)})}function kd(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sg(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var rf=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Mw(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function Uw(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var _i,sf;function Ww(){if(sf)return _i;sf=1,_i=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(F,T,z){this.low=F|0,this.high=T|0,this.unsigned=!!z}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(F){return(F&&F.__isLong__)===!0}e.isLong=t;var r={},s={};function o(F,T){var z,H,K;return T?(F>>>=0,(K=0<=F&&F<256)&&(H=s[F],H)?H:(z=i(F,(F|0)<0?-1:0,!0),K&&(s[F]=z),z)):(F|=0,(K=-128<=F&&F<128)&&(H=r[F],H)?H:(z=i(F,F<0?-1:0,!1),K&&(r[F]=z),z))}e.fromInt=o;function a(F,T){if(isNaN(F))return T?$:b;if(T){if(F<0)return $;if(F>=m)return M}else{if(F<=-9223372036854776e3)return V;if(F+1>=x)return B}return F<0?a(-F,T).neg():i(F%f|0,F/f|0,T)}e.fromNumber=a;function i(F,T,z){return new e(F,T,z)}e.fromBits=i;var u=Math.pow;function c(F,T,z){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return b;if(typeof T=="number"?(z=T,T=!1):T=!!T,z=z||10,z<2||36<z)throw RangeError("radix");var H;if((H=F.indexOf("-"))>0)throw Error("interior hyphen");if(H===0)return c(F.substring(1),T,z).neg();for(var K=a(u(z,8)),Z=b,te=0;te<F.length;te+=8){var ae=Math.min(8,F.length-te),ie=parseInt(F.substring(te,te+ae),z);if(ae<8){var le=a(u(z,ae));Z=Z.mul(le).add(a(ie))}else Z=Z.mul(K),Z=Z.add(a(ie))}return Z.unsigned=T,Z}e.fromString=c;function l(F,T){return typeof F=="number"?a(F,T):typeof F=="string"?c(F,T):i(F.low,F.high,typeof T=="boolean"?T:F.unsigned)}e.fromValue=l;var d=65536,h=1<<24,f=d*d,m=f*f,x=m/2,y=o(h),b=o(0);e.ZERO=b;var $=o(0,!0);e.UZERO=$;var E=o(1);e.ONE=E;var C=o(1,!0);e.UONE=C;var A=o(-1);e.NEG_ONE=A;var B=i(-1,2147483647,!1);e.MAX_VALUE=B;var M=i(-1,-1,!0);e.MAX_UNSIGNED_VALUE=M;var V=i(0,-2147483648,!1);e.MIN_VALUE=V;var P=e.prototype;return P.toInt=function(){return this.unsigned?this.low>>>0:this.low},P.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},P.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(V)){var z=a(T),H=this.div(z),K=H.mul(z).sub(this);return H.toString(T)+K.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var Z=a(u(T,6),this.unsigned),te=this,ae="";;){var ie=te.div(Z),le=te.sub(ie.mul(Z)).toInt()>>>0,fe=le.toString(T);if(te=ie,te.isZero())return fe+ae;for(;fe.length<6;)fe="0"+fe;ae=""+fe+ae}},P.getHighBits=function(){return this.high},P.getHighBitsUnsigned=function(){return this.high>>>0},P.getLowBits=function(){return this.low},P.getLowBitsUnsigned=function(){return this.low>>>0},P.getNumBitsAbs=function(){if(this.isNegative())return this.eq(V)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,z=31;z>0&&!(T&1<<z);z--);return this.high!=0?z+33:z+1},P.isZero=function(){return this.high===0&&this.low===0},P.eqz=P.isZero,P.isNegative=function(){return!this.unsigned&&this.high<0},P.isPositive=function(){return this.unsigned||this.high>=0},P.isOdd=function(){return(this.low&1)===1},P.isEven=function(){return(this.low&1)===0},P.equals=function(T){return t(T)||(T=l(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},P.eq=P.equals,P.notEquals=function(T){return!this.eq(T)},P.neq=P.notEquals,P.ne=P.notEquals,P.lessThan=function(T){return this.comp(T)<0},P.lt=P.lessThan,P.lessThanOrEqual=function(T){return this.comp(T)<=0},P.lte=P.lessThanOrEqual,P.le=P.lessThanOrEqual,P.greaterThan=function(T){return this.comp(T)>0},P.gt=P.greaterThan,P.greaterThanOrEqual=function(T){return this.comp(T)>=0},P.gte=P.greaterThanOrEqual,P.ge=P.greaterThanOrEqual,P.compare=function(T){if(t(T)||(T=l(T)),this.eq(T))return 0;var z=this.isNegative(),H=T.isNegative();return z&&!H?-1:!z&&H?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},P.comp=P.compare,P.negate=function(){return!this.unsigned&&this.eq(V)?V:this.not().add(E)},P.neg=P.negate,P.add=function(T){t(T)||(T=l(T));var z=this.high>>>16,H=this.high&65535,K=this.low>>>16,Z=this.low&65535,te=T.high>>>16,ae=T.high&65535,ie=T.low>>>16,le=T.low&65535,fe=0,Ie=0,we=0,Ce=0;return Ce+=Z+le,we+=Ce>>>16,Ce&=65535,we+=K+ie,Ie+=we>>>16,we&=65535,Ie+=H+ae,fe+=Ie>>>16,Ie&=65535,fe+=z+te,fe&=65535,i(we<<16|Ce,fe<<16|Ie,this.unsigned)},P.subtract=function(T){return t(T)||(T=l(T)),this.add(T.neg())},P.sub=P.subtract,P.multiply=function(T){if(this.isZero())return b;if(t(T)||(T=l(T)),n){var z=n.mul(this.low,this.high,T.low,T.high);return i(z,n.get_high(),this.unsigned)}if(T.isZero())return b;if(this.eq(V))return T.isOdd()?V:b;if(T.eq(V))return this.isOdd()?V:b;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(y)&&T.lt(y))return a(this.toNumber()*T.toNumber(),this.unsigned);var H=this.high>>>16,K=this.high&65535,Z=this.low>>>16,te=this.low&65535,ae=T.high>>>16,ie=T.high&65535,le=T.low>>>16,fe=T.low&65535,Ie=0,we=0,Ce=0,Me=0;return Me+=te*fe,Ce+=Me>>>16,Me&=65535,Ce+=Z*fe,we+=Ce>>>16,Ce&=65535,Ce+=te*le,we+=Ce>>>16,Ce&=65535,we+=K*fe,Ie+=we>>>16,we&=65535,we+=Z*le,Ie+=we>>>16,we&=65535,we+=te*ie,Ie+=we>>>16,we&=65535,Ie+=H*fe+K*le+Z*ie+te*ae,Ie&=65535,i(Ce<<16|Me,Ie<<16|we,this.unsigned)},P.mul=P.multiply,P.divide=function(T){if(t(T)||(T=l(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var z=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return i(z,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?$:b;var H,K,Z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return $;if(T.gt(this.shru(1)))return C;Z=$}else{if(this.eq(V)){if(T.eq(E)||T.eq(A))return V;if(T.eq(V))return E;var te=this.shr(1);return H=te.div(T).shl(1),H.eq(b)?T.isNegative()?E:A:(K=this.sub(T.mul(H)),Z=H.add(K.div(T)),Z)}else if(T.eq(V))return this.unsigned?$:b;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();Z=b}for(K=this;K.gte(T);){H=Math.max(1,Math.floor(K.toNumber()/T.toNumber()));for(var ae=Math.ceil(Math.log(H)/Math.LN2),ie=ae<=48?1:u(2,ae-48),le=a(H),fe=le.mul(T);fe.isNegative()||fe.gt(K);)H-=ie,le=a(H,this.unsigned),fe=le.mul(T);le.isZero()&&(le=E),Z=Z.add(le),K=K.sub(fe)}return Z},P.div=P.divide,P.modulo=function(T){if(t(T)||(T=l(T)),n){var z=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return i(z,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},P.mod=P.modulo,P.rem=P.modulo,P.not=function(){return i(~this.low,~this.high,this.unsigned)},P.and=function(T){return t(T)||(T=l(T)),i(this.low&T.low,this.high&T.high,this.unsigned)},P.or=function(T){return t(T)||(T=l(T)),i(this.low|T.low,this.high|T.high,this.unsigned)},P.xor=function(T){return t(T)||(T=l(T)),i(this.low^T.low,this.high^T.high,this.unsigned)},P.shiftLeft=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?i(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):i(0,this.low<<T-32,this.unsigned)},P.shl=P.shiftLeft,P.shiftRight=function(T){return t(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?i(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):i(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},P.shr=P.shiftRight,P.shiftRightUnsigned=function(T){if(t(T)&&(T=T.toInt()),T&=63,T===0)return this;var z=this.high;if(T<32){var H=this.low;return i(H>>>T|z<<32-T,z>>>T,this.unsigned)}else return T===32?i(z,0,this.unsigned):i(z>>>T-32,0,this.unsigned)},P.shru=P.shiftRightUnsigned,P.shr_u=P.shiftRightUnsigned,P.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},P.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},P.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},P.toBytesLE=function(){var T=this.high,z=this.low;return[z&255,z>>>8&255,z>>>16&255,z>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},P.toBytesBE=function(){var T=this.high,z=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,z>>>24,z>>>16&255,z>>>8&255,z&255]},e.fromBytes=function(T,z,H){return H?e.fromBytesLE(T,z):e.fromBytesBE(T,z)},e.fromBytesLE=function(T,z){return new e(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,z)},e.fromBytesBE=function(T,z){return new e(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],z)},_i}var og=Ww();const ag=Mw(og),zw=lw({__proto__:null,default:ag},[og]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar=ag||zw;function ro(n){return ar.fromString(n,!0,16)}const ig=ro("c3a5c85c97cb3127"),or=ro("b492b66fbe98f273"),nt=ro("9ae16a3b2f90404f");function Ji(n){return n.xor(n.shru(47))}function ug(n,e,t){const r=n.slice(e,e+t);return ar.fromBytes(Array.from(r),!0,!0)}function ke(n,e){return ug(n,e,8)}function of(n,e){return ug(n,e,4)}function We(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Bn(n,e,t=ro("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function Gw(n,e,t,r,s,o){s=s.add(n),o=We(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(We(s,44)),[s.add(r),o.add(a)]}function Fo(n,e,t,r){return Gw(ke(n,e),ke(n,e+8),ke(n,e+16),ke(n,e+24),t,r)}function Hw(n,e=n.length){if(e>=8){const t=nt.add(e*2),r=ke(n,0).add(nt),s=ke(n,e-8),o=We(s,37).mul(t).add(r),a=We(r,25).add(s).mul(t);return Bn(o,a,t)}if(e>=4){const t=nt.add(e*2),r=of(n,0);return Bn(r.shl(3).add(e),of(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return Ji(nt.mul(o).xor(ig.mul(a))).mul(nt)}return nt}function jw(n,e=n.length){const t=nt.add(e*2),r=ke(n,0).mul(or),s=ke(n,8),o=ke(n,e-8).mul(t),a=ke(n,e-16).mul(nt);return Bn(We(r.add(s),43).add(We(o,30)).add(a),r.add(We(s.add(nt),18)).add(o),t)}function qw(n,e=n.length){const t=nt.add(e*2),r=ke(n,0).mul(nt),s=ke(n,8),o=ke(n,e-8).mul(t),a=ke(n,e-16).mul(nt),i=We(r.add(s),43).add(We(o,30)).add(a),u=Bn(i,r.add(We(s.add(nt),18)).add(o),t),c=ke(n,16).mul(t),l=ke(n,24),d=i.add(ke(n,e-32)).mul(t),h=u.add(ke(n,e-24)).mul(t);return Bn(We(c.add(l),43).add(We(d,30)).add(h),c.add(We(l.add(r),18)).add(d),t)}function cg(n,e=n.length){const t=ar.fromNumber(81,!0);if(e<=32)return e<=16?Hw(n,e):jw(n,e);if(e<=64)return qw(n,e);let r=t,s=t.mul(or).add(113),o=Ji(s.mul(nt).add(113)).mul(nt),a=[ar.UZERO,ar.UZERO],i=[ar.UZERO,ar.UZERO];r=r.mul(nt).add(ke(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=We(r.add(s).add(a[0]).add(ke(n,u+8)),37).mul(or),s=We(s.add(a[1]).add(ke(n,u+48)),42).mul(or),r=r.xor(i[1]),s=s.add(a[0]).add(ke(n,u+40)),o=We(o.add(i[0]),33).mul(or),a=Fo(n,u,a[1].mul(or),r.add(i[0])),i=Fo(n,u+32,o.add(i[1]),s.add(ke(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const d=or.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=We(r.add(s).add(a[0]).add(ke(n,u+8)),37).mul(d),s=We(s.add(a[1]).add(ke(n,u+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(ke(n,u+40))),o=We(o.add(i[0]),33).mul(d),a=Fo(n,u,a[1].mul(d),r.add(i[0])),i=Fo(n,u+32,o.add(i[1]),s.add(ke(n,u+16))),[o,r]=[r,o],Bn(Bn(a[0],i[0],d).add(Ji(s).mul(ig)).add(o),Bn(a[1],i[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(n,e){return e==="string"?vn(n):so([n],e)}function Kw(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function so(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=un(n)),U().getBool("DEBUG")&&Vm(n,e),Kw(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function At(){return U().platform.now()}function Xw(n,e){return U().platform.fetch(n,e)}function vn(n,e="utf-8"){return e=e||"utf-8",U().platform.encode(n,e)}function yr(n,e="utf-8"){return e=e||"utf-8",U().platform.decode(n,e)}function ze(n){return U().platform.isTypedArray!=null?U().platform.isTypedArray(n):sg(n)}function un(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Mn(n)||n==null||ze(n)&&t)e.push(n);else if(Array.isArray(n)||ze(n))for(let r=0;r<n.length;++r)un(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)un(n[s],e,t)}return e}const Yw=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Ae,arraysEqualWithNull:Lm,assert:I,assertNonNegativeIntegerDimensions:$t,assertNonNull:Ir,assertShapesMatch:Ze,bytesFromStringArray:Wm,bytesPerElement:Ls,checkConversionForErrors:Vm,clamp:Ps,computeStrides:Ge,convertBackendValuesAndArrayBuffer:bw,createScalarValue:kr,createShuffledIndices:xw,decodeString:yr,distSquared:mw,encodeString:vn,fetch:Xw,fingerPrint64:cg,flatten:un,getArrayFromDType:Be,getTypedArrayFromDType:Cn,hasEncodingLoss:Um,hexToLong:ro,indexToLoc:Aa,inferDtype:ss,inferFromImplicitShape:Bm,isBoolean:zm,isFunction:Vn,isInt:gr,isNumber:Gm,isPromise:Mn,isScalarShape:gw,isString:wn,isTypedArray:ze,isValidDtype:Mm,locToIndex:pa,makeOnesTypedArray:Fu,makeZerosNestedTypedArray:ww,makeZerosTypedArray:Tn,nearestDivisor:ha,nearestLargerEven:_a,now:At,parseAxisParam:Ve,randUniform:fw,repeatedTry:Qi,rightPad:hr,shuffle:Fm,shuffleCombo:pw,sizeFromShape:q,sizeToSquarishShape:da,squeezeShape:En,sum:Pm,swap:xn,tanh:yw,toNestedArray:pr,toTypedArray:so},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qw{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new Jw)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const i=At();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:At()-i})}if(U().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(d=>{Zw(d,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],o,u[2])})})}}function Zw(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class Jw{logKernelProfile(e,t,r,s,o,a){const i=typeof s=="number"?hr(`${s}ms`,9):s.error,u=hr(e,25),c=t.rank,l=t.size,d=hr(t.shape.toString(),14);let h="";for(const f in o){const m=o[f];if(m!=null){const x=m.shape||t.shape,y=x.length;h+=`${f}: ${y}D ${y>0?x:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${d}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const d in l){const h=l[d];let f=!1;for(let m=0;m<e.length;m++)if(r[h.id]){c.outputs.forEach(x=>r[x.id]=!0),f=!0,s[c.id]=!0;break}if(f)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const h in l)o[l[h].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&a[c.id]){const l={};for(const h in c.inputs){const f=c.inputs[h];r[f.id]&&(l[h]=f)}const d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function tv(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!Ae(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const d=n[l.id];n[l.id]=r(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const af=20,Ns=3,Ai=7;function nv(n,e,t,r){const s=Ge(e),o=rv(n,e,t,s),a=e.length,i=ea(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function rv(n,e,t,r){const s=q(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=t==="complex64"?Rs(n):n;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],ks(u[l+d],0,t).length)}return a}function ks(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Ai))} + ${parseFloat(n[1].toFixed(Ai))}j`:wn(n)?r=`'${n}'`:t==="bool"?r=lg(n):r=parseFloat(n.toFixed(Ai)).toString(),hr(r,e)}function lg(n){return n===0?"false":"true"}function ea(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const x=Rs(n);return[ks(x[0],0,t)]}return t==="bool"?[lg(n[0])]:[n[0].toString()]}if(u===1){if(i>af){const y=Ns*a;let b=Array.from(n.slice(0,y)),$=Array.from(n.slice((i-Ns)*a,i*a));return t==="complex64"&&(b=Rs(b),$=Rs($)),["["+b.map((E,C)=>ks(E,s[C],t)).join(", ")+", ..., "+$.map((E,C)=>ks(E,s[i-Ns+C],t)).join(", ")+"]"]}return["["+(t==="complex64"?Rs(n):Array.from(n)).map((y,b)=>ks(y,s[b],t)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),d=r[0]*a,h=[];if(i>af){for(let x=0;x<Ns;x++){const y=x*d,b=y+d;h.push(...ea(n.slice(y,b),c,t,l,s,!1))}h.push("...");for(let x=i-Ns;x<i;x++){const y=x*d,b=y+d;h.push(...ea(n.slice(y,b),c,t,l,s,x===i-1))}}else for(let x=0;x<i;x++){const y=x*d,b=y+d;h.push(...ea(n.slice(y,b),c,t,l,s,x===i-1))}const f=u===2?",":"";h[0]="["+(i>0?h[0]+f:"");for(let x=1;x<h.length-1;x++)h[x]=" "+h[x]+f;let m=`,
`;for(let x=2;x<u;x++)m+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":m),h}function Rs(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xr{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=q(e),r!=null){const s=r.length;I(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Be(t,this.size),this.strides=Ge(e)}set(e,...t){t.length===0&&(t=[0]),I(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ht().makeTensor(this.values,this.shape,this.dtype)}}let Ht=null,Ur=null;function sv(n){Ht=n}function ov(n){Ur=n}class Se{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=q(e),this.strides=Ge(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ur.buffer(this.shape,this.dtype,e)}bufferSync(){return Ur.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return pr(this.shape,e,this.dtype==="complex64")}arraySync(){return pr(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Ht().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>yr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ht().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ht().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>yr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ht().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ht().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ur.print(this,e)}clone(){return this.throwIfDisposed(),Ur.clone(this)}toString(e=!1){const t=this.dataSync();return nv(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ur.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),Ht().makeVariable(this,e,t,r)}}Object.defineProperty(Se,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function dg(){return Lu("Tensor",()=>Se)}dg();class Ms extends Se{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ae(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ht().disposeTensor(this),this.dataId=e.dataId,Ht().incRef(this,null)}dispose(){Ht().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ms,Symbol.hasInstance,{value:n=>n instanceof Se&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var eu;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(eu||(eu={}));var tu;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(tu||(tu={}));var nu;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(nu||(nu={}));var ru;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(ru||(ru={}));var su;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(su||(su={}));const av={float32:ru,int32:tu,bool:nu,complex64:su};function Yt(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return av[n][e]}function La(n){return Yt(n,"int32")}function hg(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function pg(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,e){if(n.dtype===e.dtype)return[n,e];const t=Yt(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function fg(n,e){I(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function iv(n,e){return e.some(t=>t.id===n.id)}function Rd(n){const e=[];return mg(n,e,new Set),e}function mg(n,e,t){if(n==null)return;if(n instanceof Se){e.push(n);return}if(!uv(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),mg(o,e,t))}}function uv(n){return Array.isArray(n)||typeof n=="object"}const cv=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:fg,getTensorsInContainer:Rd,isTensorInList:iv,makeTypesMatch:Pe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oi(n){return n.kernelName!=null}class uf{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Yr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new uf}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Ot(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Qw(this.backendInstance),!0}setupRegisteredKernels(){xa(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){xa(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Du)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ot(`Initialization of backend ${e} failed`),Ot(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Ot(`Initialization of backend ${e} failed`),Ot(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Yr.nextTensorId++}nextVariableId(){return Yr.nextVariableId++}clone(e){const t=D.runKernel(Fa,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return D.runKernel(Da,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(Vs(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=Oi(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Oi(e)){const{kernelName:m,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;const b=Vs(m,this.backendName);I(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),i=()=>{const $=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});const E=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,$,E);const C=E.map(A=>A.rank!=null?A:this.makeTensorFromTensorInfo(A));if(s){const A=this.getTensorsForGradient(m,x,C);r=this.saveTensorsForBackwardMode(A)}return C}}else{const{forwardFunc:m}=e,x=y=>{s&&(r=y.map(b=>this.keep(this.clone(b))))};i=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>m(this.backend,x));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}const{inputs:l,attrs:d}=e,h=Oi(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(f=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),s&&this.addTapeNode(c,l,t,h,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(m=>l[m]!=null?l[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=Zi(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(I(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=o.map(c=>t[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&wn(e[0])&&(o=e.map(u=>vn(u)));const a=s.write(o,t,r),i=new Se(t,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=Wm(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new Se(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new Ms(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Ls(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Ms||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Ls(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=Zi(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,d)=>{if(l==null){const h=r[d],f=Tn(h.size,h.dtype);return this.makeTensor(f,h.shape,h.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Rd(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(I(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));I(o instanceof Se,()=>"The result y returned by f() must be a tensor.");const a=ev(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r??lv(o.shape),tv(i,a,c=>this.tidy(c),dv);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return I(Vn(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{I(t.every(i=>i instanceof Se),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...t,u),I(r.value instanceof Se,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),I(Vn(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];I(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),I(l.every(h=>h instanceof Se),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,f)=>{d[f]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=At(),r=await this.backend.time(e);return r.wallMs=At()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new uf;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Yr.nextTensorId=0;Yr.nextVariableId=0;function lv(n){const e=Fu(q(n),"float32");return D.makeTensor(e,n,"float32")}function gg(){const n=qm();if(n._tfengine==null){const e=new jm(n);n._tfengine=new Yr(e)}return Cw(n._tfengine.ENV),sv(()=>n._tfengine),n._tfengine}const D=gg();function dv(n,e){const t={a:n,b:e};return D.runKernel(Oa,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(){return typeof navigator<"u"&&navigator!=null}let ou;function pv(n){ou=n}function _d(n){if(ou!==void 0)return ou;if(n||hv()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Ad(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const fv=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:Ad,isMobile:_d,mockIsMobile:pv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ht=U();ht.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ht.registerFlag("IS_BROWSER",()=>Ad());ht.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ht.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ht.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ht.registerFlag("PROD",()=>!1);ht.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ht.getBool("DEBUG"));ht.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ht.registerFlag("IS_TEST",()=>!1);ht.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ht.getBool("DEBUG"));ht.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ht.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ht.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(n,e){let t=n;if(ze(n))return e==="string"?[]:[n.length];if(hg(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(pg(n))return[n.buffer.size/(e==null?4:Ls(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||ze(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&yg(n,r,[]),r}function yg(n,e,t){if(t=t||[],!Array.isArray(n)&&!ze(n)){I(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}I(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),I(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)yg(n[s],r,t.concat(s))}function cf(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,r="numeric"){if(n instanceof dg())return cf(r,n.dtype,e,t),n;let s=ss(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),cf(r,s,e,t),n==null||!ze(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=cn(n,s);!ze(n)&&!Array.isArray(n)&&(n=[n]);const i=s!=="string"?so(n,s):un(n,[],!0);return D.makeTensor(i,o,s)}function Us(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>N(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Od="__op";function O(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Od;const s=(...o)=>{D.startScope(t);try{const a=r(...o);return Mn(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n,e){const t=N(n,"real","complex"),r=N(e,"imag","complex");Ze(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return D.runKernel(ac,s)}const Nn=O({complex_:mv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(n,e,t,r){if(r==null)r=ss(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(pg(n)||hg(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return D.backend.createTensorFromGPUData(n,e||t,r)}if(!ze(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){$t(e);const s=q(e),o=q(t);I(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],u=a===t.length-1?i!==q(e.slice(a)):!0;I(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!ze(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?so(n,r):un(n,[],!0),D.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(n,e,t){const r=cn(n,t);return jn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Zt{static join(e){return new Zt(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>ze(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],d=e+i-c.start,h=i,m=Math.min(t,c.end)-c.start,x=new Uint8Array(c.buffer,d,m-d);if(a.set(x,h),i+=x.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=gv(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function gv(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(){U().set("PROD",!0)}function xv(){U().set("DEBUG",!0)}function bv(){U().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function wv(n){U().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function vv(){D.disposeVariables()}function Gt(){return D}function $v(){return D.memory()}function Sv(n){return D.profile(n)}function oe(n,e){return D.tidy(n,e)}function ot(n){Rd(n).forEach(t=>t.dispose())}function Kt(n){return D.keep(n)}function Cv(n){return D.time(n)}function Tv(n){return D.setBackend(n)}function Nv(){return D.ready()}function Dd(){return D.backendName}function Ev(n){D.removeBackend(n)}function Iv(n){return D.findBackend(n)}function kv(n){return D.findBackendFactory(n)}function xg(n,e,t=1){return D.registerBackend(n,e,t)}function Fd(){return D.backend}function Rv(n,e){U().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Un=4;async function _v(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async d=>{const h=await u.bytes(),f=h.reduce((y,b)=>y+b.length,0)+Un*h.length,m=new Uint8Array(f);let x=0;for(let y=0;y<h.length;y++){const b=h[y],$=new Uint8Array(new Uint32Array([b.length]).buffer);m.set($,x),x+=Un,m.set(b,x),x+=b.length}d(m)});r.push(l)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(r);return{data:Dv(o),specs:t}}function bg(n,e){const t=new Zt(n),r={};let s=0;for(const o of e){const a=Av(o,(i,u)=>t.slice(s+i,s+u));r[o.name]=wg(o,t.slice(s,s+a)),s+=a}return r}function Av(n,e){const t=q(n.shape);let r;if("quantization"in n){const s=n.quantization;r=br[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=Un+new Uint32Array(e(s,s+Un))[0];return s}else r=br[n.dtype];return t*r}async function Ov(n,e){const t=q(n.shape);let r;if("quantization"in n){const s=n.quantization;r=br[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=Un+new Uint32Array(await e(s,s+Un))[0];return s}else r=br[n.dtype];return t*r}function wg(n,e){const t=n.name,r=n.dtype,s=n.shape,o=q(s);let a,i=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=br[u.dtype],l=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){a=new Float32Array(l.length);for(let d=0;d<l.length;d++){const h=l[d];a[d]=h*u.scale+u.min}}else if(u.dtype==="float16")a=Uv()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);a=new Int32Array(l.length);for(let d=0;d<l.length;d++){const h=l[d];a[d]=Math.round(h*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);i+=o*c}else if(r==="string"){const u=q(n.shape);a=[];for(let c=0;c<u;c++){const l=new Uint32Array(e.slice(i,i+Un))[0];i+=Un;const d=new Uint8Array(e.slice(i,i+l));a.push(d),i+=l}}else{const u=br[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const c=new Float32Array(a.length/2),l=new Float32Array(a.length/2);for(let m=0;m<c.length;m++)c[m]=a[m*2],l[m]=a[m*2+1];const d=Pt(c,s,"float32"),h=Pt(l,s,"float32"),f=Nn(d,h);return d.dispose(),h.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);i+=o*u}return Pt(a,s,r)}async function lf(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:o}=await n.read();if(s&&o==null){const i=t-r.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const a=new Uint8Array(r.length+o.byteLength);a.set(r,0),a.set(new Uint8Array(o),r.length),r=a}return r.buffer}async function vg(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const o of e){const a=await Ov(o,async(c,l)=>(s=await lf(r,s,l),s.slice(c,l)));s=await lf(r,s,a);const i=s.slice(0,a);s=s.slice(a);const u=wg(o,i);if(t[o.name]=u,Dd()==="webgpu"){const c=Fd();"uploadToGPU"in c&&q(u.shape)>=U().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(u.dataId)}}return t}function Dv(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const Pd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function df(n){return Pd?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function Fv(n){if(Pd)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function Pv(n){if(Pd){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function Lv(n){return Zt.join(n)}function hf(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function $g(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Sg(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Ld(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),Sg(n,t,r)}function oo(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:df(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:df(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Zt(n.weightData).byteLength}}function au(n){const e=[];for(const t of n)e.push(...t.weights);return e}function Bv(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Vv(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function Mv(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function Uv(){const n=Bv(),e=Vv(),t=Mv();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const i=r[a],u=n[t[i>>10]+(i&1023)]+e[i>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Fe.instance==null&&(Fe.instance=new Fe),Fe.instance}static registerSaveRouter(e){Fe.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Fe.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Fe.getHandlers(e,"save")}static getLoadHandlers(e,t){return Fe.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?Fe.getInstance().loadRouters:Fe.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const Wv=n=>Fe.registerSaveRouter(n),zv=n=>Fe.registerLoadRouter(n),Gv=n=>Fe.getSaveHandlers(n),Hv=(n,e)=>Fe.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu="tensorflowjs",uu=1,lr="models_store",Fn="model_info_store";function Cg(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function cu(n){const e=n.result;e.createObjectStore(lr,{keyPath:"modelPath"}),e.createObjectStore(Fn,{keyPath:"modelPath"})}class wr{constructor(e){if(this.indexedDB=Cg(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(iu,uu);o.onupgradeneeded=()=>cu(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(lr,"readonly"),c=i.objectStore(lr).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{t.weightData=Zt.join(t.weightData);const i=oo(t),u=a.transaction(Fn,"readwrite");let c=u.objectStore(Fn),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return s(h)}let d;l.onsuccess=()=>{d=a.transaction(lr,"readwrite");const h=d.objectStore(lr);let f;try{f=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(m){return s(m)}f.onsuccess=()=>r({modelArtifactsInfo:i}),f.onerror=m=>{c=u.objectStore(Fn);const x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),s(f.error)),x.onerror=y=>(a.close(),s(f.error))}},l.onerror=h=>(a.close(),s(l.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}wr.URL_SCHEME="indexeddb://";const Tg=n=>U().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(wr.URL_SCHEME)?jv(n.slice(wr.URL_SCHEME.length)):null;Fe.registerSaveRouter(Tg);Fe.registerLoadRouter(Tg);function jv(n){return new wr(n)}function qv(n){return n.startsWith(wr.URL_SCHEME)?n.slice(wr.URL_SCHEME.length):n}class Kv{constructor(){this.indexedDB=Cg()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(iu,uu);r.onupgradeneeded=()=>cu(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Fn,"readonly"),i=o.objectStore(Fn).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),t(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=qv(e),new Promise((t,r)=>{const s=this.indexedDB.open(iu,uu);s.onupgradeneeded=()=>cu(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(Fn,"readwrite"),i=a.objectStore(Fn),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),d=()=>{c=o.transaction(lr,"readwrite");const f=c.objectStore(lr).delete(e);f.onsuccess=()=>t(u.result.modelArtifactsInfo),f.onerror=m=>r(u.error)};l.onsuccess=d,l.onerror=h=>(d(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn="/",Wr="tensorflowjs_models",Ng="info",Xv="model_topology",Yv="weight_specs",Qv="weight_data",Zv="model_metadata";function Eg(n){return{info:[Wr,n,Ng].join(bn),topology:[Wr,n,Xv].join(bn),weightSpecs:[Wr,n,Yv].join(bn),weightData:[Wr,n,Qv].join(bn),modelMetadata:[Wr,n,Zv].join(bn)}}function Ig(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function Jv(n){const e=n.split(bn);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(bn)}function e$(n){return n.startsWith(vr.URL_SCHEME)?n.slice(vr.URL_SCHEME.length):n}class vr{constructor(e){if(!U().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Eg(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=oo(e),o=Zt.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Fv(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw Ig(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Pv(a),t}}vr.URL_SCHEME="localstorage://";const kg=n=>U().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(vr.URL_SCHEME)?t$(n.slice(vr.URL_SCHEME.length)):null;Fe.registerSaveRouter(kg);Fe.registerLoadRouter(kg);function t$(n){return new vr(n)}class n${constructor(){I(U().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),I(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Wr+bn,r=bn+Ng;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=Jv(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=e$(e);const t=Eg(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Ig(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr="://";class tt{constructor(){this.managers={}}static getInstance(){return tt.instance==null&&(tt.instance=new tt),tt.instance}static registerManager(e,t){I(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(zr)&&(e=e.slice(0,e.indexOf(zr))),I(e.length>0,()=>"scheme must not be an empty string.");const r=tt.getInstance();I(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=tt.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(tt.getInstance().managers)}}function ta(n){if(n.indexOf(zr)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${tt.getSchemes().join(",")}`);return{scheme:n.split(zr)[0],path:n.split(zr)[1]}}async function Rg(n,e,t=!1){I(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=Fe.getLoadHandlers(n);I(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),I(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],o=Fe.getSaveHandlers(e);I(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),I(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],i=ta(n).scheme,u=ta(n).path,c=i===ta(n).scheme,l=await s.load();t&&c&&await tt.getManager(i).removeModel(u);const d=await a.save(l);return t&&!c&&await tt.getManager(i).removeModel(u),d.modelArtifactsInfo}async function r$(){const n=tt.getSchemes(),e={};for(const t of n){const r=await tt.getManager(t).listModels();for(const s in r){const o=t+zr+s;e[o]=r[s]}}return e}async function s$(n){const e=ta(n);return tt.getManager(e.scheme).removeModel(e.path)}async function o$(n,e){return Rg(n,e,!1)}async function a$(n,e){return Rg(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i${constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!U().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return sg(e)}}if(U().get("IS_BROWSER")){U().setPlatform("browser",new i$);try{tt.registerManager(vr.URL_SCHEME,new n$)}catch{}try{tt.registerManager(wr.URL_SCHEME,new Kv)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u$={importFetch:()=>require("node-fetch")};let Di;class c${constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return U().global.fetch!=null?U().global.fetch(e,t):(Di==null&&(Di=u$.importFetch()),Di(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}U().get("IS_NODE")&&!U().get("IS_BROWSER")&&U().setPlatform("node",new c$);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(n,e="float32",t){return e=e||"float32",$t(n),new xr(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e){const t=N(n,"x","cast");if(!Mm(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return D.runKernel(Da,r,s)}const be=O({cast_:l$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n){const t={x:N(n,"x","clone","string_or_numeric")};return D.runKernel(Fa,t)}const $n=O({clone_:d$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bd(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gg();const h$={buffer:De,cast:be,clone:$n,print:Bd};ov(h$);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n,e){let t=N(n,"a","add"),r=N(e,"b","add");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Oa,s)}const se=O({add_:p$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,e){let t=N(n,"a","floorDiv"),r=N(e,"b","floorDiv");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Vc,s)}const Vd=O({floorDiv_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(n,e){let t=N(n,"a","div"),r=N(e,"b","div");if([t,r]=Pe(t,r),t.dtype==="int32"&&r.dtype==="int32")return Vd(t,r);const s={a:t,b:r},o={};return D.runKernel(Ec,s,o)}const Ee=O({div_:m$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,e){let t=N(n,"a","mul"),r=N(e,"b","mul");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(yl,s)}const Q=O({mul_:g$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(ic,t)}else{const t={x:e};return D.runKernel(Bu,t)}}const bt=O({abs_:y$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n){const t={x:N(n,"x","acos")};return D.runKernel(Vu,t)}const _g=O({acos_:x$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n){const t={x:N(n,"x","acosh")};return D.runKernel(Mu,t)}const Ag=O({acosh_:b$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n){I(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),I(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,o)=>N(s,`tensors${o}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Ae(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return D.runKernel(Uu,r)}const Og=O({addN_:w$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n,e=null,t=!1){const s={x:N(n,"x","all","bool")},o={axis:e,keepDims:t};return D.runKernel(Wu,s,o)}const Dg=O({all_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,e=null,t=!1){const s={x:N(n,"x","any","bool")},o={axis:e,keepDims:t};return D.runKernel(zu,s,o)}const Fg=O({any_:$$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e=0){const r={x:N(n,"x","argMax")},s={axis:e};return D.runKernel(Gu,r,s)}const Md=O({argMax_:S$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e=0){const r={x:N(n,"x","argMin")},s={axis:e};return D.runKernel(Hu,r,s)}const Pg=O({argMin_:C$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n){const t={x:N(n,"x","asin")};return D.runKernel(ju,t)}const Lg=O({asin_:T$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(n){const t={x:N(n,"x","asinh")};return D.runKernel(qu,t)}const Bg=O({asinh_:N$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n){const t={x:N(n,"x","atan")};return D.runKernel(Ku,t)}const Vg=O({atan_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,e){let t=N(n,"a","atan2"),r=N(e,"b","atan2");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Yu,s)}const Mg=O({atan2_:I$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n){const t={x:N(n,"x","atanh")};return D.runKernel(Xu,t)}const Ug=O({atanh_:k$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wg(n,e,t,r,s="NHWC",o){const a=n[3],i=[...e,a],u=os(s);return Nt(n,i,t,o,r,null,null,u)}function Rr(n,e,t,r,s,o,a="channelsLast"){const[i,u]=Ws(e);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Nt(n,c,t,r,s,o,!1,a)}function ao(n,e,t,r,s,o,a="NDHWC"){const[i,u,c]=lu(e);let l,d;if(a==="NDHWC")d="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return io(n,l,t,r,s,!1,d,o)}function Nt(n,e,t,r,s,o,a=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=n;else if(i==="channelsFirst")[u,d,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,f,,m]=e,[x,y]=Ws(t),[b,$]=Ws(r),E=Gr(h,b),C=Gr(f,$),{padInfo:A,outHeight:B,outWidth:M}=A$(s,c,l,x,y,E,C,o,i),V=a?m*d:m;let P;return i==="channelsFirst"?P=[u,V,B,M]:i==="channelsLast"&&(P=[u,B,M,V]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:B,outWidth:M,outChannels:V,padInfo:A,strideHeight:x,strideWidth:y,filterHeight:h,filterWidth:f,effectiveFilterHeight:E,effectiveFilterWidth:C,dilationHeight:b,dilationWidth:$,inShape:n,outShape:P,filterShape:e}}function io(n,e,t,r,s,o=!1,a="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,d,h]=n;else if(a==="channelsFirst")[u,h,c,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,m,x,,y]=e,[b,$,E]=lu(t),[C,A,B]=lu(r),M=Gr(f,C),V=Gr(m,A),P=Gr(x,B),{padInfo:F,outDepth:T,outHeight:z,outWidth:H}=O$(s,c,l,d,b,$,E,M,V,P,i),K=o?y*h:y;let Z;return a==="channelsFirst"?Z=[u,K,T,z,H]:a==="channelsLast"&&(Z=[u,T,z,H,K]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:T,outHeight:z,outWidth:H,outChannels:K,padInfo:F,strideDepth:b,strideHeight:$,strideWidth:E,filterDepth:f,filterHeight:m,filterWidth:x,effectiveFilterDepth:M,effectiveFilterHeight:V,effectiveFilterWidth:P,dilationDepth:C,dilationHeight:A,dilationWidth:B,inShape:n,outShape:Z,filterShape:e}}function R$(n,e,t,r,s){r==null&&(r=Ud(n,e,t));const o=n[0],a=n[1],i=zs((o-e+2*r)/t+1,s),u=zs((a-e+2*r)/t+1,s);return[i,u]}function _$(n,e,t,r,s,o){s==null&&(s=Ud(n,e[0],r[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*s>=e[i]&&(a[i]=zs((n[i]-e[i]+2*s)/r[i]+1,o));return a}function Ud(n,e,t,r=1){const s=Gr(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function Ws(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function lu(n){return typeof n=="number"?[n,n,n]:n}function Gr(n,e){return e<=1?n:n+(n-1)*(e-1)}function A$(n,e,t,r,s,o,a,i,u){let c,l,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=R$([e,t],o,r,n,i);l=f[0],d=f[1]}else if(n==="same"){l=Math.ceil(e/r),d=Math.ceil(t/s);const h=Math.max(0,(l-1)*r+o-e),f=Math.max(0,(d-1)*s+a-t),m=Math.floor(h/2),x=h-m,y=Math.floor(f/2),b=f-y;c={top:m,bottom:x,left:y,right:b,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),d=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const h=u==="channelsLast"?n[1][0]:n[2][0],f=u==="channelsLast"?n[1][1]:n[2][1],m=u==="channelsLast"?n[2][0]:n[3][0],x=u==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:f,left:m,right:x,type:h===0&&f===0&&m===0&&x===0?"VALID":"EXPLICIT"},l=zs((e-o+h+f)/r+1,i),d=zs((t-a+m+x)/s+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:d}}function O$(n,e,t,r,s,o,a,i,u,c,l){let d,h,f,m;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=_$([e,t,r,1],[i,u,c],1,[s,o,a],n,l);h=y[0],f=y[1],m=y[2]}else if(n==="same"){h=Math.ceil(e/s),f=Math.ceil(t/o),m=Math.ceil(r/a);const x=(h-1)*s+i-e,y=(f-1)*o+u-t,b=(m-1)*a+c-r,$=Math.floor(x/2),E=x-$,C=Math.floor(y/2),A=y-C,B=Math.floor(b/2),M=b-B;d={top:C,bottom:A,left:B,right:M,front:$,back:E,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:f,outWidth:m}}function zs(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Gs(n){const[e,t,r]=Ws(n);return e===1&&t===1&&r===1}function St(n,e){return Gs(n)||Gs(e)}function $r(n){return Ws(n).every(e=>e>0)}function os(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Bt(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")I(gr(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{I(gr(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n,e){const r={x:N(n,"x","reshape","string_or_numeric")},s={shape:e};return D.runKernel(Ll,r,s)}const G=O({reshape_:D$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,e,t,r,s){const o=N(n,"x","avgPool","float32"),a=1;I(St(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Bt("avgPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let d=D.runKernel(Qu,c,l);return d=be(d,o.dtype),u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Wd=O({avgPool_:F$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,e,t,r,s,o="NDHWC"){const a=N(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),I(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),I(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Bt("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let d=D.runKernel(Zu,c,l);return d=be(d,i.dtype),u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const zg=O({avgPool3d_:P$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L$(n,e=0){I(n.length>=1,()=>"Pass at least one tensor to concat");const t=Us(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return $n(t[0]);const r=t,s={axis:e};return D.runKernel(uc,r,s)}const Qe=O({concat_:L$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,e,t=!1,r=!1){let s=N(n,"a","matMul"),o=N(e,"b","matMul");[s,o]=Pe(s,o);const a={a:s,b:o},i={transposeA:t,transposeB:r};return D.runKernel(Ju,a,i)}const ve=O({matMul_:B$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n){const t={x:N(n,"x","sigmoid","float32")};return D.runKernel(Jl,t)}const an=O({sigmoid_:V$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M$(n,e,t){const r=N(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return D.runKernel(Xl,s,o)}const Te=O({slice_:M$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n){const t={x:N(n,"x","tanh","float32")};return D.runKernel(bd,t)}const ba=O({tanh_:U$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,e,t,r,s,o){const a=N(n,"forgetBias","basicLSTMCell"),i=N(e,"lstmKernel","basicLSTMCell"),u=N(t,"lstmBias","basicLSTMCell"),c=N(r,"data","basicLSTMCell"),l=N(s,"c","basicLSTMCell"),d=N(o,"h","basicLSTMCell"),h=Qe([c,d],1),f=ve(h,i),m=se(f,u),x=m.shape[0],y=m.shape[1]/4,b=[x,y],$=Te(m,[0,0],b),E=Te(m,[0,y],b),C=Te(m,[0,y*2],b),A=Te(m,[0,y*3],b),B=se(Q(an($),ba(E)),Q(l,an(se(a,C)))),M=Q(ba(B),an(A));return[B,M]}const Gg=O({basicLSTMCell_:W$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,e,t){const r=N(n,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);I(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),I(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),I(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return D.runKernel(ec,o,a)}const zd=O({batchToSpaceND_:z$});function G$(n){let e;return n.rank===0||n.rank===1?e=G(n,[1,1,1,n.size]):n.rank===2?e=G(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=G(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n,e,t,r,s,o){o==null&&(o=.001);const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;r!=null&&(l=N(r,"offset","batchNorm")),I(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:G$(a),scale:c,offset:l,mean:i,variance:u},f={varianceEpsilon:o},m=D.runKernel(Mc,h,f);return G(m,a.shape)}const uo=O({batchNorm_:H$});function j$(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),I(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),I(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),I(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&I(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),uo(a,i,u,l,c,o)}const Hg=O({batchNorm2d_:j$});function q$(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),I(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),I(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),I(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&I(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),uo(a,i,u,l,c,o)}const jg=O({batchNorm3d_:q$});function K$(n,e,t,r,s,o){const a=N(n,"x","batchNorm"),i=N(e,"mean","batchNorm"),u=N(t,"variance","batchNorm");let c;s!=null&&(c=N(s,"scale","batchNorm"));let l;return r!=null&&(l=N(r,"offset","batchNorm")),I(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),I(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),I(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&I(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),uo(a,i,u,l,c,o)}const qg=O({batchNorm4d_:K$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n,e,t){const r=N(n,"x","bincount"),s=N(e,"weights","bincount");I(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return D.runKernel(tc,o,a)}const Gd=O({bincount_:X$});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,e){const t=N(n,"x","bitwiseAnd"),r=N(e,"y","bitwiseAnd");if(!Ae(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return D.runKernel(nc,s)}const Kg=O({bitwiseAnd_:Y$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,e){const t=N(n,"s0","broadcastArgs","int32"),r=N(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return D.runKernel(rc,s)}const Xg=O({broadcastArgs_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e){let t=N(n,"broadcastTo","x");const r=t.shape;if($t(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=G(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return $n(t);const i={x:t},u={reps:o};return D.runKernel(Pa,i,u)}const Hr=O({broadcastTo_:Z$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n){const t={x:N(n,"x","ceil","float32")};return D.runKernel(sc,t)}const Yg=O({ceil_:J$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n,e,t){$t(n),t=t||ss(e);const r={shape:n,value:e,dtype:t};return D.runKernel(Pc,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,e,t){const r=N(n,"x","clipByValue");if(I(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return as(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return D.runKernel(oc,s,o)}const Qg=O({clipByValue_:eS});function tS(n){return Qe(n,0)}const Zg=O({concat1d_:tS});function nS(n,e){return Qe(n,e)}const Jg=O({concat2d_:nS});function rS(n,e){return Qe(n,e)}const ey=O({concat3d_:rS});function sS(n,e){return Qe(n,e)}const ty=O({concat4d_:sS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,e,t,r,s="NHWC",o=[1,1],a){const i=N(n,"x","conv2d","float32"),u=N(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),I(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Bt("conv2d",r,a);const d=s==="NHWC"?c.shape[3]:c.shape[1];I(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),I(St(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),I($r(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),I($r(t),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:c,filter:u},f={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(cc,h,f);return l?G(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const co=O({conv2d_:oS});function aS(n,e,t,r,s="NWC",o=1,a){const i=N(n,"x","conv1d"),u=N(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=G(i,[1,i.shape[0],i.shape[1]])),I(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),I(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Bt("conv1d",r,a),I(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),I(St(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),I($r(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),I($r(t),()=>"Error in conv1D: Stride should be larger than 0."),I(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=G(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=G(c,[c.shape[0],1,c.shape[1],c.shape[2]]),y=co(h,d,[1,t],r,"NHWC",[1,o],a);return l?G(y,[y.shape[2],y.shape[3]]):G(y,[y.shape[0],y.shape[2],y.shape[3]])}const ny=O({conv1d_:aS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,e,t,r,s,o="NHWC",a){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),I(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),I(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),I(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?u.shape[3]:u.shape[1];I(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),I(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),Bt("conv2dDerInput",s,a);const h={dy:u,filter:t},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},m=D.runKernel(dc,h,f);return c?G(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ry=O({conv2DBackpropInput_:iS});function uS(n,e,t,r,s,o){const a=N(n,"x","conv2dTranspose"),i=N(e,"filter","conv2dTranspose");return ry(t,a,i,r,s,"NHWC",o)}const sy=O({conv2dTranspose_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=N(n,"x","conv3d"),i=N(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),I(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),I(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),I(St(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),I(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),I($r(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),I($r(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},d={strides:t,pad:r,dataFormat:s,dilations:o},h=D.runKernel(hc,l,d);return c?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const oy=O({conv3d_:cS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,e,t,r,s){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];I(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),I(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),I(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),I(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),I(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},d={pad:s,strides:r,inputShape:o},h=D.runKernel(pc,l,d);return i?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const dS=O({conv3DBackpropInput_:lS});function hS(n,e,t,r,s){const o=N(n,"x","conv3dTranspose"),a=N(e,"filter","conv3dTranspose");return dS(t,o,a,r,s)}const ay=O({conv3dTranspose_:hS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n){const t={x:N(n,"x","cos","float32")};return D.runKernel(fc,t)}const iy=O({cos_:pS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n){const t={x:N(n,"x","cosh","float32")};return D.runKernel(mc,t)}const uy=O({cosh_:fS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,e=0,t=!1,r=!1){const o={x:N(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return D.runKernel(gc,o,a)}const cy=O({cumprod_:mS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,e=0,t=!1,r=!1){const o={x:N(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return D.runKernel(yc,o,a)}const ly=O({cumsum_:gS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e,t,r=!1){const s=N(n,"x","denseBincount"),o=N(e,"weights","denseBincount");I(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),I(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:t,binaryOutput:r};return D.runKernel(bc,a,i)}const dy=O({denseBincount_:yS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e,t="NHWC"){const r=N(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];I(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),I(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),I(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),I(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:t};return D.runKernel(wc,i,u)}const hy=O({depthToSpace_:xS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n,e,t,r,s="NHWC",o=[1,1],a){const i=N(n,"x","depthwiseConv2d","float32"),u=N(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),I(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=s==="NHWC"?c.shape[3]:c.shape[1];I(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),Bt("depthwiseConv2d",r,a);const h={x:c,filter:u},f={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(vc,h,f);return l?G(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ba=O({depthwiseConv2d_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n){const t={x:N(n,"x","diag")};return D.runKernel(Cc,t)}const py=O({diag_:wS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,e,t,r,s=[1,1],o="NHWC"){const a=N(n,"x","dilation2d"),i=N(e,"filter","dilation2d");I(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),I(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),I(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),I(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},d={strides:t,pad:r,dilations:s},h=D.runKernel(Tc,l,d);return c?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fy=O({dilation2d_:vS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Hd(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function ye(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else r[t-s-1]=o}return r}const $S=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:ye,getBroadcastDims:Hs,getReductionAxes:Hd},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,e){let t=N(n,"a","equal","string_or_numeric"),r=N(e,"b","equal","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(_c,s)}const lo=O({equal_:SS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n,e,t){const r=N(e,"a","where"),s=N(t,"b","where"),o=N(n,"condition","where","bool"),a=ye(ye(o.shape,r.shape),s.shape),i=Hr(o,a),u=Hr(r,a),c=Hr(s,a),l={condition:i,t:u,e:c};return D.runKernel(ql,l)}const Sn=O({where_:CS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n){const t={x:N(n,"x","zerosLike")};return D.runKernel(Td,t)}const wt=O({zerosLike_:TS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,e){let t=N(n,"a","div"),r=N(e,"b","div");[t,r]=Pe(t,r);const s=Ee(t,r),o=wt(s),a=lo(r,o);return Sn(a,o,s)}const my=O({divNoNan_:NS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,e){const t=N(n,"t1","dot"),r=N(e,"t2","dot");I((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(I(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=G(t,[1,-1]),i=G(r,[-1,1]),u=ve(a,i);return G(u,[])}else if(t.rank===1&&r.rank===2){const a=G(t,[1,-1]),i=G(r,[r.shape[0],r.shape[1]]),u=ve(a,i);return G(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=G(r,[-1,1]),i=ve(t,a);return G(i,[i.size])}else{const a=G(r,[r.shape[0],r.shape[1]]);return ve(t,a)}}const gy=O({dot_:ES});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n,...e){const t=e.map((s,o)=>N(s,`tensors${o}`,"einsum")),r={equation:n};return D.runKernel(Ic,t,r)}const ir=O({einsum_:IS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n){const t={x:N(n,"x","elu","float32")};return D.runKernel(kc,t)}const jd=O({elu_:kS});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,e){const t=N(n,"x","ensureShape","string_or_numeric");if(!Lm(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const yy=O({ensureShape_:RS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n){let e=N(n,"x","erf");I(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=be(e,"float32"));const t={x:e};return D.runKernel(Rc,t)}const xy=O({erf_:_S});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function by(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function pn(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Et(n,e){const t=e.map(r=>1);return by(n,t,e)}function Jt(n,e,t){I(qd(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Vt(n,e){if(qd(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function Kd(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Mt(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,e=null,t=!1){const s={x:N(n,"x","max")},o={reductionIndices:e,keepDims:t};return D.runKernel(al,s,o)}const fr=O({max_:AS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e=null,t=!1){const s={x:N(n,"x","min")},o={axis:e,keepDims:t};return D.runKernel(hl,s,o)}const wa=O({min_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,e){let t=N(n,"base","pow"),r=N(e,"exp","pow");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(El,s)}const Qr=O({pow_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(n,e){if((ze(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ze(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return jn(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n){const t={x:N(n,"x","sqrt","float32")};return D.runKernel(td,t)}const ln=O({sqrt_:FS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n){const e=N(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const Lt=O({square_:PS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n,e=null,t=!1){let r=N(n,"x","sum");r.dtype==="bool"&&(r=be(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return D.runKernel(nd,s,o)}const Re=O({sum_:LS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,e="euclidean",t=null,r=!1){n=N(n,"x","norm");const s=wy(n,e,t);let o=s.shape;if(r){const a=Ve(t,n.shape);o=Et(s.shape,a)}return G(s,o)}function wy(n,e,t=null){if(n.rank===0)return bt(n);if(n.rank!==1&&t===null)return wy(G(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Re(bt(n),t);if(e===1/0)return fr(bt(n),t);if(e===-1/0)return wa(bt(n),t);if(e==="euclidean"||e===2)return ln(Re(Qr(bt(n),he(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return fr(Re(bt(n),t[0]),t[1]-1);if(e===1/0)return fr(Re(bt(n),t[1]),t[0]);if(e===-1/0)return wa(Re(bt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return ln(Re(Lt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const ho=O({norm_:BS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,e=null,t=!1){return ho(n,"euclidean",e,t)}const vy=O({euclideanNorm_:VS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n){const t={x:N(n,"x","exp")};return D.runKernel(Ac,t)}const Wn=O({exp_:MS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");I(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return D.runKernel(Oc,r,s)}const dt=O({expandDims_:US});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n){const t={x:N(n,"x","expm1")};return D.runKernel(Dc,t)}const $y=O({expm1_:WS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(n,e){const t=N(n,"x","tile","string_or_numeric");I(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return D.runKernel(Pa,r,s)}const jr=O({tile_:zS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n,e,t,r="float32"){e==null&&(e=n);const s=De([n,e],r),o=n<=e?n:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=G(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return jr(dt(a,0),[t[0],1,1]);if(t.length===2)return jr(dt(dt(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return jr(dt(dt(dt(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Xd=O({eye_:GS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n){const t={x:N(n,"x","floor","float32")};return D.runKernel(Bc,t)}const Yd=O({floor_:HS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,e,t=0,r=0){const s=N(n,"x","gather"),o=N(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:t,batchDims:r};return D.runKernel(Uc,a,i)}const Qd=O({gather_:jS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n,e){let t=N(n,"a","greater","string_or_numeric"),r=N(e,"b","greater","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(zc,s)}const is=O({greater_:qS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),r=N(e,"b","greaterEqual","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Gc,s)}const Zd=O({greaterEqual_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const t={input:N(n,"input","imag")};return D.runKernel(jc,t)}const po=O({imag_:XS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(n){const t={x:N(n,"x","isFinite")};return D.runKernel(qc,t)}const Sy=O({isFinite_:YS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n){const t={x:N(n,"x","isInf")};return D.runKernel(Kc,t)}const Cy=O({isInf_:QS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n){const t={x:N(n,"x","isNaN")};return D.runKernel(Xc,t)}const Ty=O({isNaN_:ZS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n,e=.2){const r={x:N(n,"x","leakyRelu")},s={alpha:e};return D.runKernel(Yc,r,s)}const Jd=O({leakyRelu_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,e){let t=N(n,"a","less","string_or_numeric"),r=N(e,"b","less","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Qc,s)}const va=O({less_:e2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),r=N(e,"b","lessEqual","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Zc,s)}const Va=O({lessEqual_:t2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ny(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return D.runKernel(Jc,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,e=5,t=1,r=1,s=.5){const o=N(n,"x","localResponseNormalization");I(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),I(gr(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=G(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:t,alpha:r,beta:s},l=D.runKernel(ol,u,c);return i?G(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Ey=O({localResponseNormalization_:n2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n){const t={x:N(n,"x","log","float32")};return D.runKernel(el,t)}const Zr=O({log_:r2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n){const t={x:N(n,"x","log1p")};return D.runKernel(tl,t)}const eh=O({log1p_:s2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n){return I(Vn(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=N(e,"x","tf.grad","string_or_numeric"),s=t!=null?N(t,"dy","tf.grad"):null;return D.tidy(()=>{const{value:o,grads:a}=D.gradients(()=>n(r),[r],s);return s!=null&&Ze(o.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ma(a),a[0]})}}function a2(n){return I(Vn(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{I(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Us(e,"args","tf.grads","string_or_numeric"),s=t!=null?N(t,"dy","tf.grads"):null;return D.tidy(()=>{const{value:o,grads:a}=D.gradients(()=>n(...r),r,s);return s!=null&&Ze(o.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ma(a),a})}}function i2(n){return I(Vn(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{I(e instanceof Se,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),I(t==null||t instanceof Se,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=D.gradients(()=>n(e),[e],t);return Ma(r),{grad:r[0],value:s}}}function u2(n){return I(Vn(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{I(Array.isArray(e)&&e.every(s=>s instanceof Se),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),I(t==null||t instanceof Se,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=D.gradients(()=>n(...e),e,t);return t!=null&&Ze(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ma(r.grads),r}}function Iy(n,e){I(Vn(n),()=>"The f passed in variableGrads(f) must be a function"),I(e==null||Array.isArray(e)&&e.every(c=>c instanceof Ms),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in D.registeredVariables)e.push(D.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),I(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=D.gradients(n,e,null,o);I(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),I(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function dn(n){return D.customGrad(n)}function Ma(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(n){const t={x:N(n,"x","neg")};return D.runKernel(xl,t)}const Xt=O({neg_:c2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(n){const t={x:N(n,"x","softplus")};return D.runKernel(ed,t)}const th=O({softplus_:l2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n){const e=N(n,"x","logSigmoid");return dn(r=>({value:Xt(th(Xt(r))),gradFunc:a=>Q(a,an(Xt(r)))}))(e)}const ky=O({logSigmoid_:d2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(n,e){let t=N(n,"a","sub"),r=N(e,"b","sub");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(yd,s)}const de=O({sub_:h2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return dn((s,o)=>{const i=fr(s,e,!0),u=de(s,i),c=de(be(u,"float32"),Zr(Re(Wn(u),e,!0)));return o([c]),{value:c,gradFunc:(d,h)=>{const[f]=h,m=!0,x=Wn(f);return de(d,Q(Re(d,e,m),x))}}})(t)}const Ry=O({logSoftmax_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n,e=null,t=!1){const r=N(n,"x","logSumExp"),s=Ve(e,r.shape),o=fr(r,s,!0),a=de(r,o),i=Wn(a),u=Re(i,s),c=Zr(u),l=se(G(o,c.shape),c);if(t){const d=Et(l.shape,s);return G(l,d)}return l}const nh=O({logSumExp_:f2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n,e){const t=N(n,"a","logicalAnd","bool"),r=N(e,"b","logicalAnd","bool");ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(nl,s)}const js=O({logicalAnd_:m2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n){const t={x:N(n,"x","logicalNot","bool")};return D.runKernel(rl,t)}const rh=O({logicalNot_:g2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n,e){const t=N(n,"a","logicalOr","bool"),r=N(e,"b","logicalOr","bool");ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(sl,s)}const sh=O({logicalOr_:y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n,e){const t=N(n,"a","logicalXor","bool"),r=N(e,"b","logicalXor","bool");return ye(t.shape,r.shape),js(sh(n,e),rh(js(n,e)))}const _y=O({logicalXor_:x2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po=2147483648;function b2(n,e,t="left"){const r=N(n,"sortedSequence","searchSorted"),s=N(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=G(r,[-1,o]),u=G(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(q(u.shape)>=Po)throw new Error(`values tensor size must less than ${Po}`);if(i.shape[1]>=Po)throw new Error(`trailing dim_size must less than ${Po} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:t};return D.runKernel(jl,c,l)}const Ua=O({searchSorted_:b2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(n,e){return Ua(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n,e,t,r,s){const o=N(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),I(St(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Bt("maxPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s},d=D.runKernel(ul,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const oh=O({maxPool_:w2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=N(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),I(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Bt("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},d=D.runKernel(cl,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Oy=O({maxPool3d_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,e,t,r,s=!1){const a={x:N(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=D.runKernel(ll,a,i);return{result:u[0],indexes:u[1]}}const Dy=O({maxPoolWithArgmax_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,e){let t=N(n,"a","maximum"),r=N(e,"b","maximum");[t,r]=Pe(t,r),t.dtype==="bool"&&(t=be(t,"int32"),r=be(r,"int32")),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(il,s)}const ah=O({maximum_:S2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n,e=null,t=!1){const s={x:N(n,"x","mean")},o={axis:e,keepDims:t};return D.runKernel(dl,s,o)}const qs=O({mean_:C2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e="float32"){if($t(n),e==="complex64"){const r=zn(n,"float32"),s=zn(n,"float32");return Nn(r,s)}const t=Tn(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n,e="float32"){if($t(n),e==="complex64"){const r=Pn(n,"float32"),s=zn(n,"float32");return Nn(r,s)}const t=Fu(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fy(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=N(n,"x","meshgrid",n instanceof Se?n.dtype:"float32");if(e===void 0)return[r];let s=N(e,"y","meshgrid",e instanceof Se?e.dtype:"float32");const o=q(r.shape),a=q(s.shape);return t==="xy"?(r=G(r,[1,-1]),s=G(s,[-1,1]),[ve(Pn([a,1],r.dtype),r),ve(s,Pn([1,o],s.dtype))]):(r=G(r,[-1,1]),s=G(s,[1,-1]),[ve(r,Pn([1,a],r.dtype)),ve(Pn([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n,e){let t=N(n,"a","minimum"),r=N(e,"b","minimum");[t,r]=Pe(t,r),t.dtype==="bool"&&(t=be(t,"int32"),r=be(r,"int32")),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(pl,s)}const Ks=O({minimum_:T2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n,e,t){I(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=N(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let i=0;i<r.rank;i++)I(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),I(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return D.runKernel(fl,a,o)}const ih=O({mirrorPad_:N2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,e){let t=N(n,"a","mod"),r=N(e,"b","mod");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(ml,s)}const Py=O({mod_:E2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,e=null,t=!1){n=N(n,"x","moments");const r=Ve(e,n.shape),s=qs(n,r,t);let o=s.shape;t||(o=Et(s.shape,r));const a=Lt(de(be(n,"float32"),G(s,o))),i=qs(a,r,t);return{mean:s,variance:i}}const Ly=O({moments_:I2});function k2(n,e,t,r){const s=N(e,"data","multiRNNCell"),o=Us(t,"c","multiRNNCell"),a=Us(r,"h","multiRNNCell");let i=s;const u=[];for(let d=0;d<n.length;d++){const h=n[d](i,o[d],a[d]);u.push(h[0]),u.push(h[1]),i=h[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const By=O({multiRNNCell_:k2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n,e,t,r=!1){const s=N(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const u={logits:a===1?G(s,[1,-1]):s},c={numSamples:e,seed:t,normalized:r},l=D.runKernel(gl,u,c);return a===1?G(l,[l.size]):l}const Vy=O({multinomial_:R2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,e){let t=N(n,"a","notEqual","string_or_numeric"),r=N(e,"b","notEqual","string_or_numeric");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(bl,s)}const uh=O({notEqual_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:N(n,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:t,offValue:r};return D.runKernel(Cl,a,i)}const Xs=O({oneHot_:A2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n){const t={x:N(n,"x","onesLike")};return D.runKernel(Sl,t)}const My=O({onesLike_:O2});function D2(n,e){const t=N(n,"v1","outerProduct"),r=N(e,"v2","outerProduct");I(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=G(t,[-1,1]),o=G(r,[1,-1]);return ve(s,o)}const Uy=O({outerProduct_:D2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,e,t=0){const r=N(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return D.runKernel(Nl,o,s)}const _r=O({pad_:F2});function P2(n,e,t=0){return I(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),_r(n,[e],t)}const Wy=O({pad1d_:P2});function L2(n,e,t=0){return I(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_r(n,e,t)}const zy=O({pad2d_:L2});function B2(n,e,t=0){return I(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_r(n,e,t)}const ch=O({pad3d_:B2});function V2(n,e,t=0){return I(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_r(n,e,t)}const Gy=O({pad4d_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,e,t){const r=N(n,"x","spaceToBatchND");I(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),I(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),I(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return D.runKernel(rd,s,o)}const lh=O({spaceToBatchND_:M2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=N(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(St(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=Rr(u.shape,e,o,s,r),d=[l.dilationHeight,l.dilationWidth];let h;r==="same"?h=z2([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const f=d[0]===1&&d[1]===1,[m,x]=W2([l.inHeight,l.inWidth],d,h),y=f?r:"valid",b=f?u:lh(u,d,m),E=(t==="avg"?()=>Wd(b,e,o,y,a):()=>oh(b,e,o,y,a))(),C=f?E:zd(E,d,x);return c?G(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function W2(n,e,t){const r=t.map(l=>l[0]),s=t.map(l=>l[1]),o=n.concat(r,s),a=e.map((l,d)=>(l-o[d]%l)%l),i=s.map((l,d)=>l+a[d]),u=e.map((l,d)=>[r[d],i[d]]),c=e.map((l,d)=>[0,a[d]]);return[u,c]}function z2(n,e){const r=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const Hy=O({pool_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,e){const t=N(n,"x","prelu"),r=N(e,"alpha","prelu"),s={x:t,alpha:r};return D.runKernel(Il,s)}const dh=O({prelu_:G2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e=null,t=!1){let r=N(n,"x","prod");r.dtype==="bool"&&(r=be(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return D.runKernel(kl,s,o)}const jy=O({prod_:H2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n,e,t,r){const s=n.map((l,d)=>N(l,`tensors${d}`,"raggedGather","int32")),o=N(e,"paramsDenseValues","raggedGather"),a=N(t,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},c=D.runKernel(Rl,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const qy=O({raggedGather_:j2});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e,t){const r=N(n,"starts","raggedRange"),s=N(e,"limits","raggedRange",r.dtype),o=N(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},i=D.runKernel(_l,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const Ky=O({raggedRange_:q2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e,t,r,s){const o=N(n,"shape","raggedTensorToTensor","int32"),a=N(e,"values","raggedTensorToTensor"),i=N(t,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((d,h)=>N(d,`tensors${h}`,"raggedTensorToTensor","int32")),c={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:s};return D.runKernel(Al,c,l)}const Xy=O({raggedTensorToTensor_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n,e,t){$t(n);const r=q(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<r;o++)s[o]=e();return D.makeTensor(s,n,t)}const Yy=O({rand_:X2});var na={exports:{}},Y2=na.exports,pf;function Q2(){return pf||(pf=1,function(n){(function(e,t,r){function s(u){var c=this,l=i();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),d=c&&c.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}function i(){var u=4022871197,c=function(l){l=String(l);for(var d=0;d<l.length;d++){u+=l.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:this.alea=a})(Y2,n)}(na)),na.exports}var ra={exports:{}},Z2=ra.exports,ff;function J2(){return ff||(ff=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:this.xor128=a})(Z2,n)}(ra)),ra.exports}var sa={exports:{}},eC=sa.exports,mf;function tC(){return mf||(mf=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:this.xorwow=a})(eC,n)}(sa)),sa.exports}var oa={exports:{}},nC=oa.exports,gf;function rC(){return gf||(gf=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.x,d=u.i,h,f;return h=l[d],h^=h>>>7,f=h^h<<24,h=l[d+1&7],f^=h^h>>>10,h=l[d+3&7],f^=h^h>>>3,h=l[d+4&7],f^=h^h<<7,h=l[d+7&7],h=h^h<<13,f^=h^h<<9,l[d]=f,u.i=d+1&7,f};function c(l,d){var h,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,h=0;h<d.length;++h)f[h&7]=f[h&7]<<15^d.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?f[7]=-1:f[h],l.x=f,l.i=0,h=256;h>0;--h)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(l.x&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:this.xorshift7=a})(nC,n)}(oa)),oa.exports}var aa={exports:{}},sC=aa.exports,yf;function oC(){return yf||(yf=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.w,d=u.X,h=u.i,f,m;return u.w=l=l+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,u.i=h,m+(l^l>>>16)|0};function c(l,d){var h,f,m,x,y,b=[],$=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,$=Math.max($,d.length)),m=0,x=-32;x<$;++x)d&&(f^=d.charCodeAt((x+32)%d.length)),x===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,x>=0&&(y=y+1640531527|0,h=b[x&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,x=4*128;x>0;--x)f=b[m+34&127],h=b[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,b[m]=f^h;l.w=y,l.X=b,l.i=m}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(l.X&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:this.xor4096=a})(sC,n)}(aa)),aa.exports}var ia={exports:{}},aC=ia.exports,xf;function iC(){return xf||(xf=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var d=u.b,h=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=a:this.tychei=a})(aC,n)}(ia)),ia.exports}var ua={exports:{}};const uC={},cC=Object.freeze(Object.defineProperty({__proto__:null,default:uC},Symbol.toStringTag,{value:"Module"})),lC=Uw(cC);var dC=ua.exports,bf;function hC(){return bf||(bf=1,function(n){(function(e,t,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,d=s-1,h;function f(C,A,B){var M=[];A=A==!0?{entropy:!0}:A||{};var V=b(y(A.entropy?[C,E(t)]:C??$(),3),M),P=new m(M),F=function(){for(var T=P.g(o),z=u,H=0;T<c;)T=(T+H)*s,z*=s,H=P.g(1);for(;T>=l;)T/=2,z/=2,H>>>=1;return(T+H)/z};return F.int32=function(){return P.g(4)|0},F.quick=function(){return P.g(4)/4294967296},F.double=F,b(E(P.S),t),(A.pass||B||function(T,z,H,K){return K&&(K.S&&x(K,P),T.state=function(){return x(P,{})}),H?(r[i]=T,z):T})(F,V,"global"in A?A.global:this==r,A.state)}function m(C){var A,B=C.length,M=this,V=0,P=M.i=M.j=0,F=M.S=[];for(B||(C=[B++]);V<s;)F[V]=V++;for(V=0;V<s;V++)F[V]=F[P=d&P+C[V%B]+(A=F[V])],F[P]=A;(M.g=function(T){for(var z,H=0,K=M.i,Z=M.j,te=M.S;T--;)z=te[K=d&K+1],H=H*s+te[d&(te[K]=te[Z=d&Z+z])+(te[Z]=z)];return M.i=K,M.j=Z,H})(s)}function x(C,A){return A.i=C.i,A.j=C.j,A.S=C.S.slice(),A}function y(C,A){var B=[],M=typeof C,V;if(A&&M=="object")for(V in C)try{B.push(y(C[V],A-1))}catch{}return B.length?B:M=="string"?C:C+"\0"}function b(C,A){for(var B=C+"",M,V=0;V<B.length;)A[d&V]=d&(M^=A[d&V]*19)+B.charCodeAt(V++);return E(A)}function $(){try{var C;return h&&(C=h.randomBytes)?C=C(s):(C=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(C)),E(C)}catch{var A=e.navigator,B=A&&A.plugins;return[+new Date,e,B,e.screen,E(t)]}}function E(C){return String.fromCharCode.apply(0,C)}if(b(r.random(),t),n.exports){n.exports=f;try{h=lC}catch{}}else r["seed"+i]=f})(typeof self<"u"?self:dC,[],Math)}(ua)),ua.exports}var Fi,wf;function pC(){if(wf)return Fi;wf=1;var n=Q2(),e=J2(),t=tC(),r=rC(),s=oC(),o=iC(),a=hC();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=r,a.xor4096=s,a.tychei=o,Fi=a,Fi}var hh=pC();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=.001,Qy=.1;function mC(n,e,t){return t==null&&(t=ph()),du(n,e,(r,s)=>fh(r,s,t))}function ph(){return D.backend.floatPrecision()===32?fC:Qy}function du(n,e,t){let r=!0;if((ze(n)||ze(e))&&(r=!1),ze(n)&&ze(e)&&(r=!0),r){const a=n.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=cn(n),i=cn(e);if(!Ae(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}const s=ze(n)?n:un(n),o=ze(e)?e:un(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.
Actual:   ${s}.
Expected: ${o}.`);for(let a=0;a<o.length;++a){const i=s[a],u=o[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${s}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function gC(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function yC(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return wn(n)||wn(n[0])||wn(e)||wn(e[0])?du(n,t,(r,s)=>r==s):du(n,e,(r,s)=>fh(r,s,0))}function xC(n,e,t){if(t==null&&(t=ph()),!fh(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function fh(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function bC(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function wC(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function Zy(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?Zy(t):n[e]=vn(t)}return n}function vC(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function $C(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const SC=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:Qy,createVideoElement:vC,encodeStrings:Zy,expectArrayBuffersEqual:wC,expectArraysClose:mC,expectArraysEqual:yC,expectNumbersClose:xC,expectPromiseToFail:gC,expectValuesInRange:bC,play:$C,testEpsilon:ph},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mh{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=hh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class CC{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const o=s||Math.random();this.randu=hh.alea(o.toString()),this.randn=new mh(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class TC{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hh.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e,t=1,r="float32",s){if($t(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new CC(e,t,r,s),a=De(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Jy=O({randomGamma_:NC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e=0,t=1,r,s){if($t(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new mh(e,t,r,!1,s),a=De(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const gh=O({randomNormal_:EC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return gh(n,0,1,e,t)}const ex=O({randomStandardNormal_:IC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n,e=0,t=1,r="float32",s){$t(n);const o=De(n,r),a=new TC(e,t,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Wa=O({randomUniform_:kC});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(n,e,t,r){return Wa(n,e,t,"int32",r)}const tx=O({randomUniformInt_:RC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return D.runKernel(Ol,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _C(n){const t={input:N(n,"input","real")};return D.runKernel(Dl,t)}const Jr=O({real_:_C});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n){const t={x:N(n,"x","reciprocal")};return D.runKernel(Fl,t)}const nx=O({reciprocal_:AC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(n){const t={x:N(n,"x","relu")};return D.runKernel(Pl,t)}const fo=O({relu_:OC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n){const t={x:N(n,"x","relu6")};return D.runKernel(Ml,t)}const yh=O({relu6_:DC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(n,e){const r={x:N(n,"x","reverse")},s={dims:e};return D.runKernel(Ul,r,s)}const Hn=O({reverse_:FC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(n){const e=N(n,"x","reverse");return I(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Hn(e,0)}const rx=O({reverse1d_:PC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n,e){const t=N(n,"x","reverse");return I(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Hn(t,e)}const sx=O({reverse2d_:LC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n,e){const t=N(n,"x","reverse");return I(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Hn(t,e)}const ox=O({reverse3d_:BC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,e){const t=N(n,"x","reverse");return I(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Hn(t,e)}const ax=O({reverse4d_:VC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n){const t={x:N(n,"x","round")};return D.runKernel(Wl,t)}const xh=O({round_:MC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n){const t={x:N(n,"x","rsqrt","float32")};return D.runKernel(zl,t)}const ix=O({rsqrt_:UC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n){const t={x:N(n,"x","selu")};return D.runKernel(Kl,t)}const ux=O({selu_:WC});function zC(n,e,t,r,s,o=[1,1],a="NHWC"){const i=N(n,"x","separableConv2d"),u=N(e,"depthwiseFilter","separableConv2d"),c=N(t,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),I(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),I(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),I(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),I(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=u.shape[2],f=u.shape[3];I(c.shape[2]===h*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*f}, but got ${c.shape[2]}.`);const m=Ba(l,u,r,s,a,o),y=co(m,c,1,"valid",a);return d?G(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const cx=O({separableConv2d_:zC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function GC(n,e){const t=N(n,"x","setdiff1d"),r=N(e,"y","setdiff1d");I(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),I(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),I(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),o=await r.data(),a=new Set(o);let i=0;for(let l=0;l<s.length;l++)a.has(s[l])||i++;const u=new xr([i],t.dtype),c=new xr([i],"int32");for(let l=0,d=0;l<s.length;l++)a.has(s[l])||(u.values[d]=s[l],c.values[d]=l,d++);return[u.toTensor(),c.toTensor()]}const lx=GC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n){const t={x:N(n,"x","sign")};return D.runKernel(Zl,t)}const dx=O({sign_:HC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n){const t={x:N(n,"x","sin","float32")};return D.runKernel(Yl,t)}const hx=O({sin_:jC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n){const t={x:N(n,"x","sinh")};return D.runKernel(Ql,t)}const px=O({sinh_:qC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n,e,t){const r=N(n,"x","slice1d");return I(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Te(r,[e],[t])}const fx=O({slice1d_:KC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e,t){const r=N(n,"x","slice2d");return I(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Te(r,e,t)}const mx=O({slice2d_:XC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC(n,e,t){const r=N(n,"x","slice3d");return I(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Te(r,e,t)}const gx=O({slice3d_:YC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,e,t){const r=N(n,"x","slice4d");return I(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Te(r,e,t)}const yx=O({slice4d_:QC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return D.runKernel(od,r,s)}const xx=O({softmax_:ZC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Fc,e)}const za=O({fft_:JC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Hc,e)}const Ys=O({ifft_:eT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=G(n,[t,e]);r=Ys(s)}else{const s=[t,2*(e-1)],o=G(Jr(n),[t,e]),a=G(po(n),[t,e]),i=Hn(Te(o,[0,1],[t,e-2]),1),u=Q(Hn(Te(a,[0,1],[t,e-2]),1),he(-1)),c=Qe([o,i],1),l=Qe([a,u],1),d=G(Nn(c,l),[s[0],s[1]]);r=Ys(d)}if(r=Jr(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=G(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const bh=O({irfft_:tT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e,t=0){const s={x:N(n,"x","split")},o={numOrSizeSplits:e,axis:t};return D.runKernel(sd,s,o)}const es=O({split_:nT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e){I(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const m=n.shape.map(y=>0),x=n.shape.map(y=>y);x[n.shape.length-1]=e,s=Te(n,m,x),t=e}else if(e!=null&&e>t){const m=n.shape.map(x=>x);m[n.shape.length-1]=e-t,s=Qe([n,zn(m)],n.shape.length-1),t=e}else s=n;const o=wt(s),a=G(Nn(s,o),[r,t]),i=za(a),u=Math.floor(t/2)+1,c=Jr(i),l=po(i),d=es(c,[u,t-u],c.shape.length-1),h=es(l,[u,t-u],l.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,G(Nn(d[0],h[0]),f)}const Ga=O({rfft_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e){let t=N(n,"a","squaredDifference"),r=N(e,"b","squaredDifference");[t,r]=Pe(t,r),ye(t.shape,r.shape);const s={a:t,b:r},o={};return D.runKernel(dd,s,o)}const wh=O({squaredDifference_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e){const t=N(n,"x","squeeze","string_or_numeric");return G(t,En(t.shape,e).newShape)}const Dt=O({squeeze_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n,e=0){const t=Us(n,"tensors","stack","string_or_numeric");I(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&I(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return D.runKernel(Tl,r,s)}const hn=O({stack_:aT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,e=0){const r={x:N(n,"x","step")},s={alpha:e};return D.runKernel(Nd,r,s)}const vh=O({step_:iT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,e,t,r,s=0,o=0,a=0,i=0,u=0){const l={x:N(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(pd,l,d)}const bx=O({stridedSlice_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const t={x:N(n,"x","tan","float32")};return D.runKernel(xd,t)}const wx=O({tan_:cT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(n,e){Ir(n);const t=cn(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return jn(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(n,e,t){if(Ir(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=cn(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return jn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $h(n,e,t){if(Ir(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=cn(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return jn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vx(n,e,t){if(Ir(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=cn(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return jn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(n,e,t){if(Ir(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=cn(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return jn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sx(n,e,t){if(Ir(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=cn(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,jn(n,e,r,t)}function Sh(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function Ha(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Sh(t,e,n)}function mo(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let d=s;d<o;++d)a*=t[d];const i=s<1?1:s,u=q(e.shape)/i,c=[...Ge(t.slice(0,s)),1],l=q(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}const lT=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:mo,validateInput:Ha,validateUpdateShape:Sh},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n,e,t){const r=N(n,"tensor","tensorScatterupdate"),s=N(e,"indices","tensorScatterupdate","int32"),o=N(t,"updates","tensorScatterupdate");if(Ha(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const a={tensor:r,indices:s,updates:o},i={};return D.runKernel(Hl,a,i)}const Cx=O({tensorScatterUpdate_:dT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e=1,t=!0){const r=N(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[i,u]=D.runKernel(wd,o,a);return{values:i,indices:u}}const Tx=O({topk_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,e=0,t=1,r,s){if($t(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new mh(e,t,r,!0,s),a=De(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Nx=O({truncatedNormal_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,e=0){const t=N(n,"x","unique","string_or_numeric");I(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=D.runKernel($d,r,s);return{values:o,indices:a}}const Ex=O({unique_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e,t){const r=N(n,"x","unsortedSegmentSum"),s=N(e,"segmentIds","unsortedSegmentSum","int32");I(gr(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return D.runKernel(Cd,o,a)}const Ix=O({unsortedSegmentSum_:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,e=0){const t=N(n,"x","unstack","string_or_numeric");I(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return D.runKernel(Sd,r,s)}const qn=O({unstack_:gT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kx(n,e){return Ua(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rx(n,e=!0,t,r){return D.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=De(n,"int32"),s=De([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),i=o*n.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yT(n){const e=N(n,"condition","whereAsync","bool"),t=await e.data(),r=Ch(e.shape,t);return n!==e&&e.dispose(),r}const Th=yT;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xT(n,e,t){const r=N(n,"tensor","boolMask"),s=N(e,"mask","boolMask","bool"),o=t??0,a=s.rank,i=r.shape;I(a>0,()=>"mask cannot be scalar"),Ze(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let x=o;x<o+a;x++)u*=i[x];const c=i.slice(0,o).concat([u],i.slice(o+a)),l=G(r,c),d=G(s,[-1]),h=await Th(d),f=Dt(h,[1]),m=Qd(l,f,o);return n!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),l.dispose(),d.dispose(),h.dispose(),m}const _x=xT;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,e,t){const r=N(n,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),I(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{I(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?oe(()=>{let a=Jr(r),i=po(r);return a=D.runKernel(Fs,{x:a},o),i=D.runKernel(Fs,{x:i},o),t&&(i=Xt(i)),Nn(a,i)}):D.runKernel(Fs,s,o)}const Qs=O({transpose_:bT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n,e,t,r,s=!0){const o=N(n,"v","movingAverage"),a=N(e,"x","movingAverage"),i=N(t,"decay","movingAverage");fg(o,a),I(Ae(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=he(1),c=de(u,i);let l=Q(de(a,o),c);if(s){I(r!=null,()=>"When using zeroDebias: true, step is required.");const d=N(r,"step","movingAverage");l=Ee(l,de(u,Qr(i,d)))}return se(o,l)}const Ax=O({movingAverage_:wT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,e,t){$t(t);const r=N(n,"indices","scatterND","int32"),s=N(e,"updates","scatterND");Ha(s,r,t);const o={indices:r,updates:s},a={shape:t};return D.runKernel(Gl,o,a)}const Ox=O({scatterND_:vT});function $T(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t,r=0){$t(t);const s=N(n,"sparseIndices","sparseToDense","int32"),o=N(e,"sparseValues","sparseToDense","string_or_numeric"),a=N(r,"defaultValue","sparseToDense",o.dtype);$T(s,o,t,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:t};return D.runKernel(ld,i,u)}const Dx=O({sparseToDense_:ST});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n,e){const t=N(e,"indices","gatherND","int32"),s={params:N(n,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(Wc,s)}const Fx=O({gatherND_:CT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e){if(e==null)return n.shape.slice();if(Ae(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n,e,t,r){const s=N(n,"x","dropout");if(I(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),I(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Se?s.clone():s;const o=TT(s,t),a=1-e,i=Ee(Yd(se(Wa(o,0,1,"float32",r),a)),a);return Q(s,i)}const Px=O({dropout_:NT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function ja(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return Ct(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ET(n,e,t=1){const r=N(n,"predictions","inTopK"),s=N(e,"targets","inTopK");I(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),I(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Ze(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];I(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=await r.data(),i=await s.data(),[u,c]=[a.length/o,o],l=Cn("bool",u);for(let d=0;d<u;d++){const h=d*c,f=a.subarray(h,h+c),m=[];for(let x=0;x<f.length;x++)m.push({value:f[x],index:x});m.sort((x,y)=>y.value-x.value),l[d]=0;for(let x=0;x<t;x++)if(m[x].index===i[d]){l[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),Pt(l,s.shape,"bool")}const Lx=ET;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,e,t,r,s,o="NHWC",a){let i=n;n.rank===3&&(i=G(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=G(e,[1,e.shape[0],e.shape[1],e.shape[2]])),I(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),I(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),I(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];I(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),I(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Bt("conv2dDerFilter",s,a);const d={x:i,dy:u},h={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return D.runKernel(lc,d,h)}const kT=O({conv2DBackpropFilter_:IT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qa(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Q(n,vh(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Ka(n,e){let t=e;const r=Hd(n.shape,e.shape);return r.length>0&&(t=Re(t,r)),G(t,n.shape)}function Xa(n,e,t,r){if(e==="linear")return n;if(e==="relu")return fo(n);if(e==="elu")return jd(n);if(e==="relu6")return yh(n);if(e==="prelu")return dh(n,t);if(e==="leakyrelu")return Jd(n,r);if(e==="sigmoid")return an(n);throw new Error(`Unknown fused activation ${e}.`)}const Ya=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",Ya(D.state.gradientDepth,u)===!1){I(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let B=co(n,e,t,r,s,o,a);return i!=null&&(B=se(B,i)),Xa(B,u,c,l)}const d=N(n,"x","conv2d","float32"),h=N(e,"filter","conv2d","float32");let f=d,m=!1;d.rank===3&&(m=!0,f=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),I(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Bt("fused conv2d",r,a);const x=s==="NHWC"?f.shape[3]:f.shape[1];I(h.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${h.shape[2]}.`),I(St(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y=Nt(f.shape,h.shape,t,o,r,a);let b;i!=null&&(b=N(i,"bias","fused conv2d"),[b]=Pe(b,d),s==="NHWC"?ye(y.outShape,b.shape):(I(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),I(b.shape.length===0||b.shape[0]===y.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let $;if(c!=null){const B=c.shape;if(I(B.length<=1||B.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${B.length}.`),B.length===1)I(B[0]===1||B[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the number of output channels (${y.outChannels}).`);else if(B.length===3)try{ye(B,y.outShape)}catch{const V=`Error in fused conv2d: PReLU activation weights (${B}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(V)}$=N(c,"prelu weights","fused conv2d")}const E=(B,M)=>{I(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[V,P,F,T]=M,z=qa(B,F,u);I(Gs(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const H=ry(P.shape,z,V,t,r),K=kT(P,z,V.shape,t,r),Z=[H,K];if(T!=null){const te=Ka(T,z);Z.push(te)}return Z},C={x:f,filter:h,bias:b,preluActivationWeights:$},A={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?dn((M,V,P)=>{let F=D.runKernel(ga,C,A);return P([V,M,F]),m&&(F=G(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:E}})(f,h):dn((M,V,P,F)=>{let T=D.runKernel(ga,C,A);return F([V,M,T,P]),m&&(T=G(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:E}})(f,h,b)}const _T=O({fusedConv2d_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,e,t,r,s,o=[1,1],a){let i=n;n.rank===3&&(i=G(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return D.runKernel($c,c,l)}const OT=O({depthwiseConv2dNativeBackpropFilter_:AT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n,e,t,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},d=D.runKernel(Sc,c,l);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const FT=O({depthwiseConv2dNativeBackpropInput_:DT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(Ya(D.state.gradientDepth,u)===!1){let A=Ba(n,e,t,r,s,o,a);return i!=null&&(A=se(A,i)),Xa(A,u,c,l)}const d=N(n,"x","depthwiseConv2d","float32"),h=N(e,"filter","depthwiseConv2d","float32");let f=d,m=!1;d.rank===3&&(m=!0,f=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),I(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),I(f.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),o==null&&(o=[1,1]),I(St(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Bt("fused depthwiseConv2d",r,a);const x=Nt(f.shape,h.shape,t,o,r,a,!0);let y;i!=null&&(y=N(i,"bias","fused conv2d"),[y]=Pe(y,d),ye(x.outShape,y.shape));let b;c!=null&&(b=N(c,"prelu weights","fused depthwiseConv2d"));const $=(A,B)=>{I(Gs(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[M,V,P,F]=B,T=qa(A,P,u),z=FT(V.shape,T,M,t,r,o,a),H=OT(V,T,M.shape,t,r,o,a);if(F!=null){const K=Ka(y,T);return[z,H,K]}return[z,H]},E={x:f,filter:h,bias:y,preluActivationWeights:b},C={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?dn((B,M,V)=>{let P=D.runKernel(ya,E,C);return V([M,B,P]),m&&(P=G(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:$}})(f,h):dn((B,M,V,P)=>{let F=D.runKernel(ya,E,C);return P([M,B,F,V]),m&&(F=G(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:$}})(f,h,y)}const LT=O({fusedDepthwiseConv2d_:PT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Ya(D.state.gradientDepth,o)===!1){let T=ve(n,e,t,r);return s!=null&&(T=se(T,s)),Xa(T,o,a,i)}let u=N(n,"a","fused matMul"),c=N(e,"b","fused matMul");[u,c]=Pe(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=t?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),x=c.shape.slice(0,-2),y=q(m),b=q(x);I(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const E=ye(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,f]),C=t?G(u,[y,l,h]):G(u,[y,h,l]),A=r?G(c,[b,f,d]):G(c,[b,d,f]);let B;s!=null&&(B=N(s,"bias","fused matMul"),[B]=Pe(B,u),ye(E,B.shape));let M;a!=null&&(M=N(a,"prelu weights","fused matMul"));const V=(T,z)=>{const[H,K,Z,te]=z,ae=qa(G(T,Z.shape),Z,o);let ie,le;if(!t&&!r?(ie=ve(ae,K,!1,!0),le=ve(H,ae,!0,!1)):!t&&r?(ie=ve(ae,K,!1,!1),le=ve(ae,H,!0,!1)):t&&!r?(ie=ve(K,ae,!1,!0),le=ve(H,ae,!1,!1)):(ie=ve(K,ae,!0,!0),le=ve(ae,H,!0,!0)),s!=null){const fe=Ka(te,ae);return[ie,le,fe]}else return[ie,le]},P={a:C,b:A,bias:B,preluActivationWeights:M},F={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?dn((z,H,K)=>{const Z=D.runKernel(ma,P,F);return K([z,H,Z]),{value:G(Z,E),gradFunc:V}})(C,A):dn((z,H,K,Z)=>{const te=D.runKernel(ma,P,F);return Z([z,H,te,K]),{value:G(te,E),gradFunc:V}})(C,A,B)}const VT=O({fusedMatMul_:BT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx=Object.freeze(Object.defineProperty({__proto__:null,conv2d:_T,depthwiseConv2d:LT,matMul:VT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n){return ja(n,.54,.46)}const UT=O({hammingWindow_:MT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n){return ja(n,.5,.5)}const Vx=O({hannWindow_:WT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e,t,r=!1,s=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(Te(n,o,e)),o+=t;if(r)for(;o<n.size;){const i=o+e-n.size,u=Qe([Te(n,o,e-i),as([i],s)]);a.push(u),o+=t}return a.length===0?mr([],[0,e]):G(Qe(a),[a.length,e])}const Mx=O({frame_:zT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,e,t,r,s=Vx){r==null&&(r=Nh(e));const o=Mx(n,e,t),a=Q(o,s(e));return Ga(a,r)}const HT=O({stft_:GT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e,t,r,s="bilinear",o=0){const a=N(n,"image","cropAndResize"),i=N(e,"boxes","cropAndResize","float32"),u=N(t,"boxInd","cropAndResize","int32"),c=i.shape[0];I(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),I(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),I(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),I(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),I(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),I(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return D.runKernel(xc,l,d)}const qT=O({cropAndResize_:jT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n){const e=N(n,"image","flipLeftRight","float32");I(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(Lc,t,{})}const XT=O({flipLeftRight_:KT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];I(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),I(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,jr(e,s)}const QT=O({grayscaleToRGB_:YT});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n){const e=N(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];I(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),I(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=be(e,"float32"),a=Ct([.2989,.587,.114]);let i;switch(e.rank){case 2:i=ir("ij,j->i",o,a);break;case 3:i=ir("ijk,k->ij",o,a);break;case 4:i=ir("ijkl,l->ijk",o,a);break;case 5:i=ir("ijklm,m->ijkl",o,a);break;case 6:i=ir("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=dt(i,-1),be(i,s)}const JT=O({rgbToGrayscale_:ZT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e,t=0,r=.5){const s=N(n,"image","rotateWithOffset","float32");I(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return D.runKernel(Ed,o,a)}const tN=O({rotateWithOffset_:eN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),I(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),I(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),I(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),I(e.rank===1,()=>"scores must be a 1D tensor"),I(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),I(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=N(n,"boxes","nonMaxSuppression","float32"),a=N(e,"scores","nonMaxSuppression","float32"),i=us(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return D.runKernel(wl,{boxes:o,scores:a},u)}const rN=O({nonMaxSuppression_:nN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,e,t){const r=oN(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function oN(n,e,t){return iN(n,e,t||aN)}function aN(n,e){return n>e?1:n<e?-1:0}function iN(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=t(e,n[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eh(n,e,t,r,s){return Rh(n,e,t,r,s,0)}function Ih(n,e,t,r,s,o){return Rh(n,e,t,r,s,0,!1,o,!0)}function kh(n,e,t,r,s,o){return Rh(n,e,t,r,s,o,!0)}function Rh(n,e,t,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let y=0;y<e.length;y++)e[y]>s&&c.push({score:e[y],boxIndex:y,suppressBeginIndex:0});c.sort(vf);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<t&&c.length>0;){const y=c.pop(),{score:b,boxIndex:$,suppressBeginIndex:E}=y;if(b<s)break;let C=!1;for(let A=d.length-1;A>=E;--A){const B=uN(n,$,d[A]);if(B>=r){C=!0;break}if(y.score=y.score*cN(r,l,B),y.score<=s)break}y.suppressBeginIndex=d.length,C||(y.score===b?(d.push($),h.push(y.score)):y.score>s&&sN(c,y,vf))}const f=d.length,m=t-f;i&&m>0&&(d.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));const x={selectedIndices:d};return a&&(x.selectedScores=h),u&&(x.validOutputs=f),x}function uN(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),f=(i-o)*(u-a),m=(d-c)*(h-l);if(f<=0||m<=0)return 0;const x=Math.max(o,c),y=Math.max(a,l),b=Math.min(i,d),$=Math.min(u,h),E=Math.max(b-x,0)*Math.max($-y,0);return E/(f+m-E)}function cN(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function vf(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function lN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),i=us(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:d}=Eh(c,l,t,r,s);return o!==n&&o.dispose(),a!==e&&a.dispose(),Ct(d,"int32")}const dN=lN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),u=us(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},d=D.runKernel($l,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const pN=O({nonMaxSuppressionWithScore_:hN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=N(n,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),u=us(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:f}=kh(l,d,t,r,s,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ct(h,"int32"),selectedScores:Ct(f)}}const mN=fN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=N(n,"boxes","nonMaxSuppression"),i=N(e,"scores","nonMaxSuppression"),u=us(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:a,scores:i},f={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},m=D.runKernel(vl,h,f);return{selectedIndices:m[0],validOutputs:m[1]}}const yN=O({nonMaxSuppressionPadded_:gN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=N(n,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),u=us(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:m,validOutputs:x}=Ih(h,f,c,l,d,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ct(m,"int32"),validOutputs:he(x,"int32")}}const bN=xN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e,t=!1,r=!1){const s=N(n,"images","resizeBilinear");I(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),I(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),I(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=G(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=D.runKernel(Vl,i,u);return a?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const vN=O({resizeBilinear_:wN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,e,t=!1,r=!1){const s=N(n,"images","resizeNearestNeighbor");I(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),I(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),I(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),I(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=G(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=D.runKernel(Bl,i,u);return a?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const SN=O({resizeNearestNeighbor_:$N});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n,e="binary",t=!1,r=.5){const s=N(n,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=Q(Ct([r]),255),l,d,h,f;if(I(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),I(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),I(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),I(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,d,h]=es(s,[1,1,1],-1);const y=Q(l,o),b=Q(d,a),$=Q(h,i);f=se(se(y,b),$)}else f=n;if(e==="otsu"){const y=Gd(be(xh(f),"int32"),Pt([]),256);c=TN(y,u)}const m=t?Va(f,c):is(f,c);return be(Q(m,255),"int32")}function TN(n,e){let t=Ct([-1]),r=Ct([0]),s=Ct([0]),o,a,i,u,c,l;for(let d=0;d<n.size-1;d++){o=Te(n,0,d+1),a=Te(n,d+1),c=Ee(Re(o),e),l=Ee(Re(a),e);const h=Re(Q(o,Gn(0,o.size)));i=Ee(h,Re(o));const f=as(a.shape,o.size),m=se(Gn(0,a.size),f),x=Q(a,m);u=Ee(Re(x),Re(a));const y=de(i,u),b=de(i,u),$=Q(c,l);s=Q(Q($,y),b);const E=is(s,r);r=Sn(E,s,r),t=Sn(E,Ct([d]),t)}return t}const NN=O({threshold_:CN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,e,t="nearest",r="constant",s=0,o){const a=N(n,"image","transform","float32"),i=N(e,"transforms","transform","float32");I(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),I(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),I(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return D.runKernel(vd,u,c)}const IN=O({transform_:EN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,e,t){const r=N(n,"a","bandPart");I(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?(I(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),I(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=N(e<0?o:e,"numLower","bandPart")):(I(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Sn(va(e,0),o,Ks(e,o))),typeof t=="number"?(I(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),I(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),u=N(t<0?a:t,"numUpper","bandPart")):(I(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Sn(va(t,0),a,Ks(t,a)));const c=G(Gn(0,o,1,"int32"),[-1,1]),l=Gn(0,a,1,"int32"),d=de(c,l),h=js(Va(d,i),Zd(d,Xt(u))),f=zn([o,a],r.dtype);return G(hn(qn(G(r,[-1,o,a])).map(m=>Sn(h,m,f))),s)}const RN=O({bandPart_:kN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n){let e;if(Array.isArray(n)){e=!1,I(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)I(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=es(n,n.shape[0],0).map(s=>Dt(s,[0]));I(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(D.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=Q(Re(Q(t[a],o)),t[a]);o=de(o,i)}return Ee(o,ho(o,"euclidean"))}));return e?hn(t,0):t}const AN=O({gramSchmidt_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,e=!1){if(I(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return $f(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=qn(G(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=$f(u,e);s.push(c),o.push(l)});const a=G(hn(s,0),n.shape),i=G(hn(o,0),n.shape);return[a,i]}}function $f(n,e=!1){return D.tidy(()=>{I(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Xd(t),o=$n(n);const a=mr([[1]],[1,1]);let i=$n(a);const u=t>=r?r:t;for(let c=0;c<u;++c){const l=o,d=i,h=s;[i,o,s]=D.tidy(()=>{const f=Te(o,[c,c],[t-c,1]),m=ho(f),x=Te(o,[c,c],[1,1]),y=Sn(is(x,0),mr([[-1]]),mr([[1]])),b=de(x,Q(y,m)),$=Ee(f,b);$.shape[0]===1?i=$n(a):i=Qe([a,Te($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const E=Xt(Ee(ve(y,b),m)),C=Te(o,[c,0],[t-c,r]),A=Q(E,i),B=Qs(i);if(c===0)o=de(C,ve(A,ve(B,C)));else{const P=de(C,ve(A,ve(B,C)));o=Qe([Te(o,[0,0],[c,r]),P],0)}const M=Qs(A),V=Te(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=de(V,ve(ve(V,i),M));else{const P=de(V,ve(ve(V,i),M));s=Qe([Te(s,[0,0],[t,c]),P],1)}return[i,o,s]}),ot([l,d,h])}return!e&&t>r&&(s=Te(s,[0,0],[t,r]),o=Te(o,[0,0],[r,r])),[s,o]})}const DN=O({qr_:ON});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(rt||(rt={}));function FN(n,e,t=rt.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=N(e,"weights","computeWeightedLoss"));const o=s==null?r:Q(r,s);if(t===rt.NONE)return o;if(t===rt.SUM)return Re(o);if(t===rt.MEAN){if(s==null)return qs(o);{const a=r.size/s.size,i=Ee(Re(o),Re(s));return a>1?Ee(i,he(a)):i}}if(t===rt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Ee(Re(o),he(r.size));{const a=Q(s,Pn(r.shape)),i=be(Re(uh(a,he(0))),"float32");return Ee(Re(o),i)}}throw Error(`Unknown reduction: ${t}`)}const In=O({computeWeightedLoss_:FN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n,e,t,r=rt.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","absoluteDifference"),o=N(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=N(t,"weights","absoluteDifference")),Ze(s.shape,o.shape,"Error in absoluteDifference: ");const i=bt(de(s,o));return In(i,a,r)}const LN=O({absoluteDifference_:PN});function BN(n,e,t,r,s=rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","cosineDistance"),a=N(e,"predictions","cosineDistance");let i=null;r!=null&&(i=N(r,"weights","cosineDistance")),Ze(o.shape,a.shape,"Error in cosineDistance: ");const u=he(1),c=de(u,Re(Q(o,a),t,!0));return In(c,i,s)}const VN=O({cosineDistance_:BN});function MN(n,e,t,r=rt.SUM_BY_NONZERO_WEIGHTS){let s=N(n,"labels","hingeLoss");const o=N(e,"predictions","hingeLoss");let a=null;t!=null&&(a=N(t,"weights","hingeLoss")),Ze(s.shape,o.shape,"Error in hingeLoss: ");const i=he(1);s=de(Q(he(2),s),i);const u=fo(de(i,Q(s,o)));return In(u,a,r)}const UN=O({hingeLoss_:MN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n,e,t,r=1,s=rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","huberLoss"),a=N(e,"predictions","huberLoss");let i=null;t!=null&&(i=N(t,"weights","huberLoss")),Ze(o.shape,a.shape,"Error in huberLoss: ");const u=he(r),c=bt(de(a,o)),l=Ks(c,u),d=de(c,l),h=se(Q(he(.5),Lt(l)),Q(u,d));return In(h,i,s)}const zN=O({huberLoss_:WN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n,e,t,r=1e-7,s=rt.SUM_BY_NONZERO_WEIGHTS){const o=N(n,"labels","logLoss"),a=N(e,"predictions","logLoss");let i=null;t!=null&&(i=N(t,"weights","logLoss")),Ze(o.shape,a.shape,"Error in logLoss: ");const u=he(1),c=he(r),l=Xt(Q(o,Zr(se(a,c)))),d=Q(de(u,o),Zr(se(de(u,a),c))),h=de(l,d);return In(h,i,s)}const HN=O({logLoss_:GN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,e,t,r=rt.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"labels","meanSquaredError"),o=N(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=N(t,"weights","meanSquaredError")),Ze(s.shape,o.shape,"Error in meanSquaredError: ");const i=wh(s,o);return In(i,a,r)}const qN=O({meanSquaredError_:jN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e){const t=N(n,"labels","sigmoidCrossEntropyWithLogits"),r=N(e,"logits","sigmoidCrossEntropyWithLogits");Ze(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=fo(r),o=Q(r,t),a=eh(Wn(Xt(bt(r))));return se(de(s,o),a)}function XN(n,e,t,r=0,s=rt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"multiClassLabels","sigmoidCrossEntropy");const a=N(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","sigmoidCrossEntropy")),Ze(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=he(r),l=he(1),d=he(.5);o=se(Q(o,de(l,c)),Q(d,c))}const u=KN(o,a);return In(u,i,s)}const YN=O({sigmoidCrossEntropy_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return dn((s,o,a)=>{const u=nh(o,[t],!0),c=de(be(o,"float32"),u);a([s,c]);const l=Xt(Q(c,s));return{value:Re(l,[t]),gradFunc:(f,m)=>{const[x,y]=m,b=Et(f.shape,[t]);return[Q(G(f,b),de(be(x,"float32"),Wn(y))),Q(G(f,b),de(Wn(y),be(x,"float32")))]}}})(n,e)}function ZN(n,e,t,r=0,s=rt.SUM_BY_NONZERO_WEIGHTS){let o=N(n,"onehotLabels","softmaxCrossEntropy");const a=N(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=N(t,"weights","softmaxCrossEntropy")),Ze(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const c=he(r),l=he(1),d=he(o.shape[1]);o=se(Q(o,de(l,c)),Ee(c,d))}const u=QN(o,a);return In(u,i,s)}const JN=O({softmaxCrossEntropy_:ZN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,e,t,r){const s=N(n,"indices","sparseFillEmptyRows","int32"),o=N(e,"values","sparseFillEmptyRows"),a=N(t,"denseShape","sparseFillEmptyRows","int32"),i=N(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},c=D.runKernel(ad,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const tE=O({sparseFillEmptyRows_:eE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,e,t){const r=N(n,"inputIndices","sparseReshape","int32"),s=N(e,"inputShape","sparseReshape","int32"),o=N(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=D.runKernel(id,a);return{outputIndices:i[0],outputShape:i[1]}}const rE=O({sparseReshape_:nE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e,t){const r=N(n,"data","sparseSegmentMean"),s=N(e,"indices","sparseSegmentMean","int32"),o=N(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(ud,a)}const oE=O({sparseSegmentMean_:sE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,e,t){const r=N(n,"data","sparseSegmentSum"),s=N(e,"indices","sparseSegmentSum","int32"),o=N(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(cd,a)}const iE=O({sparseSegmentSum_:aE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n,e,t,r,s,o,a,i){const u=N(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=N(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:u,dataSplits:c},h=D.runKernel(fd,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}const cE=O({stringNGrams_:uE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,e,t=!0){const r=N(n,"input","stringSplit","string"),s=N(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:t},a={input:r,delimiter:s},i=D.runKernel(md,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const dE=O({stringSplit_:lE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,e){const t=N(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return D.runKernel(gd,s,r)}const pE=O({stringToHashBucketFast_:hE});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,e,t,r=!0){const s=N(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:r};return D.runKernel(hd,{x:s},o)}const mE=O({staticRegexReplace_:fE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ux={fft:za,ifft:Ys,rfft:Ga,irfft:bh},Wx={hammingWindow:UT,hannWindow:Vx,frame:Mx,stft:HT},Sr={flipLeftRight:XT,grayscaleToRGB:QT,resizeNearestNeighbor:SN,resizeBilinear:vN,rgbToGrayscale:JT,rotateWithOffset:tN,cropAndResize:qT,nonMaxSuppression:rN,nonMaxSuppressionAsync:dN,nonMaxSuppressionWithScore:pN,nonMaxSuppressionWithScoreAsync:mN,nonMaxSuppressionPadded:yN,nonMaxSuppressionPaddedAsync:bN,threshold:NN,transform:IN},zx={bandPart:RN,gramSchmidt:AN,qr:DN},Gx={absoluteDifference:LN,computeWeightedLoss:In,cosineDistance:VN,hingeLoss:UN,huberLoss:zN,logLoss:HN,meanSquaredError:qN,sigmoidCrossEntropy:YN,softmaxCrossEntropy:JN},Hx={sparseFillEmptyRows:tE,sparseReshape:rE,sparseSegmentMean:oE,sparseSegmentSum:iE},jx={stringNGrams:cE,stringSplit:dE,stringToHashBucketFast:pE,staticRegexReplace:mE};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE=new Map,hu=new Map;class qx{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Dn{constructor(){this.classNameMap={}}static getMap(){return Dn.instance==null&&(Dn.instance=new Dn),Dn.instance}static register(e){Dn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Kx(n,e,t){I(n.className!=null,()=>"Class being registered does not have the static className property defined."),I(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),I(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Dn.register(n),gE.set(s,n),hu.set(n,s),n}function yE(n){return hu.has(n)?hu.get(n):n.className}const xE=Object.freeze(Object.defineProperty({__proto__:null,Serializable:qx,SerializationMap:Dn,getRegisteredName:yE,registerClass:Kx},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kn extends qx{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return ot(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Iy(e,t)}dispose(){this.iterations_!=null&&ot(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:he(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Kn,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _h extends Kn{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:oe(()=>wt(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:oe(()=>wt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;oe(()=>{const l=se(Q(u,this.rho),Q(Lt(i),1-this.rho)),d=Q(Ee(ln(se(c,this.epsilon)),ln(se(u,this.epsilon))),i),h=se(Q(c,this.rho),Q(Lt(d),1-this.rho));u.assign(l),c.assign(h);const f=se(Q(d,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ot(this.accumulatedGrads.map(e=>e.variable)),ot(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ah extends Kn{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:oe(()=>as(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;oe(()=>{const u=se(i,Lt(a));i.assign(u);const c=se(Q(Ee(a,ln(se(u,D.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ot(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oh extends Kn{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],oe(()=>{this.accBeta1=he(t).variable(),this.accBeta2=he(r).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);oe(()=>{const r=de(1,this.accBeta1),s=de(1,this.accBeta2);t.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:oe(()=>wt(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:oe(()=>wt(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=se(Q(l,this.beta1),Q(c,1-this.beta1)),f=se(Q(d,this.beta2),Q(Lt(c),1-this.beta2)),m=Ee(h,r),x=Ee(f,s);l.assign(h),d.assign(f);const y=se(Q(Ee(m,se(ln(x),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(Q(this.accBeta1,this.beta1)),this.accBeta2.assign(Q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ot(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ot(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),oe(()=>{this.accBeta1.assign(Qr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Qr(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dh extends Kn{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],oe(()=>{this.iteration=he(0).variable(),this.accBeta1=he(t).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);oe(()=>{const r=de(1,this.accBeta1),s=Ee(-this.learningRate,se(Q(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:wt(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:wt(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=se(Q(l,this.beta1),Q(c,1-this.beta1)),f=Q(d,this.beta2),m=bt(c),x=ah(f,m);l.assign(h),d.assign(x);const y=se(Q(Ee(s,r),Ee(h,se(x,this.epsilon))),i);i.assign(y)}),this.iteration.assign(se(this.iteration,1)),this.accBeta1.assign(Q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ot(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ot(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qa extends Kn{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=D.registeredVariables[r];oe(()=>{const i=se(Q(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Kt(he(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fh extends Qa{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=he(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:oe(()=>wt(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&oe(()=>{let u;const c=se(Q(this.m,a),i);this.useNesterov?u=se(Q(this.c,se(i,Q(c,this.m))),o):u=se(Q(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ot(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ph extends Kn{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:oe(()=>wt(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:oe(()=>wt(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:oe(()=>wt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;oe(()=>{const l=se(Q(u,this.decay),Q(Lt(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[s].variable,h=se(Q(d,this.decay),Q(i,1-this.decay)),f=Ee(Q(i,this.learningRate),ln(de(l,se(Lt(h),this.epsilon)))),m=se(Q(c,this.momentum),f);u.assign(l),d.assign(h),c.assign(m);const x=de(o,m);o.assign(x)}else{const d=se(Q(u,this.decay),Q(Lt(i),1-this.decay)),h=se(Q(c,this.momentum),Ee(Q(i,this.learningRate),ln(se(d,this.epsilon))));u.assign(d),c.assign(h);const f=de(o,h);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ot(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ot(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ot(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=[_h,Ah,Oh,Dh,Fh,Ph,Qa];function wE(){for(const n of bE)Kx(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE="model",$E=".json",SE=".weights.bin";function Sf(n){return new Promise(e=>setTimeout(e)).then(n)}class Cr{constructor(e){if(!U().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Cr.URL_SCHEME)&&(e=e.slice(Cr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=vE),this.modelJsonFileName=e+$E,this.weightDataFileName=e+SE}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Zt.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=$g(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Sf(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Sf(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:oo(e)}}}}Cr.URL_SCHEME="downloads://";class CE{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=Ld(o,c=>this.loadWeights(c));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;r(i)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(o=>hf(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const i=hf(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const TE=n=>U().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Cr.URL_SCHEME)?NE(n.slice(Cr.URL_SCHEME.length)):null;Fe.registerSaveRouter(TE);function NE(n="model"){return new Cr(n)}function EE(n){return new CE(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cf(n,e,t,r){a(n),t=t??0,r=r??1,i(t,r);let s=0;const o=u=>(u.then(c=>{const l=t+ ++s/n.length*(r-t);return e(l),c}),u);function a(u){I(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){I(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),I(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),I(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Xx(n,e){e==null&&(e={});const t=e.fetchFunc==null?U().platform.fetch:e.fetchFunc,r=n.map(d=>t(d,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(r):await Cf(r,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(i):await Cf(i,e.onProgress,.5,1)}function IE(n,e){var t;const r=e.fetchFunc==null?U().platform.fetch:e.fetchFunc;let s=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var i;s<n.length;){o||(o=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await o.read();if(u){s++,o=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,s/n.length);continue}a.enqueue(c);return}a.close()}})}async function kE(n,e="",t,r){return Yx(a=>Xx(a,{requestInit:r}))(n,e,t)}function Yx(n){return async(e,t="",r)=>{const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],i=[];if(e.forEach((f,m)=>{let x=0;f.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,$=br[b]*q(y.shape),E=()=>{s[m]=!0,o[m]==null&&(o[m]=[]),o[m].push({manifestEntry:y,groupOffset:x,sizeBytes:$})};r!=null?r.forEach((C,A)=>{C===y.name&&(E(),a[A]=!0)}):E(),i.push(y.name),x+=$})}),!a.every(f=>f)){const f=r.filter((m,x)=>!a[x]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce((f,m,x)=>(m&&f.push(x),f),[]),c=[];u.forEach(f=>{e[f].paths.forEach(m=>{const x=t+(t.endsWith("/")?"":"/")+m;c.push(x)})});const l=await n(c),d={};let h=0;return u.forEach(f=>{const m=e[f].paths.length,x=new Zt(l.slice(h,h+m));o[f].forEach(b=>{const $=x.slice(b.groupOffset,b.groupOffset+b.sizeBytes),E=bg($,[b.manifestEntry]);for(const C in E)d[C]=E[C]}),h+=m}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE="application/octet-stream",_E="application/json";class Lh{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(I(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=U().platform.fetch,I(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&I(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=$g(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:_E}),"model.json"),e.weightData!=null){const a=Zt.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:RE}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:oo(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Ld(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=au(e.weightsManifest),s=()=>IE(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=AE(t),o=this.weightPathPrefix||r,a=[],i=[];for(const u of e)for(const c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):a.push(o+c+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=au(e),s=await Xx(t,this.loadOptions);return[r,s]}}Lh.URL_SCHEME_REGEX=/^https?:\/\//;function AE(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function pu(n){return n.match(Lh.URL_SCHEME_REGEX)!=null}const Qx=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>pu(r)):t=pu(n),t)return Bh(n,e)}return null};Fe.registerSaveRouter(Qx);Fe.registerLoadRouter(Qx);function Bh(n,e){return new Lh(n,e)}function OE(n,e){return Bh(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pi{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Zx{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class DE{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function FE(n,e,t,r){const s=arguments;return new DE(Jx(...s))}function Jx(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Pi(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Pi({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Pi({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function PE(n){return new Zx(n)}function LE(n){return new Zx(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vh=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Zt,browserFiles:EE,browserHTTPRequest:OE,concatenateArrayBuffers:Lv,copyModel:o$,decodeWeights:bg,decodeWeightsStream:vg,encodeWeights:_v,fromMemory:FE,fromMemorySync:Jx,getLoadHandlers:Hv,getModelArtifactsForJSON:Ld,getModelArtifactsForJSONSync:Sg,getModelArtifactsInfoForJSON:oo,getSaveHandlers:Gv,getWeightSpecs:au,http:Bh,isHTTPScheme:pu,listModels:r$,loadWeights:kE,moveModel:a$,registerLoadRouter:zv,registerSaveRouter:Wv,removeModel:s$,weightsLoaderFactory:Yx,withSaveHandler:PE,withSaveHandlerSync:LE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e,t){const r=N(n,"labels","confusionMatrix"),s=N(e,"predictions","confusionMatrix");I(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),I(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),I(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),I(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),I(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=Xs(be(r,"int32"),t),a=Xs(be(s,"int32"),t),i=Qs(o),u=ve(i,a);return be(u,"int32")}const VE=O({confusionMatrix_:BE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:VE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rr,Tf=!1;function e0(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Vs(fa,D.backendName)!=null){const m={pixels:n},x={numChannels:e};return D.runKernel(fa,m,x)}const[c,l]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(a)d=n.getContext("2d").getImageData(0,0,c,l).data;else if(r||t)d=n.data;else if(o||s||i){if(rr==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")rr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else rr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});rr.canvas.width=c,rr.canvas.height=l,rr.drawImage(n,0,0,c,l),d=rr.getImageData(0,0,c,l).data}let h;if(e===4)h=new Int32Array(d);else{const m=c*l;h=new Int32Array(m*e);for(let x=0;x<m;x++)for(let y=0;y<e;++y)h[x*e+y]=d[x*4+y]}return $h(h,[l,c,e],"int32")}function UE(n){return n!=null&&n.data instanceof Uint8Array}function WE(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function zE(n){return n!=null&&n.width!==0&&n.height!==0}function GE(n){return WE()&&!(n instanceof ImageBitmap)&&zE(n)&&!UE(n)}async function HE(n,e=3){let t=null;if(U().getBool("WRAP_TO_IMAGEBITMAP")&&GE(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return e0(t,e)}function t0(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function jE(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function go(n,e){let t=N(n,"img","toPixels");if(!(n instanceof Se)){const c=t;t=be(c,"int32"),c.dispose()}t0(t);const[r,s]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const l=[0,0,0,255];for(let h=0;h<o;h++){const f=a[c*o+h];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);o===1?(l[0]=f*i,l[1]=f*i,l[2]=f*i):l[h]=f*i}const d=c*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(e!=null){Tf||Vs(Nc,D.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Tf=!0),e.width=s,e.height=r;const c=e.getContext("2d"),l=new ImageData(u,s,r);c.putImageData(l,0,0)}return t!==n&&t.dispose(),u}function qE(n,e,t){let r=N(n,"img","draw");if(!(n instanceof Se)){const a=r;r=be(a,"int32"),a.dispose()}t0(r),jE(t==null?void 0:t.imageOptions);const s={image:r},o={canvas:e,options:t};D.runKernel(Nc,s,o)}const Za=O({fromPixels_:e0}),KE=Object.freeze(Object.defineProperty({__proto__:null,draw:qE,fromPixels:Za,fromPixelsAsync:HE,toPixels:go},Symbol.toStringTag,{value:"Module"}));function Mh(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(q(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let d=0;d<s.length-1;++d)a*=s[d];const i=n.shape,u=s.slice();u.pop();let c=1;for(let d=o;d<t;++d)c*=i[d],u.push(i[d]);const l=[...Ge(n.shape).map(d=>d/c),1].slice(0,o);return[u,a,c,l]}const XE=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Mh},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fu=-2,YE=-1;function n0(n,e,t){const r=n.shape.length;I(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),I(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)I(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function QE(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function r0(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function s0(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function o0(n,e,t){return t<=n?t:t-(e-1)}function a0(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function ZE(n,e,t,r,s,o,a,i,u){const c=n.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(e.length&&t>0){const f=e[0],m=t+1;l=i0(a,f,m,r,n),d=u0(i,f,m,s,n),h=s0(o,f,m,n)}else for(let f=0;f<c;f++)l[f]=l0(a,r,o,n,f,u),d[f]=d0(i,s,o,n,f,u),h[f]=c0(o,f,u);return{begin:l,end:d,strides:h}}function i0(n,e,t,r,s){const o=[...s],a=a0(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=o0(e,t,i);let c=r[u];n&1<<u&&(c=0),o[i]=c}return o}function u0(n,e,t,r,s){const o=[...s],a=a0(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=o0(e,t,i);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=Ps(0,o[i],s[i])}return o}function c0(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function l0(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Ps(0,a,u-1),a}function d0(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=Ps(0,a,u):a=Ps(-1,a,u-1),a}function Uh(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function Wh(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function h0(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{I(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(I(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-r[i])),[r,o]}function p0(n,e,t,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let E=0;E<d.dims;E++)l&&1<<E&i&&d.numAddAxisAfterEllipsis++,1<<E&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};JE(d,h);let f=!0,m=!0,x=!0;const y=[],b=[];for(let E=0;E<n.length;++E){if(h.strides[E]===0)throw Error(`strides[${E}] must be non-zero`);const C=!!(h.shrinkAxisMask&1<<E),A=n[E];if(A===-1){y.push(C?1:-1);continue}const B=[h.beginMask&1<<E,h.endMask&1<<E],M=[h.strides[E]>0?0:-1,h.strides[E]>0?A:A-1];if(C&&h.strides[E]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&h.strides[E]===1;const V=!!(h.beginMask&1<<E&&h.endMask&1<<E);if(h.beginValid&&h.endValid){if(C){const z=h.begin[E]<0?A+h.begin[E]:h.begin[E];if(h.begin[E]=z,h.end[E]=h.begin[E]+1,z<0||z>=A)throw Error(`slice index ${h.begin[E]} of dimension ${E} out of bounds.`)}else h.begin[E]=Nf(h.begin[E],0,h.strides[E],A,B,M),h.end[E]=Nf(h.end[E],1,h.strides[E],A,B,M);const T=h.strides[E]===1&&h.begin[E]===0&&h.end[E]===A;f=f&&T,m=m&&(E===0&&h.strides[E]===1||T)}else f=f&&h.strides[E]===1&&V,m=m&&(E===0&&h.strides[E]===1||V);let P,F=!1;if(h.beginValid&&h.endValid?(P=h.end[E]-h.begin[E],F=!0):C?(P=1,F=!0):V&&A>=0&&(h.strides[E]<0?P=-A:P=A,F=!0),F){let T;P===0||P<0!=h.strides[E]<0?T=0:T=Math.trunc(P/h.strides[E])+(P%h.strides[E]!==0?1:0),y.push(T)}else y.push(-1)}for(let E=0;E<h.finalShapeGatherIndices.length;++E){const C=h.finalShapeGatherIndices[E];C>=0?b.push(y[C]):C===fu&&b.push(1)}return{finalShapeSparse:b.filter((E,C)=>h.finalShapeGatherIndices[C]!==fu),finalShape:b,isIdentity:f,sliceDim0:m,isSimpleSlice:x,begin:h.begin,end:h.end,strides:h.strides}}function JE(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(fu),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(YE),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function Nf(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const f0=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:n0,computeFlatOffset:Wh,computeOutShape:r0,getNormalizedAxes:ZE,isSliceContinous:Uh,maskToAxes:QE,parseSliceParams:h0,sliceInfo:p0,startForAxis:l0,startIndicesWithElidedDims:i0,stopForAxis:d0,stopIndicesWithElidedDims:u0,stridesForAxis:c0,stridesWithElidedDims:s0},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const eI="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m0{static sgd(e){return new Qa(e)}static momentum(e,t,r=!1){return new Fh(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new Ph(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new Oh(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new _h(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new Dh(e,t,r,s,o)}static adagrad(e,t=.1){return new Ah(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=m0;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function g0(){return new Promise(n=>nI(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y0(n,e){const t=n[0].length;n.forEach((s,o)=>{I(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),I(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)I(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function Tr(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jt;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(jt||(jt={}));function x0(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${i}`)}else r[a]=o}return r}function b0(n){const e={FIRST_DIM_SIZE:jt.FIRST_DIM_SIZE,VALUE_ROWIDS:jt.VALUE_ROWIDS,ROW_LENGTHS:jt.ROW_LENGTHS,ROW_SPLITS:jt.ROW_SPLITS,ROW_LIMITS:jt.ROW_LIMITS,ROW_STARTS:jt.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function w0(n){return n.length===0?0:n[0]===jt.FIRST_DIM_SIZE?n.length-1:n.length}function v0(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zh=30;function Ja(n){return n<=zh?n:ha(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gh(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function Hh(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function jh(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function S0(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function C0(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T0=1.7580993408473768,N0=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E0=.3275911,I0=.254829592,k0=-.284496736,R0=1.421413741,_0=-1.453152027,A0=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mu(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function rI(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function sI(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function oI(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function aI(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function iI(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function uI(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function cI(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Li="->",lI=/->/g,Ef=",",If="...";function O0(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(lI,"").length)/Li.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Li}").`);const[r,s]=n.split(Li);I(r.indexOf(If)===-1,()=>`The ellipsis notation ("${If}") is not supported yet.`);const o=r.split(Ef),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const f=s[h];if(!o.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);i.indexOf(f)===-1&&i.push(f)}for(let h=0;h<r.length;++h){const f=r[h];i.indexOf(f)===-1&&f!==Ef&&i.push(f)}const u=new Array(o.length);for(let h=0;h<a;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let f=0;f<o[h].length;++f)u[h].push(i.indexOf(o[h][f]))}const c=i.length,l=s.length,d=[];for(let h=l;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:u}}function D0(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function F0(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:I(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function P0(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],u=dI(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:t,steps:r}}function L0(n){return n.every((e,t)=>e===t)}function dI(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function B0(n,e,t=0){let r=[];if(typeof e=="number")I(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);I(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=n.shape[t]-a}I(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function M0(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function U0(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function z0(n,e){return`size ${n} must be non-negative, not ${e}`}function G0(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function H0(n,e){const t=q(n),r=q(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function j0(n,e){const t=q(n),r=q(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(){return"segment ids must be >= 0"}function q0(){return"segment ids are not increasing"}function K0(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function X0(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n,e){let t=!1,r;for(n<=zh?(r=n,t=!0):r=ha(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=ha(n,r+1);return r}function Q0(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function Z0(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let d=0;d<r;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)i.push(n.shape[d]),u*=n.shape[d];for(let d=r;d<t;d++)i.push(n.shape[d]),c*=n.shape[d];for(let d=r;d<s;d++)i.push(e.shape[d]);for(let d=t+1;d<o;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const hI=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Z0,computeOutShape:Q0,segOpComputeOptimalWindowSize:Y0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(n){try{return n.map(e=>yr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function J0(n){return n.map(e=>vn(e))}const eb=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:I0,ERF_A2:k0,ERF_A3:R0,ERF_A4:_0,ERF_A5:A0,ERF_P:E0,PARALLELIZE_THRESHOLD:zh,get RowPartitionType(){return jt},SELU_SCALE:N0,SELU_SCALEALPHA:T0,applyActivation:Xa,assertAndGetBroadcastShape:ye,assertAxesAreInnerMostDims:Jt,assertParamsConsistent:y0,assignToTypedArray:iI,axesAreInnerMostDims:qd,calculateShapes:mo,checkEinsumDimSizes:F0,checkPadOnDimRoundingMode:Bt,combineLocations:by,combineRaggedTensorToTensorShapes:x0,complexWithEvenIndex:sI,complexWithOddIndex:oI,computeConv2DInfo:Nt,computeConv3DInfo:io,computeDefaultPad:Ud,computeDilation2DInfo:Wg,computeOptimalWindowSize:Ja,computeOutAndReduceShapes:pn,computeOutShape:Tr,computePool2DInfo:Rr,computePool3DInfo:ao,convertConv2DDataFormat:os,decodeEinsumEquation:O0,eitherStridesOrDilationsAreOne:St,expandShapeToKeepDim:Et,exponent:cI,exponents:uI,fromStringArrayToUint8:J0,fromUint8ToStringArray:ts,getAxesPermutation:Vt,getBroadcastDims:Hs,getComplexWithIndex:aI,getEinsumComputePath:P0,getEinsumPermutation:D0,getFusedBiasGradient:Ka,getFusedDyActivation:qa,getImageCenter:$0,getInnerMostAxes:Mt,getPermuted:Hh,getRaggedRank:w0,getReductionAxes:Hd,getReshaped:Gh,getReshapedPermuted:jh,getRowPartitionTypesHelper:b0,getSliceBeginCoords:S0,getSliceSize:C0,getSparseFillEmptyRowsIndicesDenseShapeMismatch:V0,getSparseFillEmptyRowsNegativeIndexErrorMessage:M0,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:U0,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:G0,getSparseReshapeInputOutputMismatchErrorMessage:j0,getSparseReshapeInputOutputMultipleErrorMessage:H0,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:W0,getSparseReshapeNegativeOutputDimErrorMessage:z0,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:X0,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:gu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:q0,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:K0,getUndoAxesPermutation:Kd,isIdentityPermutation:L0,log:Fw,mergeRealAndImagArrays:mu,prepareAndValidate:Mh,prepareSplitSize:B0,segment_util:hI,shouldFuse:Ya,slice_util:f0,splitRealAndImagArrays:rI,stridesOrDilationsArePositive:$r,tupleValuesAreOne:Gs,upcastType:Yt,validateDefaultValueShape:v0,validateInput:Ha,validateUpdateShape:Sh,warn:Ot},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pI=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Eh,nonMaxSuppressionV4Impl:Ih,nonMaxSuppressionV5Impl:kh,whereImpl:Ch},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */wE();const tb=Object.freeze(Object.defineProperty({__proto__:null,Abs:Bu,Acos:Vu,Acosh:Mu,AdadeltaOptimizer:_h,AdagradOptimizer:Ah,AdamOptimizer:Oh,AdamaxOptimizer:Dh,Add:Oa,AddN:Uu,All:Wu,Any:zu,ArgMax:Gu,ArgMin:Hu,Asin:ju,Asinh:qu,Atan:Ku,Atan2:Yu,Atanh:Xu,AvgPool:Qu,AvgPool3D:Zu,AvgPool3DGrad:Xm,AvgPoolGrad:Km,BatchMatMul:Ju,BatchToSpaceND:ec,Bincount:tc,BitwiseAnd:nc,BroadcastArgs:rc,BroadcastTo:Nw,Cast:Da,Ceil:sc,ClipByValue:oc,Complex:ac,ComplexAbs:ic,Concat:uc,Conv2D:cc,Conv2DBackpropFilter:lc,Conv2DBackpropInput:dc,Conv3D:hc,Conv3DBackpropFilterV2:Ym,Conv3DBackpropInputV2:pc,Cos:fc,Cosh:mc,CropAndResize:xc,Cumprod:gc,Cumsum:yc,DataStorage:Dm,DenseBincount:bc,DepthToSpace:wc,DepthwiseConv2dNative:vc,DepthwiseConv2dNativeBackpropFilter:$c,DepthwiseConv2dNativeBackpropInput:Sc,Diag:Cc,Dilation2D:Tc,Dilation2DBackpropFilter:Iw,Dilation2DBackpropInput:Ew,Draw:Nc,get ENV(){return Pu},Einsum:Ic,Elu:kc,EluGrad:Qm,Environment:jm,Equal:_c,Erf:Rc,Exp:Ac,ExpandDims:Oc,Expm1:Dc,FFT:Fc,Fill:Pc,FlipLeftRight:Lc,Floor:Bc,FloorDiv:Vc,FromPixels:fa,FusedBatchNorm:Mc,FusedConv2D:ga,FusedDepthwiseConv2D:ya,GatherNd:Wc,GatherV2:Uc,Greater:zc,GreaterEqual:Gc,IFFT:Hc,Identity:Fa,Imag:jc,IsFinite:qc,IsInf:Kc,IsNan:Xc,KernelBackend:Du,LRN:ol,LRNGrad:Zm,LeakyRelu:Yc,Less:Qc,LessEqual:Zc,LinSpace:Jc,Log:el,Log1p:tl,LogSoftmax:Rw,LogicalAnd:nl,LogicalNot:rl,LogicalOr:sl,LogicalXor:kw,LowerBound:_w,MatrixBandPart:Aw,Max:al,MaxPool:ul,MaxPool3D:cl,MaxPool3DGrad:eg,MaxPoolGrad:Jm,MaxPoolWithArgmax:ll,Maximum:il,Mean:dl,Min:hl,Minimum:pl,MirrorPad:fl,Mod:ml,MomentumOptimizer:Fh,Multinomial:gl,Multiply:yl,Neg:xl,NonMaxSuppressionV3:wl,NonMaxSuppressionV4:vl,NonMaxSuppressionV5:$l,NotEqual:bl,OP_SCOPE_SUFFIX:Od,OneHot:Cl,OnesLike:Sl,Optimizer:Kn,OptimizerConstructors:m0,Pack:Tl,PadV2:Nl,Pool:Ow,Pow:El,Prelu:Il,Prod:kl,RMSPropOptimizer:Ph,RaggedGather:Rl,RaggedRange:_l,RaggedTensorToTensor:Al,Range:Ol,get Rank(){return eu},Real:Dl,RealDiv:Ec,Reciprocal:Fl,get Reduction(){return rt},Relu:Pl,Relu6:Ml,Reshape:Ll,ResizeBilinear:Vl,ResizeBilinearGrad:ng,ResizeNearestNeighbor:Bl,ResizeNearestNeighborGrad:tg,Reverse:Ul,RotateWithOffset:Ed,Round:Wl,Rsqrt:zl,SGDOptimizer:Qa,ScatterNd:Gl,SearchSorted:jl,Select:ql,Selu:Kl,Sigmoid:Jl,Sign:Zl,Sin:Yl,Sinh:Ql,Slice:Xl,Softmax:od,Softplus:ed,SpaceToBatchND:rd,SparseFillEmptyRows:ad,SparseReshape:id,SparseSegmentMean:ud,SparseSegmentSum:cd,SparseToDense:ld,SplitV:sd,Sqrt:td,Square:rg,SquaredDifference:dd,StaticRegexReplace:hd,Step:Nd,StridedSlice:pd,StringNGrams:fd,StringSplit:md,StringToHashBucketFast:gd,Sub:yd,Sum:nd,Tan:xd,Tanh:bd,Tensor:Se,TensorBuffer:xr,TensorScatterUpdate:Hl,Tile:Pa,TopK:wd,Transform:vd,Transpose:Fs,Unique:$d,Unpack:Sd,UnsortedSegmentSum:Cd,UpperBound:Dw,Variable:Ms,ZerosLike:Td,_FusedMatMul:ma,abs:bt,acos:_g,acosh:Ag,add:se,addN:Og,all:Dg,any:Fg,argMax:Md,argMin:Pg,asin:Lg,asinh:Bg,atan:Vg,atan2:Mg,atanh:Ug,avgPool:Wd,avgPool3d:zg,backend:Fd,backend_util:eb,basicLSTMCell:Gg,batchNorm:uo,batchNorm2d:Hg,batchNorm3d:jg,batchNorm4d:qg,batchToSpaceND:zd,bincount:Gd,bitwiseAnd:Kg,booleanMaskAsync:_x,broadcastArgs:Xg,broadcastTo:Hr,broadcast_util:$S,browser:KE,buffer:De,cast:be,ceil:Yg,clipByValue:Qg,clone:$n,complex:Nn,concat:Qe,concat1d:Zg,concat2d:Jg,concat3d:ey,concat4d:ty,conv1d:ny,conv2d:co,conv2dTranspose:sy,conv3d:oy,conv3dTranspose:ay,copyRegisteredKernels:Vw,cos:iy,cosh:uy,cosineWindow:ja,cumprod:cy,cumsum:ly,customGrad:dn,denseBincount:dy,deprecationWarn:wv,depthToSpace:hy,depthwiseConv2d:Ba,device_util:fv,diag:py,dilation2d:fy,disableDeprecationWarnings:bv,dispose:ot,disposeVariables:vv,div:Ee,divNoNan:my,dot:gy,dropout:Px,einsum:ir,elu:jd,enableDebugMode:xv,enableProdMode:yv,enclosingPowerOfTwo:Nh,engine:Gt,ensureShape:yy,env:U,equal:lo,erf:xy,euclideanNorm:vy,exp:Wn,expandDims:dt,expm1:$y,eye:Xd,fft:za,fill:as,findBackend:Iv,findBackendFactory:kv,floor:Yd,floorDiv:Vd,fused:Bx,gather:Qd,gatherND:Fx,gather_util:XE,getBackend:Dd,getGradient:Zi,getKernel:Vs,getKernelsForBackend:xa,grad:o2,grads:a2,greater:is,greaterEqual:Zd,ifft:Ys,imag:po,image:Sr,inTopKAsync:Lx,io:Vh,irfft:bh,isFinite:Sy,isInf:Cy,isNaN:Ty,keep:Kt,kernel_impls:pI,leakyRelu:Jd,less:va,lessEqual:Va,linalg:zx,linspace:Ny,localResponseNormalization:Ey,log:Zr,log1p:eh,logSigmoid:ky,logSoftmax:Ry,logSumExp:nh,logicalAnd:js,logicalNot:rh,logicalOr:sh,logicalXor:_y,losses:Gx,lowerBound:Ay,matMul:ve,math:ME,max:fr,maxPool:oh,maxPool3d:Oy,maxPoolWithArgmax:Dy,maximum:ah,mean:qs,memory:$v,meshgrid:Fy,min:wa,minimum:Ks,mirrorPad:ih,mod:Py,moments:Ly,movingAverage:Ax,mul:Q,multiRNNCell:By,multinomial:Vy,neg:Xt,nextFrame:g0,norm:ho,notEqual:uh,oneHot:Xs,ones:Pn,onesLike:My,op:O,outerProduct:Uy,pad:_r,pad1d:Wy,pad2d:zy,pad3d:ch,pad4d:Gy,pool:Hy,pow:Qr,prelu:dh,print:Bd,prod:jy,profile:Sv,raggedGather:qy,raggedRange:Ky,raggedTensorToTensor:Xy,rand:Yy,randomGamma:Jy,randomNormal:gh,randomStandardNormal:ex,randomUniform:Wa,randomUniformInt:tx,range:Gn,ready:Nv,real:Jr,reciprocal:nx,registerBackend:xg,registerGradient:Pw,registerKernel:Id,relu:fo,relu6:yh,removeBackend:Ev,reshape:G,reverse:Hn,reverse1d:rx,reverse2d:sx,reverse3d:ox,reverse4d:ax,rfft:Ga,round:xh,rsqrt:ix,scalar:he,scatterND:Ox,scatter_util:lT,searchSorted:Ua,selu:ux,separableConv2d:cx,serialization:xE,setBackend:Tv,setPlatform:Rv,setdiff1dAsync:lx,sigmoid:an,sign:dx,signal:Wx,sin:hx,sinh:px,slice:Te,slice1d:fx,slice2d:mx,slice3d:gx,slice4d:yx,slice_util:f0,softmax:xx,softplus:th,spaceToBatchND:lh,sparse:Hx,sparseToDense:Dx,spectral:Ux,split:es,sqrt:ln,square:Lt,squaredDifference:wh,squeeze:Dt,stack:hn,step:vh,stridedSlice:bx,string:jx,sub:de,sum:Re,sumOutType:La,tan:wx,tanh:ba,tensor:Pt,tensor1d:Ct,tensor2d:mr,tensor3d:$h,tensor4d:vx,tensor5d:$x,tensor6d:Sx,tensorScatterUpdate:Cx,tensor_util:cv,test_util:SC,tidy:oe,tile:jr,time:Cv,topk:Tx,train:tI,transpose:Qs,truncatedNormal:Nx,unique:Ex,unregisterGradient:Bw,unregisterKernel:Lw,unsortedSegmentSum:Ix,unstack:qn,upcastType:Yt,upperBound:kx,util:Yw,valueAndGrad:i2,valueAndGrads:u2,variable:Rx,variableGrads:Iy,version_core:eI,where:Sn,whereAsync:Th,zeros:zn,zerosLike:wt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI=U();fI.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var yt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(yt||(yt={}));var kf;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(kf||(kf={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI={};function nb(n){return mI[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,r,s){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,c=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return He(e.inputNames[c],t,r,s);if(o.type==="tensors"){const h=e.inputs.slice(i,u);return e.inputNames.slice(i,u).filter((m,x)=>{var y;return((y=h[x])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(m=>He(m,t,r,s))}const l=He(e.inputNames[c],t,r,s),d=l.dataSync();return o.type==="number"?d[0]:pr(l.shape,d)}const a=e.attrParams[n];return a&&a.value}function He(n,e,t,r){const[s,o]=xt(n,t);if(r!=null){const i=r.getHashTableHandleByName(s);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[$a(s,i)]);return a!==void 0?e[$a(s,a)][o]:void 0}function Rf(n,e,t){return e[$a(n,t.currentContextId)]}function gn(n,e){const[t,r,s]=xt(n,e);return[$a(t,e&&e.currentContextId),r,s]}function $a(n,e){return e?`${n}-${e}`:n}function xt(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const o=r[0],a=r.length===3?r[1]:void 0,i=Number(r[r.length-1]);s=[o,i,a]}return t&&e.parseNodeNameCache.set(n,s),s}function ca(n,e,t){let r=w("pad",n,e,t);if(r==="explicit"){r=w("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function yn(n){return n.kept?n:$n(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yI=Object.freeze(Object.defineProperty({__proto__:null,json:gI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bI=Object.freeze(Object.defineProperty({__proto__:null,json:xI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],vI=Object.freeze(Object.defineProperty({__proto__:null,json:wI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],SI=Object.freeze(Object.defineProperty({__proto__:null,json:$I},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],TI=Object.freeze(Object.defineProperty({__proto__:null,json:CI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EI=Object.freeze(Object.defineProperty({__proto__:null,json:NI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],kI=Object.freeze(Object.defineProperty({__proto__:null,json:II},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],_I=Object.freeze(Object.defineProperty({__proto__:null,json:RI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],OI=Object.freeze(Object.defineProperty({__proto__:null,json:AI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],FI=Object.freeze(Object.defineProperty({__proto__:null,json:DI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],LI=Object.freeze(Object.defineProperty({__proto__:null,json:PI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],VI=Object.freeze(Object.defineProperty({__proto__:null,json:BI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],UI=Object.freeze(Object.defineProperty({__proto__:null,json:MI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],zI=Object.freeze(Object.defineProperty({__proto__:null,json:WI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],HI=Object.freeze(Object.defineProperty({__proto__:null,json:GI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],qI=Object.freeze(Object.defineProperty({__proto__:null,json:jI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],XI=Object.freeze(Object.defineProperty({__proto__:null,json:KI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],QI=Object.freeze(Object.defineProperty({__proto__:null,json:YI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],JI=Object.freeze(Object.defineProperty({__proto__:null,json:ZI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _f{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[yI,bI,vI,SI,TI,EI,kI,_I,OI,FI,LI,VI,UI,zI,HI,qI,XI,QI,JI],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],o=[],a=[],i=r.reduce((x,y)=>(x[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(x[y.name]):y.op==="Const"?o.push(x[y.name]):(y.input==null||y.input.length===0)&&a.push(x[y.name]),x),{});let u=[];const c=[];let l={},d={};t!=null&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(x=>{const y=i[x];y.inputNames.forEach((b,$)=>{const[E,,C]=gn(b),A=i[E];if(A.outputs!=null){const B=A.outputs.indexOf(C);if(B!==-1){const M=`${E}:${B}`;y.inputNames[$]=M}}y.inputs.push(A),A.children.push(y)})}),Object.keys(d).length===0?h.forEach(x=>{const y=i[x];y.children.length===0&&c.push(y)}):Object.keys(d).forEach(x=>{const[y]=gn(x),b=i[y];b!=null&&(b.signatureKey=d[x],c.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(x=>{const[y]=gn(x),b=i[y];b&&(b.signatureKey=l[x],u.push(b))}):u=s;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((x,y)=>(x[y.signature.name]=this.mapFunction(y),x),{}));const m={nodes:i,inputs:u,outputs:c,weights:o,placeholders:s,signature:t,functions:f};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=nb(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,o)=>{const a=o.type;let i;switch(o.type){case"string":i=yu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=yu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=Cu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Cu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=bu(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=bu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=Su(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Su(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=xu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=xu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=Nu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Nu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=$u(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=$u(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=Tu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Tu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=wu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=wu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=vu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=vu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=Af(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Af(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:i,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let o={};t!=null&&(o=t.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&s.push(d[h.name]),d),{}));const a=[],i=[];e.signature.inputArg.forEach(d=>{const[h]=gn(d.name),f={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:qh(d.type),type:"dtype"}},children:[]};f.signatureKey=d.name,a.push(f),o[h]=f}),Object.keys(o).forEach(d=>{const h=o[d];h.inputNames.forEach((f,m)=>{const[x,,y]=gn(f),b=o[x];if(b.outputs!=null){const $=b.outputs.indexOf(y);if($!==-1){const E=`${x}:${$}`;h.inputNames[m]=E}}h.inputs.push(b),b.children.push(h)})});const c=e.ret;e.signature.outputArg.forEach(d=>{const[h,f]=gn(c[d.name]),m=o[h];m!=null&&(m.defaultOutput=f,i.push(m))});const l=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:s,placeholders:r,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function ek(n){const e=U().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function rb(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):ek(n);return e?t:t.toLowerCase()}function yu(n,e,t,r=!1){const s=n[e];return s!=null?rb(s.s,r):t}function xu(n,e,t){const r=n[e];return r?r.b:t}function bu(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function qh(n){switch(typeof n=="string"&&(n=yt[n]),n){case yt.DT_FLOAT:case yt.DT_HALF:return"float32";case yt.DT_INT32:case yt.DT_INT64:case yt.DT_INT8:case yt.DT_UINT8:return"int32";case yt.DT_BOOL:return"bool";case yt.DT_DOUBLE:return"float32";case yt.DT_STRING:return"string";case yt.DT_COMPLEX64:case yt.DT_COMPLEX128:return"complex64";default:return null}}function Af(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function wu(n,e,t){const r=n[e];return r&&r.type?qh(r.type):t}function vu(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>qh(s)):t}function sb(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function $u(n,e,t){const r=n[e];return r&&r.shape?sb(r.shape):t}function Su(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function Cu(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(o=>rb(o,r)):t}function Tu(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>sb(s)):t}function Nu(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tk{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return He(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return He(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return bu(this.node.rawAttrs,e,t);if(r.s!=null)return yu(this.node.rawAttrs,e,t);if(r.b!=null)return xu(this.node.rawAttrs,e,t);if(r.shape!=null)return $u(this.node.rawAttrs,e,t);if(r.type!=null)return wu(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Su(this.node.rawAttrs,e,t);if(r.list.s!=null)return Cu(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Tu(this.node.rawAttrs,e,t);if(r.list.b!=null)return Nu(this.node.rawAttrs,e,t);if(r.list.type!=null)return vu(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qe=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Od,abs:bt,acos:_g,acosh:Ag,add:se,addN:Og,all:Dg,any:Fg,argMax:Md,argMin:Pg,asin:Lg,asinh:Bg,atan:Vg,atan2:Mg,atanh:Ug,avgPool:Wd,avgPool3d:zg,basicLSTMCell:Gg,batchNorm:uo,batchNorm2d:Hg,batchNorm3d:jg,batchNorm4d:qg,batchToSpaceND:zd,bincount:Gd,bitwiseAnd:Kg,booleanMaskAsync:_x,broadcastArgs:Xg,broadcastTo:Hr,buffer:De,cast:be,ceil:Yg,clipByValue:Qg,clone:$n,complex:Nn,concat:Qe,concat1d:Zg,concat2d:Jg,concat3d:ey,concat4d:ty,conv1d:ny,conv2d:co,conv2dTranspose:sy,conv3d:oy,conv3dTranspose:ay,cos:iy,cosh:uy,cosineWindow:ja,cumprod:cy,cumsum:ly,denseBincount:dy,depthToSpace:hy,depthwiseConv2d:Ba,diag:py,dilation2d:fy,div:Ee,divNoNan:my,dot:gy,dropout:Px,einsum:ir,elu:jd,enclosingPowerOfTwo:Nh,ensureShape:yy,equal:lo,erf:xy,euclideanNorm:vy,exp:Wn,expandDims:dt,expm1:$y,eye:Xd,fft:za,fill:as,floor:Yd,floorDiv:Vd,fused:Bx,gather:Qd,gatherND:Fx,greater:is,greaterEqual:Zd,ifft:Ys,imag:po,image:Sr,inTopKAsync:Lx,irfft:bh,isFinite:Sy,isInf:Cy,isNaN:Ty,leakyRelu:Jd,less:va,lessEqual:Va,linalg:zx,linspace:Ny,localResponseNormalization:Ey,log:Zr,log1p:eh,logSigmoid:ky,logSoftmax:Ry,logSumExp:nh,logicalAnd:js,logicalNot:rh,logicalOr:sh,logicalXor:_y,losses:Gx,lowerBound:Ay,matMul:ve,max:fr,maxPool:oh,maxPool3d:Oy,maxPoolWithArgmax:Dy,maximum:ah,mean:qs,meshgrid:Fy,min:wa,minimum:Ks,mirrorPad:ih,mod:Py,moments:Ly,movingAverage:Ax,mul:Q,multiRNNCell:By,multinomial:Vy,neg:Xt,norm:ho,notEqual:uh,oneHot:Xs,ones:Pn,onesLike:My,op:O,outerProduct:Uy,pad:_r,pad1d:Wy,pad2d:zy,pad3d:ch,pad4d:Gy,pool:Hy,pow:Qr,prelu:dh,print:Bd,prod:jy,raggedGather:qy,raggedRange:Ky,raggedTensorToTensor:Xy,rand:Yy,randomGamma:Jy,randomNormal:gh,randomStandardNormal:ex,randomUniform:Wa,randomUniformInt:tx,range:Gn,real:Jr,reciprocal:nx,relu:fo,relu6:yh,reshape:G,reverse:Hn,reverse1d:rx,reverse2d:sx,reverse3d:ox,reverse4d:ax,rfft:Ga,round:xh,rsqrt:ix,scalar:he,scatterND:Ox,searchSorted:Ua,selu:ux,separableConv2d:cx,setdiff1dAsync:lx,sigmoid:an,sign:dx,signal:Wx,sin:hx,sinh:px,slice:Te,slice1d:fx,slice2d:mx,slice3d:gx,slice4d:yx,softmax:xx,softplus:th,spaceToBatchND:lh,sparse:Hx,sparseToDense:Dx,spectral:Ux,split:es,sqrt:ln,square:Lt,squaredDifference:wh,squeeze:Dt,stack:hn,step:vh,stridedSlice:bx,string:jx,sub:de,sum:Re,tan:wx,tanh:ba,tensor:Pt,tensor1d:Ct,tensor2d:mr,tensor3d:$h,tensor4d:vx,tensor5d:$x,tensor6d:Sx,tensorScatterUpdate:Cx,tile:jr,topk:Tx,transpose:Qs,truncatedNormal:Nx,unique:Ex,unsortedSegmentSum:Ix,unstack:qn,upperBound:kx,variable:Rx,where:Sn,whereAsync:Th,zeros:zn,zerosLike:wt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk=(n,e,t,r=qe)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[r.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[r.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[r.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[r.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[r.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[r.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[r.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[r.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[r.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=(n,e,t,r=qe)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(w("x",n,e,t))];case"Acos":return[r.acos(w("x",n,e,t))];case"Acosh":return[r.acosh(w("x",n,e,t))];case"Asin":return[r.asin(w("x",n,e,t))];case"Asinh":return[r.asinh(w("x",n,e,t))];case"Atan":return[r.atan(w("x",n,e,t))];case"Atan2":return[r.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[r.atanh(w("x",n,e,t))];case"Ceil":return[r.ceil(w("x",n,e,t))];case"Complex":return[r.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[r.cos(w("x",n,e,t))];case"Cosh":return[r.cosh(w("x",n,e,t))];case"Elu":return[r.elu(w("x",n,e,t))];case"Erf":return[r.erf(w("x",n,e,t))];case"Exp":return[r.exp(w("x",n,e,t))];case"Expm1":return[r.expm1(w("x",n,e,t))];case"Floor":return[r.floor(w("x",n,e,t))];case"Log":return[r.log(w("x",n,e,t))];case"Log1p":return[r.log1p(w("x",n,e,t))];case"Imag":return[r.imag(w("x",n,e,t))];case"Neg":return[r.neg(w("x",n,e,t))];case"Reciprocal":return[r.reciprocal(w("x",n,e,t))];case"Real":return[r.real(w("x",n,e,t))];case"Relu":return[r.relu(w("x",n,e,t))];case"Round":return[r.round(w("x",n,e,t))];case"Selu":return[r.selu(w("x",n,e,t))];case"Sigmoid":return[r.sigmoid(w("x",n,e,t))];case"Sin":return[r.sin(w("x",n,e,t))];case"Sign":return[r.sign(w("x",n,e,t))];case"Sinh":return[r.sinh(w("x",n,e,t))];case"Softplus":return[r.softplus(w("x",n,e,t))];case"Sqrt":return[r.sqrt(w("x",n,e,t))];case"Square":return[r.square(w("x",n,e,t))];case"Tanh":return[r.tanh(w("x",n,e,t))];case"Tan":return[r.tan(w("x",n,e,t))];case"ClipByValue":return[r.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(w("x",n,e,t))];case"Rsqrt":return[r.rsqrt(He(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[r.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[r.isNaN(He(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(He(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(He(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){I(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],o=e[r];I(s<0||o<0||s===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function Of(n){return!(typeof n=="number"||n.some(e=>e<0))}function Es(n,e,t){let r=Eu(n,t);const s=!Of(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Eu(o.shape,r)}),!Of(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Eu(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(e,t,r,s,o,a,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=he(0),Kt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),_t(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,Kt(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Pt([],[0].concat(this.elementShape));const r=this.readMany(e);return _t(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),hn(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Pt([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return _t(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Qe(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,qn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:t.size/r,a=[];oe(()=>{t=G(t,[1,r,o]);for(let u=0;u<e.length;++u){const l=[0,u===0?0:s[u-1],0],d=[1,e[u],o];a[u]=G(Te(t,l,d),this.elementShape)}return a});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nr{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);_t(t,o.shape,"TensorList shape mismatch: "),Kt(o)}),this.idTensor=he(0),this.maxNumElements=s,Kt(this.idTensor)}copy(){return new Nr([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);_t(e,this.elementShape,"TensorList shape mismatch: ");const s=Es(this.elementShape,this.tensors,e);return oe(()=>{const o=this.tensors.map(a=>G(a,s));return hn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Es(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,_t(s.shape,e,"TensorList shape mismatch: "),G(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(_t(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Kt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Nr([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);_t(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Es(this.elementShape,this.tensors,t);return G(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);_t(this.elementShape,t.shape,"TensorList shape mismatch: "),Kt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);_t(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Es(this.elementShape,this.tensors,r);return e.length===0?Pt([],[0].concat(s)):oe(()=>{const o=e.map(a=>G(this.tensors[a],s));return hn(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);_t(this.elementShape,t,"TensorList shape mismatch: ");const r=Es(this.elementShape,this.tensors,t);return this.size()===0?Pt([],[0].concat(r)):oe(()=>{const s=this.tensors.map(o=>G(o,r));return Qe(s,0)})}}function ok(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);_t(s,e,"TensorList shape mismatch: ");const o=qn(n);return new Nr(o,e,r)}function ak(n,e,t,r){return new Nr([],n,e,r)}function ik(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new Nr([],t,n.dtype,r),a=qn(n,0);return e.forEach((i,u)=>{o.setItem(i,a[u])}),o}function uk(n,e,t){let r=0;const s=e.map(l=>(r+=l,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Eu(o,t),i=r===0?0:n.size/r,u=oe(()=>{const l=[];n=G(n,[1,r,i]);for(let d=0;d<e.length;++d){const f=[0,d===0?0:s[d-1],0],m=[1,e[d],i];l[d]=G(Te(n,f,m),a)}return n.dispose(),l}),c=new Nr([],t,n.dtype,e.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=w("thenBranch",n,e,t),s=w("elseBranch",n,e,t),o=w("cond",n,e,t),a=w("args",n,e,t);return(await o.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=w("body",n,e,t),s=w("cond",n,e,t),o=w("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),i=o.map(l=>l.id);let u=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=o;for(;u[0];){const l=c;c=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const d=c.map(f=>f.id);l.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()});const h=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);u=await h[0].data(),h.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()})}return c}case"LoopCond":{const r=w("pred",n,e,t);return[yn(r)]}case"Switch":{const r=w("pred",n,e,t);let s=w("data",n,e,t);return s.kept||(s=yn(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>He(s,e,t)!==void 0);if(r){const s=He(r,e,t);return[yn(s)]}return}case"Enter":{const r=w("frameName",n,e,t),s=w("tensor",n,e,t);return t.enterFrame(r),[yn(s)]}case"Exit":{const r=w("tensor",n,e,t);return t.exitFrame(),[yn(r)]}case"NextIteration":{const r=w("tensor",n,e,t);return t.nextIteration(),[yn(r)]}case"TensorArrayV3":{const r=w("size",n,e,t),s=w("dtype",n,e,t),o=w("elementShape",n,e,t),a=w("dynamicSize",n,e,t),i=w("clearAfterRead",n,e,t),u=w("identicalElementShapes",n,e,t),c=w("name",n,e,t),l=new sk(c,s,r,o,u,a,i);return t.addTensorArray(l),[l.idTensor,he(1)]}case"TensorArrayWriteV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),o=w("dtype",n,e,t);return[s.concat(o)]}case"TensorArraySplitV3":{const r=w("tensorArrayId",n,e,t),s=w("tensor",n,e,t),o=w("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[he(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=w("indices",n,e,t),s=w("tensor",n,e,t),o=w("elementShape",n,e,t),a=w("numElements",n,e,t),i=ik(s,r,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=w("elementShape",n,e,t),s=w("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=w(o,n,e,t),i=n.op==="TensorListReserve"?-1:a,u=ak(r,s,a,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=w("tensorListId",n,e,t),s=w("indices",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=w("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=ok(r,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id),o=w("dtype",n,e,t),a=w("elementShape",n,e,t);return[s.concat(o,a)]}case"TensorListPushBack":{const r=w("tensorListId",n,e,t),s=w("tensor",n,e,t),o=t.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("lengths",n,e,t),a=uk(r,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id);return[he(s.size(),"int32")]}case"TensorListResize":{const r=w("tensorListId",n,e,t),s=w("size",n,e,t),a=t.getTensorList(r.id).resize(s);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Df(n,e,t){const[r,s]=w("fusedOps",n,e,t),o=r==="biasadd",a=!o,i=s==="prelu",u=r==="fusedbatchnorm",c=w("numArgs",n,e,t);if(o){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=w("strides",n,e,t),d=ca(n,e,t),h=w("dataFormat",n,e,t).toUpperCase(),f=w("dilations",n,e,t);let[m,x]=w("args",n,e,t);a&&(x=m,m=void 0);const y=w("leakyreluAlpha",n,e,t);return{stride:l,pad:d,dataFormat:h,dilations:f,biasArg:m,preluArg:x,activationFunc:s,leakyreluAlpha:y}}const lk=(n,e,t,r=qe)=>{switch(n.op){case"Conv1D":{const s=w("stride",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilation",n,e,t);return[r.conv1d(w("x",n,e,t),w("filter",n,e,t),s,o,a,i)]}case"Conv2D":{const s=w("strides",n,e,t),o=ca(n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv2d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Df(n,e,t);return[r.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Df(n,e,t);return[r.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=w("outputShape",n,e,t),o=w("strides",n,e,t),a=ca(n,e,t);return[r.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=w("strides",n,e,t),o=ca(n,e,t),a=w("dilations",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv3d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t),i=w("includeBatchInIndex",n,e,t),{result:u,indexes:c}=r.maxPoolWithArgmax(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o,i);return[u,c]}case"AvgPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dilations",n,e,t),i=s[1],u=s[2],c=a[1],l=a[2];return[r.dilation2d(w("x",n,e,t),w("filter",n,e,t),[i,u],o,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=(n,e,t,r=qe)=>{switch(n.op){case"Fill":{const s=w("shape",n,e,t),o=w("dtype",n,e,t),a=w("value",n,e,t);return[r.fill(s,a,o)]}case"LinSpace":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("num",n,e,t);return[r.linspace(s,o,a)]}case"Multinomial":{const s=w("logits",n,e,t),o=w("numSamples",n,e,t),a=w("seed",n,e,t);return[r.multinomial(s,o,a)]}case"OneHot":{const s=w("indices",n,e,t),o=w("depth",n,e,t),a=w("onValue",n,e,t),i=w("offValue",n,e,t),u=w("dtype",n,e,t);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[r.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("seed",n,e,t))];case"Range":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("step",n,e,t);return[r.range(s,o,a,w("dtype",n,e,t))]}case"TruncatedNormal":{const s=w("shape",n,e,t),o=w("mean",n,e,t),a=w("stdDev",n,e,t),i=w("seed",n,e,t);return[r.truncatedNormal(s,o,a,w("dtype",n,e,t),i)]}case"Zeros":return[r.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(n,e,t){const r=w("boxes",n,e,t),s=w("scores",n,e,t),o=w("maxOutputSize",n,e,t),a=w("iouThreshold",n,e,t),i=w("scoreThreshold",n,e,t),u=w("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const hk=async(n,e,t,r,s=qe)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=Bi(n,e,t),d=await s.image.nonMaxSuppressionWithScoreAsync(o,a,i,u,c,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Bi(n,e,t),l=w("padToMaxOutputSize",n,e,t),d=await s.image.nonMaxSuppressionPaddedAsync(o,a,i,u,c,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Bi(n,e,t);return[await s.image.nonMaxSuppressionAsync(o,a,i,u,c)]}case"Where":{const o=s.cast(w("condition",n,e,t),"bool"),a=[await s.whereAsync(o)];return o.dispose(),a}case"ListDiff":return s.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pk=(n,e,t,r=qe)=>{switch(n.op){case"LowerBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.lowerBound(s,o)]}case"TopKV2":{const s=w("x",n,e,t),o=w("k",n,e,t),a=w("sorted",n,e,t),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.upperBound(s,o)]}case"Unique":{const s=w("x",n,e,t),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=w("x",n,e,t),o=w("axis",n,e,t),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=(n,e,t,r=qe)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=w("default",n,e,t);return[He(n.name,e,t)||s];case"Placeholder":return[He(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=w("x",n,e,t);return[yn(l)]}case"IdentityN":return w("x",n,e,t).map(l=>yn(l));case"Snapshot":const o=w("x",n,e,t);return[yn(o)];case"Shape":return[r.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(l=>r.tensor1d(l.shape));case"Size":return[r.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=w("x",n,e,t),i=w("data",n,e,t),u=w("message",n,e,t),c=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=he(0),this.tensorMap=new Map,Kt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return he(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),oe(()=>{const s=qn(t),o=r.length,a=s.length;I(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=r[i],c=s[i];Kt(c),this.tensorMap.set(u,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return oe(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],i=this.findWithDefault(a,t);s.push(i)}return hn(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const o=w("keyDType",n,e,t),a=w("valueDType",n,e,t),i=new mk(o,a);return r.addHashTable(n.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("values",n,e,t);return[await r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=w("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=(n,e,t,r=qe)=>{switch(n.op){case"ResizeBilinear":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=w("image",n,e,t),o=w("boxes",n,e,t),a=w("boxInd",n,e,t),i=w("cropSize",n,e,t),u=w("method",n,e,t),c=w("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,o,a,i,u,c)]}case"ImageProjectiveTransformV3":{const s=w("images",n,e,t),o=w("transforms",n,e,t),a=w("outputShape",n,e,t),i=w("fillValue",n,e,t),u=w("interpolation",n,e,t),c=w("fillMode",n,e,t);return[r.image.transform(s,o,u.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=(n,e,t,r=qe)=>{switch(n.op){case"Equal":return[r.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[r.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[r.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[r.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[r.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[r.logicalNot(w("a",n,e,t))];case"LogicalOr":return[r.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[r.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=(n,e,t,r=qe)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[r.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[r.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[s,o]=w("fusedOps",n,e,t),a=s==="biasadd",i=o==="prelu",u=w("numArgs",n,e,t),c=w("leakyreluAlpha",n,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=w("args",n,e,t);return[r.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:l,activation:o,preluActivationWeights:d,leakyreluAlpha:c})];case"MatrixBandPart":return[r.linalg.bandPart(w("a",n,e,t),w("numLower",n,e,t),w("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=(n,e,t,r=qe)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[r.softmax(w("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk=(n,e,t,r=qe)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(w("paramsNestedSplits",n,e,t),w("paramsDenseValues",n,e,t),w("indices",n,e,t),w("outputRaggedRank",n,e,t));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(w("starts",n,e,t),w("limits",n,e,t),w("splits",n,e,t));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(w("shape",n,e,t),w("values",n,e,t),w("defaultValue",n,e,t),w("rowPartitionTensors",n,e,t),w("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=(n,e,t,r=qe)=>{switch(n.op){case"Max":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.max(w("x",n,e,t),i,u)]}case"Mean":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.mean(w("x",n,e,t),i,u)]}case"Min":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.min(w("x",n,e,t),i,u)]}case"Sum":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.sum(w("x",n,e,t),i,u)]}case"All":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.all(w("x",n,e,t),i,u)]}case"Any":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.any(w("x",n,e,t),i,u)]}case"ArgMax":{const i=w("axis",n,e,t);return[r.argMax(w("x",n,e,t),i)]}case"ArgMin":{const i=w("axis",n,e,t);return[r.argMin(w("x",n,e,t),i)]}case"Prod":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.prod(w("x",n,e,t),i,u)]}case"Cumprod":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumprod(w("x",n,e,t),i,u,c)]}case"Cumsum":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumsum(w("x",n,e,t),i,u,c)]}case"Bincount":const s=w("x",n,e,t),o=w("weights",n,e,t),a=w("size",n,e,t);return[r.bincount(s,o,a)];case"DenseBincount":{const i=w("x",n,e,t),u=w("weights",n,e,t),c=w("size",n,e,t),l=w("binaryOutput",n,e,t);return[r.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=(n,e,t,r=qe)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=w("n",n,e,t),o=w("axis",n,e,t);let a=w("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=w("axis",n,e,t),o=w("batchDims",n,e,t),a=w("x",n,e,t),i=w("indices",n,e,t);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=w("dims",n,e,t),o=[];for(let i=0;i<s.length;i++)s[i]&&o.push(i);const a=w("x",n,e,t);return[r.reverse(a,o)]}case"ReverseV2":{const s=w("axis",n,e,t),o=w("x",n,e,t);return[r.reverse(o,s)]}case"Slice":{const s=w("begin",n,e,t),o=w("size",n,e,t);return[r.slice(w("x",n,e,t),s,o)]}case"StridedSlice":{const s=w("begin",n,e,t),o=w("end",n,e,t),a=w("strides",n,e,t),i=w("beginMask",n,e,t),u=w("endMask",n,e,t),c=w("ellipsisMask",n,e,t),l=w("newAxisMask",n,e,t),d=w("shrinkAxisMask",n,e,t),h=w("x",n,e,t);return[r.stridedSlice(h,s,o,a,i,u,c,l,d)]}case"Pack":return oe(()=>{const s=w("axis",n,e,t),o=w("tensors",n,e,t),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map(c=>{const l=Ae(c.shape,a);if(!l&&!Ae(r.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:r.reshape(c,a)});return[r.stack(u,s)]});case"Unpack":{const s=w("axis",n,e,t),o=w("tensor",n,e,t);return r.unstack(o,s)}case"Tile":{const s=w("reps",n,e,t);return[r.tile(w("x",n,e,t),s)]}case"Split":case"SplitV":{const s=w("axis",n,e,t),o=w("numOrSizeSplits",n,e,t),a=w("x",n,e,t);return r.split(a,o,s)}case"ScatterNd":{const s=w("indices",n,e,t),o=w("values",n,e,t),a=w("shape",n,e,t);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gatherND(s,o)]}case"SparseToDense":{const s=w("sparseIndices",n,e,t),o=w("outputShape",n,e,t),a=w("sparseValues",n,e,t),i=w("defaultValue",n,e,t);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}case"TensorScatterUpdate":{const s=w("indices",n,e,t),o=w("values",n,e,t),a=w("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=(n,e,t,r=qe)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=(n,e,t,r=qe)=>{switch(n.op){case"FFT":return[r.fft(w("x",n,e,t))];case"IFFT":return[r.ifft(w("x",n,e,t))];case"RFFT":return[r.rfft(w("x",n,e,t))];case"IRFFT":return[r.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk=(n,e,t,r=qe)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(w("input",n,e,t),w("pattern",n,e,t),w("rewrite",n,e,t),w("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=(n,e,t,r=qe)=>{switch(n.op){case"Cast":return[r.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const s=w("axis",n,e,t);return[r.expandDims(w("x",n,e,t),s)]}case"Squeeze":{const s=w("axis",n,e,t);return[r.squeeze(w("x",n,e,t),s)]}case"Reshape":return[r.reshape(w("x",n,e,t),w("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const s=w("blockShape",n,e,t),o=w("paddings",n,e,t);return[r.spaceToBatchND(w("x",n,e,t),s,o)]}case"BatchToSpaceND":{const s=w("blockShape",n,e,t),o=w("crops",n,e,t);return[r.batchToSpaceND(w("x",n,e,t),s,o)]}case"DepthToSpace":{const s=w("blockSize",n,e,t),o=w("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(w("x",n,e,t),s,o)]}case"BroadcastTo":return[r.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ff(n,e,t,r,s=oe){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return s(()=>nk(a,i,u));case"basic_math":return s(()=>rk(a,i,u));case"control":return ck(a,i,u);case"convolution":return s(()=>lk(a,i,u));case"creation":return s(()=>dk(a,i,u));case"dynamic":return hk(a,i,u);case"evaluation":return s(()=>pk(a,i,u));case"image":return s(()=>yk(a,i,u));case"graph":return s(()=>fk(a,i,u));case"logical":return s(()=>xk(a,i,u));case"matrices":return s(()=>bk(a,i,u));case"normalization":return s(()=>wk(a,i,u));case"ragged":return s(()=>vk(a,i,u));case"reduction":return s(()=>$k(a,i,u));case"slice_join":return s(()=>Sk(a,i,u));case"sparse":return s(()=>Ck(a,i,u));case"spectral":return s(()=>Tk(a,i,u));case"string":return s(()=>Nk(a,i,u));case"transformation":return s(()=>Ek(a,i,u));case"hash_table":return gk(a,i,u,r);case"custom":const c=nb(a.op);if(c&&c.customExecutor)return c.customExecutor(new tk(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Mn(o)?o.then(a=>[].concat(a)):[].concat(o)}class Pf{constructor(e={},t={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,e,t,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,c=new Set(Object.keys(n).map(h=>xt(h)[0]));r=r||[];const l=new Set(r.map(h=>xt(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((ur(h)||Fk(h)||Pk(h))&&a==null&&(a=h,i=a.children.map(f=>f.name).filter(f=>s.has(f))),s.add(h.name),t[h.name]==null&&!c.has(h.name)&&!l.has(h.name)){if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),d.push(f))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}function Ik(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(y=>xt(y)[0]).map(y=>n.nodes[y]),o=n.initNodes||[],a=y=>t.has(typeof y=="string"?y:y.name);function i(y){return[...new Map(y.map(b=>[b.name,b])).values()]}const u=i([...s,...n.weights,...o]).filter(a),c=i([...u,...Object.values(n.nodes)]).filter(a),l=new Map(c.map(y=>[y.name,y])),d={};for(const y of c){d[y.name]=d[y.name]||0;for(const b of y.children)a(b)||(d[b.name]=Number.POSITIVE_INFINITY),d[b.name]=(d[b.name]||0)+1}const h=Object.entries(d).filter(([,y])=>y===0).map(([y])=>y),f=[...h];for(;h.length>0;){const y=h.pop(),b=l.get(y);for(const $ of b.children.filter(a))--d[$.name]===0&&(f.push($.name),h.push($.name))}const m=f.map(y=>l.get(y)),x=kk(m,u);return Rk(x,u),x}function kk(n,e){const t=new Map(n.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),i=t.get(a);for(const u of i.children)!t.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return n.filter(a=>s.has(a.name))}class Lo extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function Rk(n,e){const t=new Map(n.map((i,u)=>[i.name,u])),r=new Set(e.map(i=>i.name)),s=i=>r.has(typeof i=="string"?i:i.name),o=new Set(n.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of n){for(const u of i.children.filter(a)){if(!t.has(u.name))throw new Lo(`Child ${u.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(u.name))throw new Lo(`Node ${i.name} is scheduled to run after its child ${u.name}.`)}if(!s(i))for(const u of i.inputs){if(!t.has(u.name))throw new Lo(`Input ${u.name} of node ${i.name} is unreachable.`);if(t.get(u.name)>t.get(i.name))throw new Lo(`Node ${i.name} is scheduled to run before its input ${u.name}.`)}}}function _k(n){const e=new Map(n.map((i,u)=>[i.name,u])),t=Number.MAX_SAFE_INTEGER,r=n.map((i,u)=>ur(i)?t:u),s=i=>{const u=r[e.get(i.name)];return u??-1},o=n.map((i,u)=>i.children.map(s).reduce((c,l)=>Math.max(c,l),r[u])),a=new Map;for(let i=0;i<n.length;++i){const u=o[i];if(u===t)continue;const c=n[i],l=n[u];a.has(l.name)||a.set(l.name,[]),a.get(l.name).push(c)}return a}const Ak=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Ok=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Dk=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ur(n){return Ak.has(n.op)}function Fk(n){return Ok.has(n.op)}function Pk(n){return Dk.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sa{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Sa(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(o=>o.name).sort(),s=t.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=Lf(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const c=t.map(d=>d.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${l}]. Missing the following inputs: [${s}]`)}const i=Ik(this.graph,r),u=_k(i);return{orderedNodes:i,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Kt(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(h=>this.graph.nodes[xt(h)[0]]),o=t.map(h=>xt(h)[0]),a=new Set(o);let i=o.map(h=>this.graph.nodes[h]);i.length===0&&(i=this._outputs);const u=this.getCompilationKey(s,i);let c=this.compiledMap.get(u);c==null&&(c=this.compile(e,i),this.compiledMap.set(u,c));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},d={};return oe(()=>{const h=new Pf(this.weightMap,l,d,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{const[$,E]=xt(b,h),C=[];C[E]=e[b],f[$]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[$]=this.cloneTensorList(C))});const m=this.getFrozenTensorIds(f),{orderedNodes:x,nodeLiveUntilMap:y}=c;for(const b of x){if(f[b.name])continue;const $=Ff(b,f,h,this._resourceManager);if(Mn($))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);f[b.name]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList($)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,f,h,m,a,y.get(b.name))}return this.parent==null&&h.dispose(m),t.map(b=>He(b,f,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,o,a,i){if(!(ur(t)||a.has(e))){for(const u of r[e])u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length);for(const u of t.inputs){if(ur(u))continue;const c=Rf(u.name,r,s);if(c!=null)for(const l of c){if(!l||l.kept||o.has(l.id))continue;const d=i[l.id];d===1?(l.dispose(),delete i[l.id]):d!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,o,a){function i(u){return ur(u)||o.has(u.name)}if(!(ur(e)||a==null))for(const u of a){if(i(u))continue;const c=Rf(u.name,t,r);for(const l of c)!l||l.kept||s.has(l.id)||l.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new Pf(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,r),u=t.map(h=>He(h,i,a)),c=u.map(h=>h.id),l=Object.keys(e).map(h=>e[h].id),d=new Set([...c,...l,...this.weightIds]);return Object.values(i).forEach(h=>{h.forEach(f=>{f&&!f.isDisposed&&!d.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(d),u}async executeFunctionAsync(e,t,r){const s=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const o=Object.keys(e),a=o.map(C=>this.graph.nodes[xt(C)[0]]),i=r.map(C=>xt(C)[0]),u=new Set(i);let c=i.map(C=>this.graph.nodes[C]);c.length===0&&(c=this._outputs);const{usedNodes:l,missingInputs:d,dynamicNode:h,syncInputs:f}=Lf(e,c,this.weightMap,this._initNodes),m=[...a,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:t.currentContext})),x=Object.assign({},this.weightMap);Object.keys(e).forEach(C=>{const[A,B]=xt(C),M=[];M[B]=e[C],x[A]=M});const y={},b=this.getFrozenTensorIds(x),$={};for(;m.length>0;){const C=this.processStack(a,m,t,x,$,b,u,y,l);await Promise.all(C)}h==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const E=c.filter(C=>!ur(C)&&!He(C.name,x,t)).map(C=>C.name);if(E.length>0){let C="";throw h!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${E}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${C}`)}return x}processStack(e,t,r,s,o,a,i,u,c){const l=[];for(;t.length>0;){const d=t.pop();r.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&w("isConstant",d.node,s,r)&&([h]=gn(d.node.name,r)),s[d.node.name]==null){const f=Ff(d.node,s,r,this._resourceManager);h||([h]=gn(d.node.name,r));const m=r.currentContext;Mn(f)?l.push(f.then(x=>(s[h]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(x)),r.currentContext=m,this.checkTensorForDisposal(h,d.node,s,r,a,i,u),this.processChildNodes(d.node,t,r,s,o,c),x))):(s[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),this.checkTensorForDisposal(h,d.node,s,r,a,i,u),this.processChildNodes(d.node,t,r,s,o,c))}else this.processChildNodes(d.node,t,r,s,o,c)}return l}processChildNodes(e,t,r,s,o,a){e.children.forEach(i=>{const[u]=gn(i.name,r);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!He(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(c=>!!He(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=xt(t),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===r.shape.length&&r.shape.every((u,c)=>a[c]===-1||a[c]===u);I(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&I(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const o in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[o];a!=null?s[a.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=xt(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=xt(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class Lk{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bk="?tfjs-format=file",Vk="model.json";class Mk{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=Vh){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new Lk}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Mn(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await vg(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new Sa(_f.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=_f.Instance.transformGraph(e.modelInitializer);this.initializer=new Sa(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Se?[e]:e,r={};return t.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof Se)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,a)=>{var i,u,c;const l=(c=(u=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||u===void 0?void 0:u[a])===null||c===void 0?void 0:c.resourceId;return l!=null?o[a]=this.resourceIdToCapturedInput[l]:o[a]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const o=r[s],a=t[o];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ot(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Kh(n,e={},t=Vh){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=Uk(n));const r=new Mk(n,e,t);return await r.load(),r}function Uk(n){return n.endsWith("/")||(n=n+"/"),`${n}${Vk}${Bk}`}var Vi={},Bf;function Wk(){return Bf||(Bf=1,(function(){var n;function e(p){var g=0;return function(){return g<p.length?{done:!1,value:p[g++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(p,g,v){return p==Array.prototype||p==Object.prototype||(p[g]=v.value),p};function r(p){p=[typeof globalThis=="object"&&globalThis,p,typeof window=="object"&&window,typeof self=="object"&&self,typeof rf=="object"&&rf];for(var g=0;g<p.length;++g){var v=p[g];if(v&&v.Math==Math)return v}throw Error("Cannot find global object")}var s=r(this);function o(p,g){if(g)e:{var v=s;p=p.split(".");for(var S=0;S<p.length-1;S++){var k=p[S];if(!(k in v))break e;v=v[k]}p=p[p.length-1],S=v[p],g=g(S),g!=S&&g!=null&&t(v,p,{configurable:!0,writable:!0,value:g})}}o("Symbol",function(p){function g(_){if(this instanceof g)throw new TypeError("Symbol is not a constructor");return new v(S+(_||"")+"_"+k++,_)}function v(_,R){this.h=_,t(this,"description",{configurable:!0,writable:!0,value:R})}if(p)return p;v.prototype.toString=function(){return this.h};var S="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",k=0;return g}),o("Symbol.iterator",function(p){if(p)return p;p=Symbol("Symbol.iterator");for(var g="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),v=0;v<g.length;v++){var S=s[g[v]];typeof S=="function"&&typeof S.prototype[p]!="function"&&t(S.prototype,p,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return p});function a(p){return p={next:p},p[Symbol.iterator]=function(){return this},p}function i(p){var g=typeof Symbol<"u"&&Symbol.iterator&&p[Symbol.iterator];return g?g.call(p):{next:e(p)}}function u(p){if(!(p instanceof Array)){p=i(p);for(var g,v=[];!(g=p.next()).done;)v.push(g.value);p=v}return p}var c=typeof Object.assign=="function"?Object.assign:function(p,g){for(var v=1;v<arguments.length;v++){var S=arguments[v];if(S)for(var k in S)Object.prototype.hasOwnProperty.call(S,k)&&(p[k]=S[k])}return p};o("Object.assign",function(p){return p||c});var l=typeof Object.create=="function"?Object.create:function(p){function g(){}return g.prototype=p,new g},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var h;e:{var f={a:!0},m={};try{m.__proto__=f,h=m.a;break e}catch{}h=!1}d=h?function(p,g){if(p.__proto__=g,p.__proto__!==g)throw new TypeError(p+" is not extensible");return p}:null}var x=d;function y(p,g){if(p.prototype=l(g.prototype),p.prototype.constructor=p,x)x(p,g);else for(var v in g)if(v!="prototype")if(Object.defineProperties){var S=Object.getOwnPropertyDescriptor(g,v);S&&Object.defineProperty(p,v,S)}else p[v]=g[v];p.za=g.prototype}function b(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function $(p){if(p.m)throw new TypeError("Generator is already running");p.m=!0}b.prototype.u=function(p){this.i=p};function E(p,g){p.l={ma:g,na:!0},p.h=p.s||p.v}b.prototype.return=function(p){this.l={return:p},this.h=this.v};function C(p,g,v){return p.h=v,{value:g}}function A(p){this.h=new b,this.i=p}function B(p,g){$(p.h);var v=p.h.j;return v?M(p,"return"in v?v.return:function(S){return{value:S,done:!0}},g,p.h.return):(p.h.return(g),V(p))}function M(p,g,v,S){try{var k=g.call(p.h.j,v);if(!(k instanceof Object))throw new TypeError("Iterator result "+k+" is not an object");if(!k.done)return p.h.m=!1,k;var _=k.value}catch(R){return p.h.j=null,E(p.h,R),V(p)}return p.h.j=null,S.call(p.h,_),V(p)}function V(p){for(;p.h.h;)try{var g=p.i(p.h);if(g)return p.h.m=!1,{value:g.value,done:!1}}catch(v){p.h.i=void 0,E(p.h,v)}if(p.h.m=!1,p.h.l){if(g=p.h.l,p.h.l=null,g.na)throw g.ma;return{value:g.return,done:!0}}return{value:void 0,done:!0}}function P(p){this.next=function(g){return $(p.h),p.h.j?g=M(p,p.h.j.next,g,p.h.u):(p.h.u(g),g=V(p)),g},this.throw=function(g){return $(p.h),p.h.j?g=M(p,p.h.j.throw,g,p.h.u):(E(p.h,g),g=V(p)),g},this.return=function(g){return B(p,g)},this[Symbol.iterator]=function(){return this}}function F(p){function g(S){return p.next(S)}function v(S){return p.throw(S)}return new Promise(function(S,k){function _(R){R.done?S(R.value):Promise.resolve(R.value).then(g,v).then(_,k)}_(p.next())})}function T(p){return F(new P(new A(p)))}o("Promise",function(p){function g(R){this.i=0,this.j=void 0,this.h=[],this.u=!1;var L=this.l();try{R(L.resolve,L.reject)}catch(W){L.reject(W)}}function v(){this.h=null}function S(R){return R instanceof g?R:new g(function(L){L(R)})}if(p)return p;v.prototype.i=function(R){if(this.h==null){this.h=[];var L=this;this.j(function(){L.m()})}this.h.push(R)};var k=s.setTimeout;v.prototype.j=function(R){k(R,0)},v.prototype.m=function(){for(;this.h&&this.h.length;){var R=this.h;this.h=[];for(var L=0;L<R.length;++L){var W=R[L];R[L]=null;try{W()}catch(j){this.l(j)}}}this.h=null},v.prototype.l=function(R){this.j(function(){throw R})},g.prototype.l=function(){function R(j){return function(Y){W||(W=!0,j.call(L,Y))}}var L=this,W=!1;return{resolve:R(this.I),reject:R(this.m)}},g.prototype.I=function(R){if(R===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(R instanceof g)this.L(R);else{e:switch(typeof R){case"object":var L=R!=null;break e;case"function":L=!0;break e;default:L=!1}L?this.F(R):this.s(R)}},g.prototype.F=function(R){var L=void 0;try{L=R.then}catch(W){this.m(W);return}typeof L=="function"?this.M(L,R):this.s(R)},g.prototype.m=function(R){this.v(2,R)},g.prototype.s=function(R){this.v(1,R)},g.prototype.v=function(R,L){if(this.i!=0)throw Error("Cannot settle("+R+", "+L+"): Promise already settled in state"+this.i);this.i=R,this.j=L,this.i===2&&this.K(),this.H()},g.prototype.K=function(){var R=this;k(function(){if(R.D()){var L=s.console;typeof L<"u"&&L.error(R.j)}},1)},g.prototype.D=function(){if(this.u)return!1;var R=s.CustomEvent,L=s.Event,W=s.dispatchEvent;return typeof W>"u"?!0:(typeof R=="function"?R=new R("unhandledrejection",{cancelable:!0}):typeof L=="function"?R=new L("unhandledrejection",{cancelable:!0}):(R=s.document.createEvent("CustomEvent"),R.initCustomEvent("unhandledrejection",!1,!0,R)),R.promise=this,R.reason=this.j,W(R))},g.prototype.H=function(){if(this.h!=null){for(var R=0;R<this.h.length;++R)_.i(this.h[R]);this.h=null}};var _=new v;return g.prototype.L=function(R){var L=this.l();R.T(L.resolve,L.reject)},g.prototype.M=function(R,L){var W=this.l();try{R.call(L,W.resolve,W.reject)}catch(j){W.reject(j)}},g.prototype.then=function(R,L){function W(re,ee){return typeof re=="function"?function(ce){try{j(re(ce))}catch(pe){Y(pe)}}:ee}var j,Y,ue=new g(function(re,ee){j=re,Y=ee});return this.T(W(R,j),W(L,Y)),ue},g.prototype.catch=function(R){return this.then(void 0,R)},g.prototype.T=function(R,L){function W(){switch(j.i){case 1:R(j.j);break;case 2:L(j.j);break;default:throw Error("Unexpected state: "+j.i)}}var j=this;this.h==null?_.i(W):this.h.push(W),this.u=!0},g.resolve=S,g.reject=function(R){return new g(function(L,W){W(R)})},g.race=function(R){return new g(function(L,W){for(var j=i(R),Y=j.next();!Y.done;Y=j.next())S(Y.value).T(L,W)})},g.all=function(R){var L=i(R),W=L.next();return W.done?S([]):new g(function(j,Y){function ue(ce){return function(pe){re[ce]=pe,ee--,ee==0&&j(re)}}var re=[],ee=0;do re.push(void 0),ee++,S(W.value).T(ue(re.length-1),Y),W=L.next();while(!W.done)})},g});function z(p,g){p instanceof String&&(p+="");var v=0,S=!1,k={next:function(){if(!S&&v<p.length){var _=v++;return{value:g(_,p[_]),done:!1}}return S=!0,{done:!0,value:void 0}}};return k[Symbol.iterator]=function(){return k},k}o("Array.prototype.keys",function(p){return p||function(){return z(this,function(g){return g})}}),o("Array.prototype.fill",function(p){return p||function(g,v,S){var k=this.length||0;for(0>v&&(v=Math.max(0,k+v)),(S==null||S>k)&&(S=k),S=Number(S),0>S&&(S=Math.max(0,k+S)),v=Number(v||0);v<S;v++)this[v]=g;return this}});function H(p){return p||Array.prototype.fill}o("Int8Array.prototype.fill",H),o("Uint8Array.prototype.fill",H),o("Uint8ClampedArray.prototype.fill",H),o("Int16Array.prototype.fill",H),o("Uint16Array.prototype.fill",H),o("Int32Array.prototype.fill",H),o("Uint32Array.prototype.fill",H),o("Float32Array.prototype.fill",H),o("Float64Array.prototype.fill",H),o("Object.is",function(p){return p||function(g,v){return g===v?g!==0||1/g===1/v:g!==g&&v!==v}}),o("Array.prototype.includes",function(p){return p||function(g,v){var S=this;S instanceof String&&(S=String(S));var k=S.length;for(v=v||0,0>v&&(v=Math.max(v+k,0));v<k;v++){var _=S[v];if(_===g||Object.is(_,g))return!0}return!1}}),o("String.prototype.includes",function(p){return p||function(g,v){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(g instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(g,v||0)!==-1}});var K=this||self;function Z(p,g){p=p.split(".");var v=K;p[0]in v||typeof v.execScript>"u"||v.execScript("var "+p[0]);for(var S;p.length&&(S=p.shift());)p.length||g===void 0?v[S]&&v[S]!==Object.prototype[S]?v=v[S]:v=v[S]={}:v[S]=g}function te(p){var g;e:{if((g=K.navigator)&&(g=g.userAgent))break e;g=""}return g.indexOf(p)!=-1}var ae=Array.prototype.map?function(p,g){return Array.prototype.map.call(p,g,void 0)}:function(p,g){for(var v=p.length,S=Array(v),k=typeof p=="string"?p.split(""):p,_=0;_<v;_++)_ in k&&(S[_]=g.call(void 0,k[_],_,p));return S},ie={},le=null;function fe(p){var g=p.length,v=3*g/4;v%3?v=Math.floor(v):"=.".indexOf(p[g-1])!=-1&&(v="=.".indexOf(p[g-2])!=-1?v-2:v-1);var S=new Uint8Array(v),k=0;return Ie(p,function(_){S[k++]=_}),k!==v?S.subarray(0,k):S}function Ie(p,g){function v(W){for(;S<p.length;){var j=p.charAt(S++),Y=le[j];if(Y!=null)return Y;if(!/^[\s\xa0]*$/.test(j))throw Error("Unknown base64 encoding at char: "+j)}return W}we();for(var S=0;;){var k=v(-1),_=v(0),R=v(64),L=v(64);if(L===64&&k===-1)break;g(k<<2|_>>4),R!=64&&(g(_<<4&240|R>>2),L!=64&&g(R<<6&192|L))}}function we(){if(!le){le={};for(var p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),g=["+/=","+/","-_=","-_.","-_"],v=0;5>v;v++){var S=p.concat(g[v].split(""));ie[v]=S;for(var k=0;k<S.length;k++){var _=S[k];le[_]===void 0&&(le[_]=k)}}}}var Ce=typeof Uint8Array<"u",Me=!(te("Trident")||te("MSIE"))&&typeof K.btoa=="function";function ut(p){if(!Me){var g;g===void 0&&(g=0),we(),g=ie[g];for(var v=Array(Math.floor(p.length/3)),S=g[64]||"",k=0,_=0;k<p.length-2;k+=3){var R=p[k],L=p[k+1],W=p[k+2],j=g[R>>2];R=g[(R&3)<<4|L>>4],L=g[(L&15)<<2|W>>6],W=g[W&63],v[_++]=j+R+L+W}switch(j=0,W=S,p.length-k){case 2:j=p[k+1],W=g[(j&15)<<2]||S;case 1:p=p[k],v[_]=g[p>>2]+g[(p&3)<<4|j>>4]+W+S}return v.join("")}for(g="";10240<p.length;)g+=String.fromCharCode.apply(null,p.subarray(0,10240)),p=p.subarray(10240);return g+=String.fromCharCode.apply(null,p),btoa(g)}var ct=RegExp("[-_.]","g");function fn(p){switch(p){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function _n(p){if(!Me)return fe(p);ct.test(p)&&(p=p.replace(ct,fn)),p=atob(p);for(var g=new Uint8Array(p.length),v=0;v<p.length;v++)g[v]=p.charCodeAt(v);return g}var Yn;function Pr(){return Yn||(Yn=new Uint8Array(0))}var Qn={},m1=typeof Uint8Array.prototype.slice=="function",Ue=0,lt=0;function ap(p){var g=0>p;p=Math.abs(p);var v=p>>>0;p=Math.floor((p-v)/4294967296),g&&(v=i(ip(v,p)),g=v.next().value,p=v.next().value,v=g),Ue=v>>>0,lt=p>>>0}var g1=typeof BigInt=="function";function ip(p,g){return g=~g,p?p=~p+1:g+=1,[p,g]}function up(p,g){this.i=p>>>0,this.h=g>>>0}function cp(p){if(!p)return lp||(lp=new up(0,0));if(!/^-?\d+$/.test(p))return null;if(16>p.length)ap(Number(p));else if(g1)p=BigInt(p),Ue=Number(p&BigInt(4294967295))>>>0,lt=Number(p>>BigInt(32)&BigInt(4294967295));else{var g=+(p[0]==="-");lt=Ue=0;for(var v=p.length,S=g,k=(v-g)%6+g;k<=v;S=k,k+=6)S=Number(p.slice(S,k)),lt*=1e6,Ue=1e6*Ue+S,4294967296<=Ue&&(lt+=Ue/4294967296|0,Ue%=4294967296);g&&(g=i(ip(Ue,lt)),p=g.next().value,g=g.next().value,Ue=p,lt=g)}return new up(Ue,lt)}var lp;function dp(p,g){return Error("Invalid wire type: "+p+" (at position "+g+")")}function ci(){return Error("Failed to read varint, encoding is invalid.")}function hp(p,g){return Error("Tried to read past the end of the data "+g+" > "+p)}function Zn(){throw Error("Invalid UTF8")}function pp(p,g){return g=String.fromCharCode.apply(null,g),p==null?g:p+g}var $o=void 0,li,y1=typeof TextDecoder<"u",fp,x1=typeof TextEncoder<"u",mp;function gp(p){if(p!==Qn)throw Error("illegal external caller")}function ys(p,g){if(gp(g),this.V=p,p!=null&&p.length===0)throw Error("ByteString should be constructed with non-empty values")}function di(){return mp||(mp=new ys(null,Qn))}function yp(p){gp(Qn);var g=p.V;return g=g==null||Ce&&g!=null&&g instanceof Uint8Array?g:typeof g=="string"?_n(g):null,g==null?g:p.V=g}function b1(p){if(typeof p=="string")return{buffer:_n(p),C:!1};if(Array.isArray(p))return{buffer:new Uint8Array(p),C:!1};if(p.constructor===Uint8Array)return{buffer:p,C:!1};if(p.constructor===ArrayBuffer)return{buffer:new Uint8Array(p),C:!1};if(p.constructor===ys)return{buffer:yp(p)||Pr(),C:!0};if(p instanceof Uint8Array)return{buffer:new Uint8Array(p.buffer,p.byteOffset,p.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function xp(p,g){this.i=null,this.m=!1,this.h=this.j=this.l=0,hi(this,p,g)}function hi(p,g,v){v=v===void 0?{}:v,p.S=v.S===void 0?!1:v.S,g&&(g=b1(g),p.i=g.buffer,p.m=g.C,p.l=0,p.j=p.i.length,p.h=p.l)}xp.prototype.reset=function(){this.h=this.l};function Jn(p,g){if(p.h=g,g>p.j)throw hp(p.j,g)}function xs(p){var g=p.i,v=p.h,S=g[v++],k=S&127;if(S&128&&(S=g[v++],k|=(S&127)<<7,S&128&&(S=g[v++],k|=(S&127)<<14,S&128&&(S=g[v++],k|=(S&127)<<21,S&128&&(S=g[v++],k|=S<<28,S&128&&g[v++]&128&&g[v++]&128&&g[v++]&128&&g[v++]&128&&g[v++]&128)))))throw ci();return Jn(p,v),k}function bp(p,g){if(0>g)throw Error("Tried to read a negative byte length: "+g);var v=p.h,S=v+g;if(S>p.j)throw hp(g,p.j-v);return p.h=S,v}var wp=[];function pi(){this.h=[]}pi.prototype.length=function(){return this.h.length},pi.prototype.end=function(){var p=this.h;return this.h=[],p};function vp(p,g,v){for(;0<v||127<g;)p.h.push(g&127|128),g=(g>>>7|v<<25)>>>0,v>>>=7;p.h.push(g)}function er(p,g){for(;127<g;)p.h.push(g&127|128),g>>>=7;p.h.push(g)}function fi(p,g){if(wp.length){var v=wp.pop();hi(v,p,g),p=v}else p=new xp(p,g);this.h=p,this.j=this.h.h,this.i=this.l=-1,this.setOptions(g)}fi.prototype.setOptions=function(p){p=p===void 0?{}:p,this.ca=p.ca===void 0?!1:p.ca},fi.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function $p(p){var g=p.h;if(g.h==g.j)return!1;p.j=p.h.h;var v=xs(p.h)>>>0;if(g=v>>>3,v&=7,!(0<=v&&5>=v))throw dp(v,p.j);if(1>g)throw Error("Invalid field number: "+g+" (at position "+p.j+")");return p.l=g,p.i=v,!0}function So(p){switch(p.i){case 0:if(p.i!=0)So(p);else e:{p=p.h;for(var g=p.h,v=g+10,S=p.i;g<v;)if(!(S[g++]&128)){Jn(p,g);break e}throw ci()}break;case 1:p=p.h,Jn(p,p.h+8);break;case 2:p.i!=2?So(p):(g=xs(p.h)>>>0,p=p.h,Jn(p,p.h+g));break;case 5:p=p.h,Jn(p,p.h+4);break;case 3:g=p.l;do{if(!$p(p))throw Error("Unmatched start-group tag: stream EOF");if(p.i==4){if(p.l!=g)throw Error("Unmatched end-group tag");break}So(p)}while(!0);break;default:throw dp(p.i,p.j)}}var Co=[];function w1(){this.j=[],this.i=0,this.h=new pi}function Lr(p,g){g.length!==0&&(p.j.push(g),p.i+=g.length)}function v1(p,g){if(g=g.R){Lr(p,p.h.end());for(var v=0;v<g.length;v++)Lr(p,yp(g[v])||Pr())}}var mn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function tr(p,g){return mn?p[mn]|=g:p.A!==void 0?p.A|=g:(Object.defineProperties(p,{A:{value:g,configurable:!0,writable:!0,enumerable:!1}}),g)}function Sp(p,g){mn?p[mn]&&(p[mn]&=~g):p.A!==void 0&&(p.A&=~g)}function Le(p){var g;return mn?g=p[mn]:g=p.A,g??0}function en(p,g){mn?p[mn]=g:p.A!==void 0?p.A=g:Object.defineProperties(p,{A:{value:g,configurable:!0,writable:!0,enumerable:!1}})}function mi(p){return tr(p,1),p}function $1(p,g){en(g,(p|0)&-51)}function To(p,g){en(g,(p|18)&-41)}var gi={};function No(p){return p!==null&&typeof p=="object"&&!Array.isArray(p)&&p.constructor===Object}var bs,Cp=[];en(Cp,23),bs=Object.freeze(Cp);function yi(p){if(Le(p.o)&2)throw Error("Cannot mutate an immutable Message")}function xi(p){var g=p.length;(g=g?p[g-1]:void 0)&&No(g)?g.g=1:(g={},p.push((g.g=1,g)))}function Tp(p){var g=p.i+p.G;return p.B||(p.B=p.o[g]={})}function Wt(p,g){return g===-1?null:g>=p.i?p.B?p.B[g]:void 0:p.o[g+p.G]}function tn(p,g,v,S){yi(p),ws(p,g,v,S)}function ws(p,g,v,S){p.j&&(p.j=void 0),g>=p.i||S?Tp(p)[g]=v:(p.o[g+p.G]=v,(p=p.B)&&g in p&&delete p[g])}function bi(p,g,v,S){var k=Wt(p,g);Array.isArray(k)||(k=bs);var _=Le(k);if(_&1||mi(k),S)_&2||tr(k,2),v&1||Object.freeze(k);else{S=!(v&2);var R=_&2;v&1||!R?S&&_&16&&!R&&Sp(k,16):(k=mi(Array.prototype.slice.call(k)),ws(p,g,k))}return k}function wi(p,g){var v=Wt(p,g),S=v==null?v:typeof v=="number"||v==="NaN"||v==="Infinity"||v==="-Infinity"?Number(v):void 0;return S!=null&&S!==v&&ws(p,g,S),S}function Np(p,g,v,S,k){p.h||(p.h={});var _=p.h[v],R=bi(p,v,3,k);if(!_){var L=R;_=[];var W=!!(Le(p.o)&16);R=!!(Le(L)&2);var j=L;!k&&R&&(L=Array.prototype.slice.call(L));for(var Y=R,ue=0;ue<L.length;ue++){var re=L[ue],ee=g,ce=!1;if(ce=ce===void 0?!1:ce,re=Array.isArray(re)?new ee(re):ce?new ee:void 0,re!==void 0){ee=re.o;var pe=ce=Le(ee);R&&(pe|=2),W&&(pe|=16),pe!=ce&&en(ee,pe),ee=pe,Y=Y||!!(2&ee),_.push(re)}}return p.h[v]=_,W=Le(L),g=W|33,g=Y?g&-9:g|8,W!=g&&(Y=L,Object.isFrozen(Y)&&(Y=Array.prototype.slice.call(Y)),en(Y,g),L=Y),j!==L&&ws(p,v,L),(k||S&&R)&&tr(_,2),S&&Object.freeze(_),_}return k||(k=Object.isFrozen(_),S&&!k?Object.freeze(_):!S&&k&&(_=Array.prototype.slice.call(_),p.h[v]=_)),_}function vi(p,g,v){var S=!!(Le(p.o)&2);if(g=Np(p,g,v,S,S),p=bi(p,v,3,S),!(S||Le(p)&8)){for(S=0;S<g.length;S++){if(v=g[S],Le(v.o)&2){var k=Ap(v,!1);k.j=v}else k=v;v!==k&&(g[S]=k,p[S]=k.o)}tr(p,8)}return g}function nn(p,g,v){if(v!=null&&typeof v!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof v+": "+v);tn(p,g,v)}function Ep(p,g,v,S,k){yi(p);var _=Np(p,v,g,!1,!1);return v=S??new v,p=bi(p,g,2,!1),k!=null?(_.splice(k,0,v),p.splice(k,0,v.o)):(_.push(v),p.push(v.o)),v.C()&&Sp(p,8),v}function Eo(p,g){return p??g}function rn(p,g,v){return v=v===void 0?0:v,Eo(wi(p,g),v)}var Io;function S1(p){switch(typeof p){case"number":return isFinite(p)?p:String(p);case"object":if(p)if(Array.isArray(p)){if(Le(p)&128)return p=Array.prototype.slice.call(p),xi(p),p}else{if(Ce&&p!=null&&p instanceof Uint8Array)return ut(p);if(p instanceof ys){var g=p.V;return g==null?"":typeof g=="string"?g:p.V=ut(g)}}}return p}function Ip(p,g,v,S){if(p!=null){if(Array.isArray(p))p=$i(p,g,v,S!==void 0);else if(No(p)){var k={},_;for(_ in p)k[_]=Ip(p[_],g,v,S);p=k}else p=g(p,S);return p}}function $i(p,g,v,S){var k=Le(p);S=S?!!(k&16):void 0,p=Array.prototype.slice.call(p);for(var _=0;_<p.length;_++)p[_]=Ip(p[_],g,v,S);return v(k,p),p}function C1(p){return p.ja===gi?p.toJSON():S1(p)}function T1(p,g){p&128&&xi(g)}function kp(p,g,v){if(v=v===void 0?To:v,p!=null){if(Ce&&p instanceof Uint8Array)return p.length?new ys(new Uint8Array(p),Qn):di();if(Array.isArray(p)){var S=Le(p);return S&2?p:g&&!(S&32)&&(S&16||S===0)?(en(p,S|2),p):(p=$i(p,kp,S&4?To:v,!0),g=Le(p),g&4&&g&2&&Object.freeze(p),p)}return p.ja===gi?_p(p):p}}function Rp(p,g,v,S,k,_,R){if(p=p.h&&p.h[v]){if(S=Le(p),S&2?S=p:(_=ae(p,_p),To(S,_),Object.freeze(_),S=_),yi(g),R=S==null?bs:mi([]),S!=null){for(_=!!S.length,p=0;p<S.length;p++){var L=S[p];_=_&&!(Le(L.o)&2),R[p]=L.o}_=(_?8:0)|1,p=Le(R),(p&_)!==_&&(Object.isFrozen(R)&&(R=Array.prototype.slice.call(R)),en(R,p|_)),g.h||(g.h={}),g.h[v]=S}else g.h&&(g.h[v]=void 0);ws(g,v,R,k)}else tn(g,v,kp(S,_,R),k)}function _p(p){return Le(p.o)&2||(p=Ap(p,!0),tr(p.o,2)),p}function Ap(p,g){var v=p.o,S=[];tr(S,16);var k=p.constructor.h;if(k&&S.push(k),k=p.B,k){S.length=v.length,S.fill(void 0,S.length,v.length);var _={};S[S.length-1]=_}Le(v)&128&&xi(S),g=g||p.C()?To:$1,_=p.constructor,Io=S,S=new _(S),Io=void 0,p.R&&(S.R=p.R.slice()),_=!!(Le(v)&16);for(var R=k?v.length-1:v.length,L=0;L<R;L++)Rp(p,S,L-p.G,v[L],!1,_,g);if(k)for(var W in k)Rp(p,S,+W,k[W],!0,_,g);return S}function ft(p,g,v){p==null&&(p=Io),Io=void 0;var S=this.constructor.i||0,k=0<S,_=this.constructor.h,R=!1;if(p==null){p=_?[_]:[];var L=48,W=!0;k&&(S=0,L|=128),en(p,L)}else{if(!Array.isArray(p)||_&&_!==p[0])throw Error();var j=L=tr(p,0);if((W=(16&j)!==0)&&((R=(32&j)!==0)||(j|=32)),k){if(128&j)S=0;else if(0<p.length){var Y=p[p.length-1];if(No(Y)&&"g"in Y){S=0,j|=128,delete Y.g;var ue=!0,re;for(re in Y){ue=!1;break}ue&&p.pop()}}}else if(128&j)throw Error();L!==j&&en(p,j)}this.G=(_?0:-1)-S,this.h=void 0,this.o=p;e:{if(_=this.o.length,S=_-1,_&&(_=this.o[S],No(_))){this.B=_,this.i=S-this.G;break e}g!==void 0&&-1<g?(this.i=Math.max(g,S+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!k&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(v){g=W&&!R&&!0,k=this.i;var ee;for(W=0;W<v.length;W++)R=v[W],R<k?(R+=this.G,(S=p[R])?Op(S,g):p[R]=bs):(ee||(ee=Tp(this)),(S=ee[R])?Op(S,g):ee[R]=bs)}}ft.prototype.toJSON=function(){return $i(this.o,C1,T1)},ft.prototype.C=function(){return!!(Le(this.o)&2)};function Op(p,g){if(Array.isArray(p)){var v=Le(p),S=1;!g||v&2||(S|=16),(v&S)!==S&&en(p,v|S)}}ft.prototype.ja=gi,ft.prototype.toString=function(){return this.o.toString()};function Dp(p,g,v){if(v){var S={},k;for(k in v){var _=v[k],R=_.ra;R||(S.J=_.xa||_.oa.W,_.ia?(S.aa=Vp(_.ia),R=function(L){return function(W,j,Y){return L.J(W,j,Y,L.aa)}}(S)):_.ka?(S.Z=Mp(_.da.P,_.ka),R=function(L){return function(W,j,Y){return L.J(W,j,Y,L.Z)}}(S)):R=S.J,_.ra=R),R(g,p,_.da),S={J:S.J,aa:S.aa,Z:S.Z}}}v1(g,p)}var ko=Symbol();function Fp(p,g,v){return p[ko]||(p[ko]=function(S,k){return g(S,k,v)})}function Pp(p){var g=p[ko];if(!g){var v=Ci(p);g=function(S,k){return Up(S,k,v)},p[ko]=g}return g}function N1(p){var g=p.ia;if(g)return Pp(g);if(g=p.wa)return Fp(p.da.P,g,p.ka)}function E1(p){var g=N1(p),v=p.da,S=p.oa.U;return g?function(k,_){return S(k,_,v,g)}:function(k,_){return S(k,_,v)}}function Lp(p,g){var v=p[g];return typeof v=="function"&&v.length===0&&(v=v(),p[g]=v),Array.isArray(v)&&($s in v||vs in v||0<v.length&&typeof v[0]=="function")?v:void 0}function Bp(p,g,v,S,k,_){g.P=p[0];var R=1;if(p.length>R&&typeof p[R]!="number"){var L=p[R++];v(g,L)}for(;R<p.length;){v=p[R++];for(var W=R+1;W<p.length&&typeof p[W]!="number";)W++;switch(L=p[R++],W-=R,W){case 0:S(g,v,L);break;case 1:(W=Lp(p,R))?(R++,k(g,v,L,W)):S(g,v,L,p[R++]);break;case 2:W=R++,W=Lp(p,W),k(g,v,L,W,p[R++]);break;case 3:_(g,v,L,p[R++],p[R++],p[R++]);break;case 4:_(g,v,L,p[R++],p[R++],p[R++],p[R++]);break;default:throw Error("unexpected number of binary field arguments: "+W)}}return g}var Ro=Symbol();function Vp(p){var g=p[Ro];if(!g){var v=Si(p);g=function(S,k){return Wp(S,k,v)},p[Ro]=g}return g}function Mp(p,g){var v=p[Ro];return v||(v=function(S,k){return Dp(S,k,g)},p[Ro]=v),v}var vs=Symbol();function I1(p,g){p.push(g)}function k1(p,g,v){p.push(g,v.W)}function R1(p,g,v,S){var k=Vp(S),_=Si(S).P,R=v.W;p.push(g,function(L,W,j){return R(L,W,j,_,k)})}function _1(p,g,v,S,k,_){var R=Mp(S,_),L=v.W;p.push(g,function(W,j,Y){return L(W,j,Y,S,R)})}function Si(p){var g=p[vs];return g||(g=Bp(p,p[vs]=[],I1,k1,R1,_1),$s in p&&vs in p&&(p.length=0),g)}var $s=Symbol();function A1(p,g){p[0]=g}function O1(p,g,v,S){var k=v.U;p[g]=S?function(_,R,L){return k(_,R,L,S)}:k}function D1(p,g,v,S,k){var _=v.U,R=Pp(S),L=Ci(S).P;p[g]=function(W,j,Y){return _(W,j,Y,L,R,k)}}function F1(p,g,v,S,k,_,R){var L=v.U,W=Fp(S,k,_);p[g]=function(j,Y,ue){return L(j,Y,ue,S,W,R)}}function Ci(p){var g=p[$s];return g||(g=Bp(p,p[$s]={},A1,O1,D1,F1),$s in p&&vs in p&&(p.length=0),g)}function Up(p,g,v){for(;$p(g)&&g.i!=4;){var S=g.l,k=v[S];if(!k){var _=v[0];_&&(_=_[S])&&(k=v[S]=E1(_))}if(!k||!k(g,p,S)){k=g,S=p,_=k.j,So(k);var R=k;if(!R.ca){if(k=R.h.h-_,R.h.h=_,R=R.h,k==0)k=di();else{if(_=bp(R,k),R.S&&R.m)k=R.i.subarray(_,_+k);else{R=R.i;var L=_;k=_+k,k=L===k?Pr():m1?R.slice(L,k):new Uint8Array(R.subarray(L,k))}k=k.length==0?di():new ys(k,Qn)}(_=S.R)?_.push(k):S.R=[k]}}}return p}function Wp(p,g,v){for(var S=v.length,k=S%2==1,_=k?1:0;_<S;_+=2)(0,v[_+1])(g,p,v[_]);Dp(p,g,k?v[0]:void 0)}function Ss(p,g){return{U:p,W:g}}var zt=Ss(function(p,g,v){if(p.i!==5)return!1;p=p.h;var S=p.i,k=p.h,_=S[k],R=S[k+1],L=S[k+2];return S=S[k+3],Jn(p,p.h+4),R=(_<<0|R<<8|L<<16|S<<24)>>>0,p=2*(R>>31)+1,_=R>>>23&255,R&=8388607,tn(g,v,_==255?R?NaN:1/0*p:_==0?p*Math.pow(2,-149)*R:p*Math.pow(2,_-150)*(R+Math.pow(2,23))),!0},function(p,g,v){if(g=wi(g,v),g!=null){er(p.h,8*v+5),p=p.h;var S=+g;S===0?0<1/S?Ue=lt=0:(lt=0,Ue=2147483648):isNaN(S)?(lt=0,Ue=2147483647):(S=(v=0>S?-2147483648:0)?-S:S,34028234663852886e22<S?(lt=0,Ue=(v|2139095040)>>>0):11754943508222875e-54>S?(S=Math.round(S/Math.pow(2,-149)),lt=0,Ue=(v|S)>>>0):(g=Math.floor(Math.log(S)/Math.LN2),S*=Math.pow(2,-g),S=Math.round(8388608*S),16777216<=S&&++g,lt=0,Ue=(v|g+127<<23|S&8388607)>>>0)),v=Ue,p.h.push(v>>>0&255),p.h.push(v>>>8&255),p.h.push(v>>>16&255),p.h.push(v>>>24&255)}}),P1=Ss(function(p,g,v){if(p.i!==0)return!1;var S=p.h,k=0,_=p=0,R=S.i,L=S.h;do{var W=R[L++];k|=(W&127)<<_,_+=7}while(32>_&&W&128);for(32<_&&(p|=(W&127)>>4),_=3;32>_&&W&128;_+=7)W=R[L++],p|=(W&127)<<_;if(Jn(S,L),128>W)S=k>>>0,W=p>>>0,(p=W&2147483648)&&(S=~S+1>>>0,W=~W>>>0,S==0&&(W=W+1>>>0)),S=4294967296*W+(S>>>0);else throw ci();return tn(g,v,p?-S:S),!0},function(p,g,v){g=Wt(g,v),g!=null&&(typeof g=="string"&&cp(g),g!=null&&(er(p.h,8*v),typeof g=="number"?(p=p.h,ap(g),vp(p,Ue,lt)):(v=cp(g),vp(p.h,v.i,v.h))))}),L1=Ss(function(p,g,v){return p.i!==0?!1:(tn(g,v,xs(p.h)),!0)},function(p,g,v){if(g=Wt(g,v),g!=null&&g!=null)if(er(p.h,8*v),p=p.h,v=g,0<=v)er(p,v);else{for(g=0;9>g;g++)p.h.push(v&127|128),v>>=7;p.h.push(1)}}),zp=Ss(function(p,g,v){if(p.i!==2)return!1;var S=xs(p.h)>>>0;p=p.h;var k=bp(p,S);if(p=p.i,y1){var _=p,R;(R=li)||(R=li=new TextDecoder("utf-8",{fatal:!0})),p=k+S,_=k===0&&p===_.length?_:_.subarray(k,p);try{var L=R.decode(_)}catch(ue){if($o===void 0){try{R.decode(new Uint8Array([128]))}catch{}try{R.decode(new Uint8Array([97])),$o=!0}catch{$o=!1}}throw!$o&&(li=void 0),ue}}else{L=k,S=L+S,k=[];for(var W=null,j,Y;L<S;)j=p[L++],128>j?k.push(j):224>j?L>=S?Zn():(Y=p[L++],194>j||(Y&192)!==128?(L--,Zn()):k.push((j&31)<<6|Y&63)):240>j?L>=S-1?Zn():(Y=p[L++],(Y&192)!==128||j===224&&160>Y||j===237&&160<=Y||((_=p[L++])&192)!==128?(L--,Zn()):k.push((j&15)<<12|(Y&63)<<6|_&63)):244>=j?L>=S-2?Zn():(Y=p[L++],(Y&192)!==128||(j<<28)+(Y-144)>>30||((_=p[L++])&192)!==128||((R=p[L++])&192)!==128?(L--,Zn()):(j=(j&7)<<18|(Y&63)<<12|(_&63)<<6|R&63,j-=65536,k.push((j>>10&1023)+55296,(j&1023)+56320))):Zn(),8192<=k.length&&(W=pp(W,k),k.length=0);L=pp(W,k)}return tn(g,v,L),!0},function(p,g,v){if(g=Wt(g,v),g!=null){var S=!1;if(S=S===void 0?!1:S,x1){if(S&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(g))throw Error("Found an unpaired surrogate");g=(fp||(fp=new TextEncoder)).encode(g)}else{for(var k=0,_=new Uint8Array(3*g.length),R=0;R<g.length;R++){var L=g.charCodeAt(R);if(128>L)_[k++]=L;else{if(2048>L)_[k++]=L>>6|192;else{if(55296<=L&&57343>=L){if(56319>=L&&R<g.length){var W=g.charCodeAt(++R);if(56320<=W&&57343>=W){L=1024*(L-55296)+W-56320+65536,_[k++]=L>>18|240,_[k++]=L>>12&63|128,_[k++]=L>>6&63|128,_[k++]=L&63|128;continue}else R--}if(S)throw Error("Found an unpaired surrogate");L=65533}_[k++]=L>>12|224,_[k++]=L>>6&63|128}_[k++]=L&63|128}}g=k===_.length?_:_.subarray(0,k)}er(p.h,8*v+2),er(p.h,g.length),Lr(p,p.h.end()),Lr(p,g)}}),Gp=Ss(function(p,g,v,S,k){if(p.i!==2)return!1;g=Ep(g,v,S),v=p.h.j,S=xs(p.h)>>>0;var _=p.h.h+S,R=_-v;if(0>=R&&(p.h.j=_,k(g,p,void 0,void 0,void 0),R=_-p.h.h),R)throw Error("Message parsing ended unexpectedly. Expected to read "+(S+" bytes, instead read "+(S-R)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return p.h.h=_,p.h.j=v,!0},function(p,g,v,S,k){if(g=vi(g,S,v),g!=null)for(S=0;S<g.length;S++){var _=p;er(_.h,8*v+2);var R=_.h.end();Lr(_,R),R.push(_.i),_=R,k(g[S],p),R=p;var L=_.pop();for(L=R.i+R.h.length()-L;127<L;)_.push(L&127|128),L>>>=7,R.i++;_.push(L),R.i++}});function Ti(p){return function(g,v){e:{if(Co.length){var S=Co.pop();S.setOptions(v),hi(S.h,g,v),g=S}else g=new fi(g,v);try{var k=Ci(p),_=Up(new k.P,g,k);break e}finally{k=g.h,k.i=null,k.m=!1,k.l=0,k.j=0,k.h=0,k.S=!1,g.l=-1,g.i=-1,100>Co.length&&Co.push(g)}_=void 0}return _}}function Ni(p){return function(){var g=new w1;Wp(this,g,Si(p)),Lr(g,g.h.end());for(var v=new Uint8Array(g.i),S=g.j,k=S.length,_=0,R=0;R<k;R++){var L=S[R];v.set(L,_),_+=L.length}return g.j=[v],v}}function Br(p){ft.call(this,p)}y(Br,ft);var Hp=[Br,1,L1,2,zt,3,zp,4,zp];Br.prototype.l=Ni(Hp);function Ei(p){ft.call(this,p,-1,B1)}y(Ei,ft),Ei.prototype.addClassification=function(p,g){return Ep(this,1,Br,p,g),this};var B1=[1],V1=Ti([Ei,1,Gp,Hp]);function Cs(p){ft.call(this,p)}y(Cs,ft);var jp=[Cs,1,zt,2,zt,3,zt,4,zt,5,zt];Cs.prototype.l=Ni(jp);function qp(p){ft.call(this,p,-1,M1)}y(qp,ft);var M1=[1],U1=Ti([qp,1,Gp,jp]);function _o(p){ft.call(this,p)}y(_o,ft);var Kp=[_o,1,zt,2,zt,3,zt,4,zt,5,zt,6,P1],W1=Ti(Kp);_o.prototype.l=Ni(Kp);function Xp(p,g,v){if(v=p.createShader(v===0?p.VERTEX_SHADER:p.FRAGMENT_SHADER),p.shaderSource(v,g),p.compileShader(v),!p.getShaderParameter(v,p.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+p.getShaderInfoLog(v));return v}function z1(p){return vi(p,Br,1).map(function(g){var v=Wt(g,1);return{index:v??0,qa:rn(g,2),label:Wt(g,3)!=null?Eo(Wt(g,3),""):void 0,displayName:Wt(g,4)!=null?Eo(Wt(g,4),""):void 0}})}function G1(p){return{x:rn(p,1),y:rn(p,2),z:rn(p,3),visibility:wi(p,4)!=null?rn(p,4):void 0}}function Ii(p,g){this.i=p,this.h=g,this.m=0}function Yp(p,g,v){return H1(p,g),typeof p.h.canvas.transferToImageBitmap=="function"?Promise.resolve(p.h.canvas.transferToImageBitmap()):v?Promise.resolve(p.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(p.h.canvas):(p.j===void 0&&(p.j=document.createElement("canvas")),new Promise(function(S){p.j.height=p.h.canvas.height,p.j.width=p.h.canvas.width,p.j.getContext("2d",{}).drawImage(p.h.canvas,0,0,p.h.canvas.width,p.h.canvas.height),S(p.j)}))}function H1(p,g){var v=p.h;if(p.s===void 0){var S=Xp(v,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),k=Xp(v,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),_=v.createProgram();if(v.attachShader(_,S),v.attachShader(_,k),v.linkProgram(_),!v.getProgramParameter(_,v.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+v.getProgramInfoLog(_));S=p.s=_,v.useProgram(S),k=v.getUniformLocation(S,"sampler0"),p.l={O:v.getAttribLocation(S,"aVertex"),N:v.getAttribLocation(S,"aTex"),ya:k},p.v=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,p.v),v.enableVertexAttribArray(p.l.O),v.vertexAttribPointer(p.l.O,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),p.u=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,p.u),v.enableVertexAttribArray(p.l.N),v.vertexAttribPointer(p.l.N,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),v.uniform1i(k,0)}S=p.l,v.useProgram(p.s),v.canvas.width=g.width,v.canvas.height=g.height,v.viewport(0,0,g.width,g.height),v.activeTexture(v.TEXTURE0),p.i.bindTexture2d(g.glName),v.enableVertexAttribArray(S.O),v.bindBuffer(v.ARRAY_BUFFER,p.v),v.vertexAttribPointer(S.O,2,v.FLOAT,!1,0,0),v.enableVertexAttribArray(S.N),v.bindBuffer(v.ARRAY_BUFFER,p.u),v.vertexAttribPointer(S.N,2,v.FLOAT,!1,0,0),v.bindFramebuffer(v.DRAW_FRAMEBUFFER?v.DRAW_FRAMEBUFFER:v.FRAMEBUFFER,null),v.clearColor(0,0,0,0),v.clear(v.COLOR_BUFFER_BIT),v.colorMask(!0,!0,!0,!0),v.drawArrays(v.TRIANGLE_FAN,0,4),v.disableVertexAttribArray(S.O),v.disableVertexAttribArray(S.N),v.bindBuffer(v.ARRAY_BUFFER,null),p.i.bindTexture2d(0)}function j1(p){this.h=p}var q1=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function K1(p,g){return g+p}function Qp(p,g){window[p]=g}function X1(p){var g=document.createElement("script");return g.setAttribute("src",p),g.setAttribute("crossorigin","anonymous"),new Promise(function(v){g.addEventListener("load",function(){v()},!1),g.addEventListener("error",function(){v()},!1),document.body.appendChild(g)})}function Y1(){return T(function(p){switch(p.h){case 1:return p.s=2,C(p,WebAssembly.instantiate(q1),4);case 4:p.h=3,p.s=0;break;case 2:return p.s=0,p.l=null,p.return(!1);case 3:return p.return(!0)}})}function ki(p){if(this.h=p,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=p&&p.locateFile||K1,typeof window=="object")var g=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")g=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=g,p.options){g=i(Object.keys(p.options));for(var v=g.next();!v.done;v=g.next()){v=v.value;var S=p.options[v].default;S!==void 0&&(this.l[v]=typeof S=="function"?S():S)}}}n=ki.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function Q1(p){var g,v,S,k,_,R,L,W,j,Y,ue;return T(function(re){switch(re.h){case 1:return p.ga?(g=p.h.files===void 0?[]:typeof p.h.files=="function"?p.h.files(p.l):p.h.files,C(re,Y1(),2)):re.return();case 2:if(v=re.i,typeof window=="object")return Qp("createMediapipeSolutionsWasm",{locateFile:p.locateFile}),Qp("createMediapipeSolutionsPackedAssets",{locateFile:p.locateFile}),R=g.filter(function(ee){return ee.data!==void 0}),L=g.filter(function(ee){return ee.data===void 0}),W=Promise.all(R.map(function(ee){var ce=Ao(p,ee.url);if(ee.path!==void 0){var pe=ee.path;ce=ce.then(function(Oe){return p.overrideFile(pe,Oe),Promise.resolve(Oe)})}return ce})),j=Promise.all(L.map(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v?X1(p.locateFile(ee.url,p.ha)):Promise.resolve()})).then(function(){var ee,ce,pe;return T(function(Oe){if(Oe.h==1)return ee=window.createMediapipeSolutionsWasm,ce=window.createMediapipeSolutionsPackedAssets,pe=p,C(Oe,ee(ce),2);pe.i=Oe.i,Oe.h=0})}),Y=function(){return T(function(ee){return p.h.graph&&p.h.graph.url?ee=C(ee,Ao(p,p.h.graph.url),0):(ee.h=0,ee=void 0),ee})}(),C(re,Promise.all([j,W,Y]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return S=g.filter(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v}).map(function(ee){return p.locateFile(ee.url,p.ha)}),importScripts.apply(null,u(S)),k=p,C(re,createMediapipeSolutionsWasm(Module),6);case 6:k.i=re.i,p.m=new OffscreenCanvas(1,1),p.i.canvas=p.m,_=p.i.GL.createContext(p.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),p.i.GL.makeContextCurrent(_),re.h=4;break;case 7:if(p.m=document.createElement("canvas"),ue=p.m.getContext("webgl2",{}),!ue&&(ue=p.m.getContext("webgl",{}),!ue))return alert("Failed to create WebGL canvas context when passing video frame."),re.return();p.K=ue,p.i.canvas=p.m,p.i.createContext(p.m,!0,!0,{});case 4:p.j=new p.i.SolutionWasm,p.ga=!1,re.h=0}})}function Z1(p){var g,v,S,k,_,R,L,W;return T(function(j){if(j.h==1){if(p.h.graph&&p.h.graph.url&&p.fa===p.h.graph.url)return j.return();if(p.u=!0,!p.h.graph||!p.h.graph.url){j.h=2;return}return p.fa=p.h.graph.url,C(j,Ao(p,p.h.graph.url),3)}for(j.h!=2&&(g=j.i,p.j.loadGraph(g)),v=i(Object.keys(p.D)),S=v.next();!S.done;S=v.next())k=S.value,p.j.overrideFile(k,p.D[k]);if(p.D={},p.h.listeners)for(_=i(p.h.listeners),R=_.next();!R.done;R=_.next())L=R.value,nw(p,L);W=p.l,p.l={},p.setOptions(W),j.h=0})}n.reset=function(){var p=this;return T(function(g){p.j&&(p.j.reset(),p.s={},p.v={}),g.h=0})},n.setOptions=function(p,g){var v=this;if(g=g||this.h.options){for(var S=[],k=[],_={},R=i(Object.keys(p)),L=R.next();!L.done;_={X:_.X,Y:_.Y},L=R.next())if(L=L.value,!(L in this.l&&this.l[L]===p[L])){this.l[L]=p[L];var W=g[L];W!==void 0&&(W.onChange&&(_.X=W.onChange,_.Y=p[L],S.push(function(j){return function(){var Y;return T(function(ue){if(ue.h==1)return C(ue,j.X(j.Y),2);Y=ue.i,Y===!0&&(v.u=!0),ue.h=0})}}(_))),W.graphOptionXref&&(L=Object.assign({},{calculatorName:"",calculatorIndex:0},W.graphOptionXref,{valueNumber:W.type===1?p[L]:0,valueBoolean:W.type===0?p[L]:!1,valueString:W.type===2?p[L]:""}),k.push(L)))}(S.length!==0||k.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(k),this.F=(this.F===void 0?[]:this.F).concat(S))}};function J1(p){var g,v,S,k,_,R,L;return T(function(W){switch(W.h){case 1:if(!p.u)return W.return();if(!p.F){W.h=2;break}g=i(p.F),v=g.next();case 3:if(v.done){W.h=5;break}return S=v.value,C(W,S(),4);case 4:v=g.next(),W.h=3;break;case 5:p.F=void 0;case 2:if(p.H){for(k=new p.i.GraphOptionChangeRequestList,_=i(p.H),R=_.next();!R.done;R=_.next())L=R.value,k.push_back(L);p.j.changeOptions(k),k.delete(),p.H=void 0}p.u=!1,W.h=0}})}n.initialize=function(){var p=this;return T(function(g){return g.h==1?C(g,Q1(p),2):g.h!=3?C(g,Z1(p),3):C(g,J1(p),0)})};function Ao(p,g){var v,S;return T(function(k){return g in p.L?k.return(p.L[g]):(v=p.locateFile(g,""),S=fetch(v).then(function(_){return _.arrayBuffer()}),p.L[g]=S,k.return(S))})}n.overrideFile=function(p,g){this.j?this.j.overrideFile(p,g):this.D[p]=g},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(p,g){var v=this,S,k,_,R,L,W,j,Y,ue;return T(function(re){switch(re.h){case 1:return v.h.inputs?(S=1e3*(g??performance.now()),C(re,v.I,2)):re.return();case 2:return C(re,v.initialize(),3);case 3:for(k=new v.i.PacketDataList,_=i(Object.keys(p)),R=_.next();!R.done;R=_.next())if(L=R.value,W=v.h.inputs[L]){e:{var ee=p[L];switch(W.type){case"video":var ce=v.s[W.stream];if(ce||(ce=new Ii(v.i,v.K),v.s[W.stream]=ce),ce.m===0&&(ce.m=ce.i.createTexture()),typeof HTMLVideoElement<"u"&&ee instanceof HTMLVideoElement)var pe=ee.videoWidth,Oe=ee.videoHeight;else typeof HTMLImageElement<"u"&&ee instanceof HTMLImageElement?(pe=ee.naturalWidth,Oe=ee.naturalHeight):(pe=ee.width,Oe=ee.height);Oe={glName:ce.m,width:pe,height:Oe},pe=ce.h,pe.canvas.width=Oe.width,pe.canvas.height=Oe.height,pe.activeTexture(pe.TEXTURE0),ce.i.bindTexture2d(ce.m),pe.texImage2D(pe.TEXTURE_2D,0,pe.RGBA,pe.RGBA,pe.UNSIGNED_BYTE,ee),ce.i.bindTexture2d(0),ce=Oe;break e;case"detections":for(ce=v.s[W.stream],ce||(ce=new j1(v.i),v.s[W.stream]=ce),ce.data||(ce.data=new ce.h.DetectionListData),ce.data.reset(ee.length),Oe=0;Oe<ee.length;++Oe){pe=ee[Oe];var _e=ce.data,Xe=_e.setBoundingBox,It=Oe,mt=pe.la,$e=new _o;if(nn($e,1,mt.sa),nn($e,2,mt.ta),nn($e,3,mt.height),nn($e,4,mt.width),nn($e,5,mt.rotation),tn($e,6,mt.pa),mt=$e.l(),Xe.call(_e,It,mt),pe.ea)for(_e=0;_e<pe.ea.length;++_e){$e=pe.ea[_e],Xe=ce.data,It=Xe.addNormalizedLandmark,mt=Oe,$e=Object.assign({},$e,{visibility:$e.visibility?$e.visibility:0});var Ye=new Cs;nn(Ye,1,$e.x),nn(Ye,2,$e.y),nn(Ye,3,$e.z),$e.visibility&&nn(Ye,4,$e.visibility),$e=Ye.l(),It.call(Xe,mt,$e)}if(pe.ba)for(_e=0;_e<pe.ba.length;++_e)Xe=ce.data,It=Xe.addClassification,mt=Oe,$e=pe.ba[_e],Ye=new Br,nn(Ye,2,$e.qa),$e.index&&tn(Ye,1,$e.index),$e.label&&tn(Ye,3,$e.label),$e.displayName&&tn(Ye,4,$e.displayName),$e=Ye.l(),It.call(Xe,mt,$e)}ce=ce.data;break e;default:ce={}}}switch(j=ce,Y=W.stream,W.type){case"video":k.pushTexture2d(Object.assign({},j,{stream:Y,timestamp:S}));break;case"detections":ue=j,ue.stream=Y,ue.timestamp=S,k.pushDetectionList(ue);break;default:throw Error("Unknown input config type: '"+W.type+"'")}}return v.j.send(k),C(re,v.I,4);case 4:k.delete(),re.h=0}})};function ew(p,g,v){var S,k,_,R,L,W,j,Y,ue,re,ee,ce,pe,Oe;return T(function(_e){switch(_e.h){case 1:if(!v)return _e.return(g);for(S={},k=0,_=i(Object.keys(v)),R=_.next();!R.done;R=_.next())L=R.value,W=v[L],typeof W!="string"&&W.type==="texture"&&g[W.stream]!==void 0&&++k;1<k&&(p.M=!1),j=i(Object.keys(v)),R=j.next();case 2:if(R.done){_e.h=4;break}if(Y=R.value,ue=v[Y],typeof ue=="string")return pe=S,Oe=Y,C(_e,tw(p,Y,g[ue]),14);if(re=g[ue.stream],ue.type==="detection_list"){if(re){for(var Xe=re.getRectList(),It=re.getLandmarksList(),mt=re.getClassificationsList(),$e=[],Ye=0;Ye<Xe.size();++Ye){var An=W1(Xe.get(Ye)),rw=rn(An,1),sw=rn(An,2),ow=rn(An,3),aw=rn(An,4),iw=rn(An,5,0),Oo=void 0;Oo=Oo===void 0?0:Oo,An={la:{sa:rw,ta:sw,height:ow,width:aw,rotation:iw,pa:Eo(Wt(An,6),Oo)},ea:vi(U1(It.get(Ye)),Cs,1).map(G1),ba:z1(V1(mt.get(Ye)))},$e.push(An)}Xe=$e}else Xe=[];S[Y]=Xe,_e.h=7;break}if(ue.type==="proto_list"){if(re){for(Xe=Array(re.size()),It=0;It<re.size();It++)Xe[It]=re.get(It);re.delete()}else Xe=[];S[Y]=Xe,_e.h=7;break}if(re===void 0){_e.h=3;break}if(ue.type==="float_list"){S[Y]=re,_e.h=7;break}if(ue.type==="proto"){S[Y]=re,_e.h=7;break}if(ue.type!=="texture")throw Error("Unknown output config type: '"+ue.type+"'");return ee=p.v[Y],ee||(ee=new Ii(p.i,p.K),p.v[Y]=ee),C(_e,Yp(ee,re,p.M),13);case 13:ce=_e.i,S[Y]=ce;case 7:ue.transform&&S[Y]&&(S[Y]=ue.transform(S[Y])),_e.h=3;break;case 14:pe[Oe]=_e.i;case 3:R=j.next(),_e.h=2;break;case 4:return _e.return(S)}})}function tw(p,g,v){var S;return T(function(k){return typeof v=="number"||v instanceof Uint8Array||v instanceof p.i.Uint8BlobList?k.return(v):v instanceof p.i.Texture2dDataOut?(S=p.v[g],S||(S=new Ii(p.i,p.K),p.v[g]=S),k.return(Yp(S,v,p.M))):k.return(void 0)})}function nw(p,g){for(var v=g.name||"$",S=[].concat(u(g.wants)),k=new p.i.StringList,_=i(g.wants),R=_.next();!R.done;R=_.next())k.push_back(R.value);_=p.i.PacketListener.implement({onResults:function(L){for(var W={},j=0;j<g.wants.length;++j)W[S[j]]=L.get(j);var Y=p.listeners[v];Y&&(p.I=ew(p,W,g.outs).then(function(ue){ue=Y(ue);for(var re=0;re<g.wants.length;++re){var ee=W[S[re]];typeof ee=="object"&&ee.hasOwnProperty&&ee.hasOwnProperty("delete")&&ee.delete()}ue&&(p.I=ue)}))}}),p.j.attachMultiListener(k,_),k.delete()}n.onResults=function(p,g){this.listeners[g||"$"]=p},Z("Solution",ki),Z("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Zp(p){switch(p===void 0&&(p=0),p){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function Jp(p){var g=this;p=p||{},this.h=new ki({locateFile:p.locateFile,files:function(v){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:Zp(v.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(v){var S,k,_;return T(function(R){return R.h==1?(S=Zp(v),k="third_party/mediapipe/modules/selfie_segmentation/"+S,C(R,Ao(g.h,S),2)):(_=R.i,g.h.overrideFile(k,_),R.return(!0))})}}}})}n=Jp.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(p){this.h.onResults(p)},n.initialize=function(){var p=this;return T(function(g){return C(g,p.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(p){var g=this;return T(function(v){return C(v,g.h.send(p),0)})},n.setOptions=function(p){this.h.setOptions(p)},Z("SelfieSegmentation",Jp),Z("VERSION","0.1.1675465747")}).call(Vi)),Vi}var zk=Wk();/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var Iu=function(n,e){return Iu=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])},Iu(n,e)};function ob(n,e){function t(){this.constructor=n}Iu(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var et=function(){return et=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},et.apply(this,arguments)};function me(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof t?l:new t(function(d){d(l)})).then(a,i)}u((r=r.apply(n,[])).next())})}function ge(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!((s=s.length>0&&s[s.length-1])||l[0]!==6&&l[0]!==2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(d){l=[6,d],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function Ca(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function Xh(n){return me(this,void 0,void 0,function(){var e,t;return ge(this,function(r){switch(r.label){case 0:return e=document.createElement("canvas"),n instanceof Se?[4,go(n,e)]:[3,2];case 1:return r.sent(),[3,3];case 2:e.width=Ca(n.width),e.height=Ca(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),r.label=3;case 3:return[2,e]}})})}function ab(n){return me(this,void 0,void 0,function(){var e,t,r,s,o,a;return ge(this,function(i){switch(i.label){case 0:return n instanceof Se?(e=n.shape.slice(0,2),t=e[0],r=e[1],s=ImageData.bind,[4,go(n)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,i.sent(),r,t]))];case 2:return o=document.createElement("canvas"),a=o.getContext("2d"),o.width=Ca(n.width),o.height=Ca(n.height),a.drawImage(n,0,0),[2,a.getImageData(0,0,o.width,o.height)]}})})}function ib(n){return me(this,void 0,void 0,function(){var e,t;return ge(this,function(r){switch(r.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,Xh(n)]:[3,2];case 1:return t=r.sent(),[3,3];case 2:t=n,r.label=3;case 3:return e=t,[2,Za(e,4)]}})})}function ei(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function ub(n){var e=n.shape[2],t=Md(n,2),r=G(t,[-1]);return Xs(r,e)}function Bo(n,e){return oe(function(){return be(is(n,he(e)),"int32")})}function Gk(n,e){var t=e.shape,r=t[0],s=t[1],o=t[2];return oe(function(){var a=ub(e),i=dt(Gn(0,o,1,"int32"),1),u=be(ve(a,i),"int32"),c=G(u,[r,s]),l=se(c,he(1,"int32"));return de(function(d,h){return Q(d,h)}(l,n),he(1,"int32"))})}var cb=function(){function n(e,t){this.model=e,this.outputStride=t;var r=this.model.inputs[0].shape;I(r[1]===-1&&r[2]===-1,function(){return"Input shape ["+r[1]+", "+r[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(e){var t=this;return oe(function(){var r=t.preprocessInput(be(e,"float32")),s=dt(r,0),o=t.model.predict(s).map(function(i){return Dt(i,[0])}),a=t.nameOutputResults(o);return{heatmapScores:an(a.heatmap),offsets:a.offsets,displacementFwd:a.displacementFwd,displacementBwd:a.displacementBwd,segmentation:a.segmentation,partHeatmaps:a.partHeatmaps,longOffsets:a.longOffsets,partOffsets:a.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),Hk=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return ob(e,n),e.prototype.preprocessInput=function(t){return oe(function(){return de(Ee(t,127.5),1)})},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(cb),ti=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],qt=ti.length,Ta=ti.reduce(function(n,e,t){return n[e]=t,n},{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){var e=n[0],t=n[1];return[Ta[e],Ta[t]]});function Yh(n,e,t){var r=n[0],s=n[1],o=e[0],a=e[1],i=t.top,u=t.bottom;return[a/(t.left+t.right+s),o/(i+u+r)]}function lb(n,e,t,r){return{y:r.get(n,e,t),x:r.get(n,e,t+qt)}}function db(n,e,t){var r=lb(n.heatmapY,n.heatmapX,n.id,t),s=r.y,o=r.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+s}}function Vf(n,e,t){return n<e?e:n>t?t:n}function Mf(n,e){return{x:n.x+e.x,y:n.y+e.y}}function jk(n,e,t){t===void 0&&(t=.3);for(var r=0,s=0,o=0;o<n.length;o++)e.keypoints[o].score>t&&(s+=1,r+=Math.pow(n[o].x-e.keypoints[o].position.x,2)+Math.pow(n[o].y-e.keypoints[o].position.y,2));return s===0?r=1/0:r/=s,r}function qk(n,e,t,r,s,o,a){for(var i=a[0],u=a[1],c=t(n),l=c.y*r+c.x,d=s[qt*(2*l)+e],h=s[qt*(2*l+1)+e],f=n.y+d,m=n.x+h,x=0;x<o;x++){f=Math.min(f,i-1);var y=t({x:m=Math.min(m,u-1),y:f}),b=y.y*r+y.x;f+=d=s[qt*(2*b)+e],m+=h=s[qt*(2*b+1)+e]}return{x:m,y:f}}function hb(n,e,t,r,s,o,a,i,u,c){for(var l=s[0],d=s[1],h=o[0],f=o[1],m=i[0],x=i[1],y=[],b=function(V){return function(P,F,T,z){var H=F[0],K=F[1],Z=T[0],te=T[1],ae=Math.round(((H+P.y+1)*te-1)/z);return{x:Math.round(((K+P.x+1)*Z-1)/z),y:ae}}(V,[l,d],[h,f],u)},$=0;$<r;$++){var E=qk(n,$,b,a,e,c,[m,x]);y.push(E)}for(var C=-1,A=1/0,B=0;B<t.length;B++){var M=jk(y,t[B]);M<A&&(C=B,A=M)}return C}function pb(n,e){var t=n[0],r=n[1];return[Math.round((r-1)/e+1),Math.round((t-1)/e+1)]}function fb(n,e,t,r,s,o,a,i,u,c,l){for(var d=a[0],h=a[1],f=n.shape,m=f[0],x=f[1],y=e.shape.slice(0,2),b=y[0],$=y[1],E=G(e,[b,$,2,qt]),C=new Float32Array(l*qt*3).fill(0),A=0;A<t.length;A++)for(var B=A*qt*3,M=t[A],V=0;V<qt;V++){var P=M.keypoints[V],F=B+3*V;C[F]=P.score,C[F+1]=P.position.y,C[F+2]=P.position.x}var T=Yh([r,s],[d,h],i),z=T[0],H=T[1],K=Pt(C,[l,qt,3]),Z=i.top,te=i.left,ae={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,x],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+Z+", "+H+", "+o+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+te+", "+z+", "+o+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+l+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+qt+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+u+`; s++) {
            int yRounded = round(min(y, float(`+(r-1)+`)));
            int xRounded = round(min(x, float(`+(s-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+Z+", "+H+", "+o+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+te+", "+z+", "+o+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+c+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return Fd().compileAndRun(ae,[n,E,K])}function mb(){return Dd()==="webgl"}function Kk(n,e,t,r,s,o,a,i,u,c,l,d){var h=a[0],f=a[1];return u===void 0&&(u=.2),c===void 0&&(c=8),l===void 0&&(l=.3),d===void 0&&(d=10),me(this,void 0,void 0,function(){var m,x,y,b,$;return ge(this,function(E){switch(E.label){case 0:return m=t.filter(function(C){return C.score>=u}),mb()?(y=oe(function(){var C=fb(n,e,m,r,s,o,[h,f],i,c,l,d),A=Gt().makeTensorFromDataId(C.dataId,C.shape,C.dtype);return m.map(function(B,M){return function(V,P){return oe(function(){return be(lo(V,he(P)),"int32")})}(A,M)})}),[4,Promise.all(y.map(function(C){return C.data()}))]):[3,2];case 1:return x=E.sent(),y.forEach(function(C){return C.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return b=E.sent(),[4,e.data()];case 4:$=E.sent(),x=function(C,A,B,M,V,P,F,T,z,H){var K=F[0],Z=F[1];H===void 0&&(H=5);for(var te=B.map(function(fn){return new Uint8Array(M*V).fill(0)}),ae=T.top,ie=T.left,le=Yh([M,V],[K,Z],T),fe=le[0],Ie=le[1],we=pb([K,Z],P)[0],Ce=0;Ce<M;Ce+=1)for(var Me=0;Me<V;Me+=1){var ut=Ce*V+Me;if(C[ut]===1){var ct=hb({x:Me,y:Ce},A,B,H,[ae,ie],[fe,Ie],we,[M,V],P,z);ct>=0&&(te[ct][ut]=1)}}return te}(b,$,m,r,s,o,[h,f],i,c),E.label=5;case 5:return[2,x.map(function(C,A){return{data:C,pose:m[A],width:s,height:r}})]}})})}function Xk(n,e,t,r,s,o,a,i,u,c,l,d,h){var f=i[0],m=i[1];return c===void 0&&(c=.2),l===void 0&&(l=8),d===void 0&&(d=.3),h===void 0&&(h=10),me(this,void 0,void 0,function(){var x,y,b,$,E,C;return ge(this,function(A){switch(A.label){case 0:return x=r.filter(function(B){return B.score>=c}),mb()?(b=oe(function(){var B=fb(n,e,x,s,o,a,[f,m],u,l,d,h),M=Gt().makeTensorFromDataId(B.dataId,B.shape,B.dtype);return x.map(function(V,P){return function(F,T,z){return oe(function(){return de(Q(be(lo(F,he(z)),"int32"),se(T,1)),1)})}(M,t,P)})}),[4,Promise.all(b.map(function(B){return B.data()}))]):[3,2];case 1:return y=A.sent(),b.forEach(function(B){return B.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return $=A.sent(),[4,e.data()];case 4:return E=A.sent(),[4,t.data()];case 5:C=A.sent(),y=function(B,M,V,P,F,T,z,H,K,Z,te){var ae=H[0],ie=H[1];te===void 0&&(te=5);for(var le=P.map(function(Pr){return new Int32Array(F*T).fill(-1)}),fe=K.top,Ie=K.left,we=Yh([F,T],[ae,ie],K),Ce=we[0],Me=we[1],ut=pb([ae,ie],z)[0],ct=0;ct<F;ct+=1)for(var fn=0;fn<T;fn+=1){var _n=ct*T+fn;if(B[_n]===1){var Yn=hb({x:fn,y:ct},M,P,te,[fe,Ie],[Ce,Me],ut,[F,T],z,Z);Yn>=0&&(le[Yn][_n]=V[_n])}}return le}($,E,C,x,s,o,a,[f,m],u,l),A.label=6;case 6:return[2,y.map(function(B,M){return{pose:x[M],data:B,height:s,width:o}})]}})})}function Mi(n){return Math.floor(n/2)}var Yk=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(Mi(e),e);)this.exchange(e,Mi(e)),e=Mi(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},n}();function Qk(n,e,t,r,s,o){for(var a=o.shape,i=a[0],u=a[1],c=!0,l=Math.max(t-s,0),d=Math.min(t+s+1,i),h=l;h<d;++h){for(var f=Math.max(r-s,0),m=Math.min(r+s+1,u),x=f;x<m;++x)if(o.get(h,x,n)>e){c=!1;break}if(!c)break}return c}var gb=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){var e=n[0],t=n[1];return[Ta[e],Ta[t]]}),Ui=gb.map(function(n){return n[1]}),Uf=gb.map(function(n){return n[0]});function Wi(n,e,t,r){return{y:Vf(Math.round(n.y/e),0,t-1),x:Vf(Math.round(n.x/e),0,r-1)}}function Wf(n,e,t,r,s,o,a,i){i===void 0&&(i=2);for(var u=r.shape,c=u[0],l=u[1],d=function($,E,C){var A=C.shape[2]/2;return{y:C.get(E.y,E.x,$),x:C.get(E.y,E.x,A+$)}}(n,Wi(e.position,o,c,l),a),h=Mf(e.position,d),f=0;f<i;f++){var m=Wi(h,o,c,l),x=lb(m.y,m.x,t,s);h=Mf({x:m.x*o,y:m.y*o},{x:x.x,y:x.y})}var y=Wi(h,o,c,l),b=r.get(y.y,y.x,t);return{position:h,part:ti[t],score:b}}function Zk(n,e,t,r,s,o){var a=e.shape[2],i=Ui.length,u=new Array(a),c=n.part,l=n.score,d=db(c,r,t);u[c.id]={score:l,part:ti[c.id],position:d};for(var h=i-1;h>=0;--h){var f=Ui[h],m=Uf[h];u[f]&&!u[m]&&(u[m]=Wf(h,u[f],m,e,t,r,o))}for(h=0;h<i;++h)f=Uf[h],m=Ui[h],u[f]&&!u[m]&&(u[m]=Wf(h,u[f],m,e,t,r,s));return u}function yb(n,e,t,r){var s=t.x,o=t.y;return n.some(function(a){var i,u,c,l,d,h,f=a.keypoints[r].position;return i=o,u=s,c=f.y,l=f.x,(d=c-i)*d+(h=l-u)*h<=e})}function Jk(n,e,t){var r=t.reduce(function(s,o,a){var i=o.position,u=o.score;return yb(n,e,i,a)||(s+=u),s},0);return r/t.length}function Vo(n,e,t,r,s,o,a,i){a===void 0&&(a=.5),i===void 0&&(i=20);for(var u=[],c=function(m,x,y){for(var b=y.shape,$=b[0],E=b[1],C=b[2],A=new Yk($*E*C,function(F){return F.score}),B=0;B<$;++B)for(var M=0;M<E;++M)for(var V=0;V<C;++V){var P=y.get(B,M,V);P<m||Qk(V,P,B,M,x,y)&&A.enqueue({score:P,part:{heatmapY:B,heatmapX:M,id:V}})}return A}(a,1,n),l=i*i;u.length<o&&!c.empty();){var d=c.dequeue();if(!yb(u,l,db(d.part,s,e),d.part.id)){var h=Zk(d,n,e,s,t,r),f=Jk(u,l,h);u.push({keypoints:h,score:f})}}return u}var Is,eR=[-123.15,-115.9,-103.06],tR=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return ob(e,n),e.prototype.preprocessInput=function(t){return se(t,eR)},e.prototype.nameOutputResults=function(t){var r=t[0],s=t[1],o=t[2],a=t[3],i=t[4],u=t[5];return{offsets:i,segmentation:t[6],partHeatmaps:u,longOffsets:a,heatmap:o,displacementFwd:s,displacementBwd:r,partOffsets:t[7]}},e}(cb),zf="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",Gf="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function _s(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof Se)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function Hf(n,e){return function(t,r){return(t-1)%r==0}(n,e)?n:Math.floor(n/e)*e+1}var As={low:"low",medium:"medium",high:"high",full:"full"},nR=((Is={})[As.low]=.25,Is[As.medium]=.5,Is[As.high]=.75,Is[As.full]=1,Is);function Mo(n,e,t){var r=t[0],s=t[1],o=function(a){if(typeof a=="string"){var i=nR[a];return I(typeof i=="number",function(){return"string value of inputResolution must be one of "+Object.values(As).join(",")+" but was "+a+"."}),i}return I(typeof a=="number"&&a<=2&&a>=.1,function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+a}),a}(n);return[Hf(r*o,e),Hf(s*o,e)]}function Vr(n,e,t,r,s){var o=e[0],a=e[1],i=t[0],u=t[1],c=r[0],l=c[0],d=c[1],h=r[1],f=h[0],m=h[1];return oe(function(){var x=Sr.resizeBilinear(n,[i,u],!0);return x=an(x),function(y,b,$){var E=b[0],C=b[1],A=$[0],B=A[0],M=A[1],V=$[1],P=V[0],F=V[1];return oe(function(){var T=dt(y);return Dt(Sr.cropAndResize(T,[[B/(E+B+M-1),P/(C+P+F-1),(B+E-1)/(E+B+M-1),(P+C-1)/(C+P+F-1)]],[0],[E,C]),[0])})}(x,[o,a],[[l,d],[f,m]])})}function Uo(n,e){var t=e[0],r=e[1],s=_s(n),o=s[0],a=s[1],i=r/t,u=[0,0,0,0],c=u[0],l=u[1],d=u[2],h=u[3];a/o<i?(c=0,l=0,d=Math.round(.5*(i*o-a)),h=Math.round(.5*(i*o-a))):(c=Math.round(.5*(1/i*a-o)),l=Math.round(.5*(1/i*a-o)),d=0,h=0);var f=oe(function(){var m=function(x){return x instanceof Se?x:Za(x)}(n);return m=ch(m,[[c,l],[d,h],[0,0]]),Sr.resizeBilinear(m,[t,r])});return{resized:f,padding:{top:c,left:d,right:h,bottom:l}}}function Wo(n){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function zo(n,e,t,r,s){var o=e[0],a=e[1],i=t[0],u=t[1],c=function(l,d,h,f,m){return f===void 0&&(f=0),m===void 0&&(m=0),h===1&&d===1&&f===0&&m===0?l:l.map(function(x){return function(y,b,$,E,C){return E===void 0&&(E=0),C===void 0&&(C=0),{score:y.score,keypoints:y.keypoints.map(function(A){var B=A.score,M=A.part,V=A.position;return{score:B,part:M,position:{x:V.x*$+C,y:V.y*b+E}}})}}(x,d,h,f,m)})}(n,(o+r.top+r.bottom)/i,(a+r.left+r.right)/u,-r.top,-r.left);return s?function(l,d){return d<=0?l:l.map(function(h){return function(f,m){return{score:f.score,keypoints:f.keypoints.map(function(x){var y=x.score,b=x.part,$=x.position;return{score:y,part:b,position:{x:m-1-$.x,y:$.y}}})}}(h,d)})}(c,a):c}var jf={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},qf=["MobileNetV1","ResNet50"],Kf={MobileNetV1:[8,16,32],ResNet50:[32,16]},Xf={MobileNetV1:[.5,.75,1],ResNet50:[1]},Yf=[1,2,4],Go={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Ho={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function Qf(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}function Zf(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius,o=n.minKeypointScore,a=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".");if(o<0||o>1)throw new Error("Invalid minKeypointScore "+o+".Should be in range [0.0, 1.0]");if(a<=0||a>20)throw new Error("Invalid refineSteps "+a+".Should be in range [1, 20]")}var xb=function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=_s(e),a=o[0],i=o[1],u=Mo(t,this.baseModel.outputStride,[a,i]),c=Uo(e,u),l=c.resized,d=c.padding,h=oe(function(){var $=s.predictForPersonSegmentation(l),E=$.segmentLogits,C=$.heatmapScores,A=$.offsets,B=$.displacementFwd,M=$.displacementBwd,V=l.shape,P=V[0],F=V[1],T=Vr(E,[a,i],[P,F],[[d.top,d.bottom],[d.left,d.right]]);return{segmentation:Bo(Dt(T),r),heatmapScores:C,offsets:A,displacementFwd:B,displacementBwd:M}}),f=h.segmentation,m=h.heatmapScores,x=h.offsets,y=h.displacementFwd,b=h.displacementBwd;return l.dispose(),{segmentation:f,heatmapScores:m,offsets:x,displacementFwd:y,displacementBwd:b,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=Go),me(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,h,f,m,x,y,b,$,E,C;return ge(this,function(A){switch(A.label){case 0:return Qf(t=et(et({},Go),t)),r=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),s=r.segmentation,o=r.heatmapScores,a=r.offsets,i=r.displacementFwd,u=r.displacementBwd,c=r.padding,l=r.internalResolutionHeightAndWidth,d=s.shape,h=d[0],f=d[1],[4,s.data()];case 1:return m=A.sent(),s.dispose(),[4,Wo([o,a,i,u])];case 2:return x=A.sent(),y=x[0],b=x[1],$=x[2],E=x[3],C=zo(C=Vo(y,b,$,E,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[h,f],l,c,!1),o.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:h,width:f,data:m,allPoses:C}]}})})},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=Ho),me(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,h,f,m,x,y,b,$,E,C,A,B,M,V=this;return ge(this,function(P){switch(P.label){case 0:return Zf(t=et(et({},Ho),t)),r=_s(e),s=r[0],o=r[1],a=Mo(t.internalResolution,this.baseModel.outputStride,[s,o]),i=Uo(e,a),u=i.resized,c=i.padding,l=oe(function(){var F,T=V.predictForMultiPersonInstanceSegmentationAndPart(u),z=T.segmentLogits,H=T.longOffsets,K=T.heatmapScores,Z=T.offsets,te=T.displacementFwd,ae=T.displacementBwd,ie=Vr(z,[s,o],a,[[c.top,c.bottom],[c.left,c.right]]);return F=H,{segmentation:Bo(Dt(ie),t.segmentationThreshold),longOffsets:F,heatmapScoresRaw:K,offsetsRaw:Z,displacementFwdRaw:te,displacementBwdRaw:ae}}),d=l.segmentation,h=l.longOffsets,f=l.heatmapScoresRaw,m=l.offsetsRaw,x=l.displacementFwdRaw,y=l.displacementBwdRaw,[4,Wo([f,m,x,y])];case 1:return b=P.sent(),$=b[0],E=b[1],C=b[2],A=b[3],B=zo(B=Vo($,E,C,A,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],a,c,!1),[4,Kk(d,h,B,s,o,this.baseModel.outputStride,a,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return M=P.sent(),u.dispose(),d.dispose(),h.dispose(),f.dispose(),m.dispose(),x.dispose(),y.dispose(),[2,M]}})})},n.prototype.segmentPersonPartsActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=_s(e),a=o[0],i=o[1],u=Mo(t,this.baseModel.outputStride,[a,i]),c=Uo(e,u),l=c.resized,d=c.padding,h=oe(function(){var $=s.predictForPersonSegmentationAndPart(l),E=$.segmentLogits,C=$.partHeatmapLogits,A=$.heatmapScores,B=$.offsets,M=$.displacementFwd,V=$.displacementBwd,P=l.shape,F=P[0],T=P[1],z=Vr(E,[a,i],[F,T],[[d.top,d.bottom],[d.left,d.right]]),H=Vr(C,[a,i],[F,T],[[d.top,d.bottom],[d.left,d.right]]);return{partSegmentation:Gk(Bo(Dt(z),r),H),heatmapScores:A,offsets:B,displacementFwd:M,displacementBwd:V}}),f=h.partSegmentation,m=h.heatmapScores,x=h.offsets,y=h.displacementFwd,b=h.displacementBwd;return l.dispose(),{partSegmentation:f,heatmapScores:m,offsets:x,displacementFwd:y,displacementBwd:b,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=Go),me(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,h,f,m,x,y,b,$,E,C;return ge(this,function(A){switch(A.label){case 0:return Qf(t=et(et({},Go),t)),r=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),s=r.partSegmentation,o=r.heatmapScores,a=r.offsets,i=r.displacementFwd,u=r.displacementBwd,c=r.padding,l=r.internalResolutionHeightAndWidth,d=s.shape,h=d[0],f=d[1],[4,s.data()];case 1:return m=A.sent(),s.dispose(),[4,Wo([o,a,i,u])];case 2:return x=A.sent(),y=x[0],b=x[1],$=x[2],E=x[3],C=zo(C=Vo(y,b,$,E,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[h,f],l,c,!1),o.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:h,width:f,data:m,allPoses:C}]}})})},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=Ho),me(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,d,h,f,m,x,y,b,$,E,C,A,B,M,V,P=this;return ge(this,function(F){switch(F.label){case 0:return Zf(t=et(et({},Ho),t)),r=_s(e),s=r[0],o=r[1],a=Mo(t.internalResolution,this.baseModel.outputStride,[s,o]),i=Uo(e,a),u=i.resized,c=i.padding,l=oe(function(){var T=P.predictForMultiPersonInstanceSegmentationAndPart(u),z=T.segmentLogits,H=T.longOffsets,K=T.heatmapScores,Z=T.offsets,te=T.displacementFwd,ae=T.displacementBwd,ie=T.partHeatmaps,le=Vr(z,[s,o],a,[[c.top,c.bottom],[c.left,c.right]]),fe=Vr(ie,[s,o],a,[[c.top,c.bottom],[c.left,c.right]]),Ie=H,we=Bo(Dt(le),t.segmentationThreshold),Ce=function(Me){var ut=Me.shape,ct=ut[0],fn=ut[1],_n=ut[2];return oe(function(){var Yn=ub(Me),Pr=dt(Gn(0,_n,1,"int32"),1),Qn=be(ve(Yn,Pr),"int32");return G(Qn,[ct,fn])})}(fe);return{segmentation:we,longOffsets:Ie,heatmapScoresRaw:K,offsetsRaw:Z,displacementFwdRaw:te,displacementBwdRaw:ae,partSegmentation:Ce}}),d=l.segmentation,h=l.longOffsets,f=l.heatmapScoresRaw,m=l.offsetsRaw,x=l.displacementFwdRaw,y=l.displacementBwdRaw,b=l.partSegmentation,[4,Wo([f,m,x,y])];case 1:return $=F.sent(),E=$[0],C=$[1],A=$[2],B=$[3],M=zo(M=Vo(E,C,A,B,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],a,c,!1),[4,Xk(d,h,b,M,s,o,this.baseModel.outputStride,a,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return V=F.sent(),u.dispose(),d.dispose(),h.dispose(),f.dispose(),m.dispose(),x.dispose(),y.dispose(),b.dispose(),[2,V]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function rR(n){return me(this,void 0,void 0,function(){var e,t,r,s,o,a;return ge(this,function(i){switch(i.label){case 0:if(e=n.outputStride,t=n.quantBytes,r=n.multiplier,tb==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=function(u,c,l){var d={1:"100",.75:"075",.5:"050"},h="model-stride"+u+".json";return l===4?Gf+"float/"+d[c]+"/"+h:Gf+"quant"+l+"/"+d[c]+"/"+h}(e,r,t),[4,Kh(n.modelUrl||s)];case 1:return o=i.sent(),a=new Hk(o,e),[2,new xb(a)]}})})}function sR(n){return me(this,void 0,void 0,function(){var e,t,r,s,o;return ge(this,function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,tb==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=function(i,u){var c="model-stride"+i+".json";return u===4?zf+"float/"+c:zf+"quant"+u+"/"+c}(e,t),[4,Kh(n.modelUrl||r)];case 1:return s=a.sent(),o=new tR(s,e),[2,new xb(o)]}})})}function oR(n){return n===void 0&&(n=jf),me(this,void 0,void 0,function(){return ge(this,function(e){return(n=function(t){if((t=t||jf).architecture==null&&(t.architecture="MobileNetV1"),qf.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+qf);if(t.outputStride==null&&(t.outputStride=16),Kf[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Kf[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),Xf[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+Xf[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),Yf.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+Yf+" for architecture "+t.architecture+".");return t}(n)).architecture==="ResNet50"?[2,sR(n)]:n.architecture==="MobileNetV1"?[2,rR(n)]:[2,null]})})}var ku=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Jf=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,Xh(this.mask)]})})},n.prototype.toImageData=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,this.mask]})})},n.prototype.toTensor=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,ib(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"imagedata"},n}();function aR(n){if(ei(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function iR(n){if(ei(n),n>=ku.length)throw new Error("Invalid body part value "+n);return ku[n]}var uR=function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return me(this,void 0,void 0,function(){var r,s,o,a;return ge(this,function(i){switch(i.label){case 0:return e instanceof ImageBitmap&&((r=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=r),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return o=i.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:o=[i.sent()],i.label=4;case 4:return s=o.map(function(u){var c=u.data,l=u.width,d=u.height,h=new Uint8ClampedArray(l*d*4).fill(0);return c.forEach(function(f,m){f===-1?(h[4*m]=ku.length,h[4*m+3]=0):(h[4*m]=f,h[4*m+3]=255)}),{maskValueToLabel:iR,mask:new Jf(new ImageData(h,l,d))}}),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return a=i.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:a=[i.sent()],i.label=9;case 9:s=a.map(function(u){var c=u.data,l=u.width,d=u.height,h=new Uint8ClampedArray(l*d*4).fill(0);return c.forEach(function(f,m){f===0?(h[4*m]=0,h[4*m+3]=0):(h[4*m]=255,h[4*m+3]=255)}),{maskValueToLabel:aR,mask:new Jf(new ImageData(h,l,d))}}),i.label=10;case 10:return[2,s]}})})},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n}();function cR(n){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,oR(n).then(function(t){return new uR(t)})]})})}var em={runtime:"mediapipe",modelType:"general"},lR=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,ab(this.mask)]})})},n.prototype.toTensor=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,ib(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function dR(n){return ei(n),"person"}var hR=function(){function n(e){var t,r=this;this.selfieMode=!1;var s;this.selfieSegmentationSolution=new zk.SelfieSegmentation({locateFile:(t=e.locateFile)!==null&&t!==void 0?t:function(o,a){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+o:a+"/"+o}}),e.modelType==="landscape"?s=1:s=0,this.selfieSegmentationSolution.setOptions({modelSelection:s,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults(function(o){r.segmentation=[{maskValueToLabel:dR,mask:new lR(o.segmentationMask)}]})}return n.prototype.segmentPeople=function(e,t){return me(this,void 0,void 0,function(){var r,s;return ge(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Se?(s=ImageData.bind,[4,go(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return o.sent(),[2,this.segmentation]}})})},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n}();function pR(n){return me(this,void 0,void 0,function(){var e,t;return ge(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return et({},em);var o=et({},s);return o.runtime="mediapipe",o.modelType==null&&(o.modelType=em.modelType),o}(n),[4,(t=new hR(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function fR(n,e,t,r){var s=n.width,o=n.height,a=1,i=Math.cos(n.rotation),u=Math.sin(n.rotation),c=n.xCenter,l=n.yCenter,d=1/e,h=1/t,f=new Array(16);return f[0]=s*i*a*d,f[1]=-o*u*d,f[2]=0,f[3]=(-.5*s*i*a+.5*o*u+c)*d,f[4]=s*u*a*h,f[5]=o*i*h,f[6]=0,f[7]=(-.5*o*i-.5*s*u*a+l)*h,f[8]=0,f[9]=0,f[10]=s*d,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,function(m){if(m.length!==16)throw new Error("Array length must be 16 but got "+m.length);return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]]}(f)}function bb(n){return n instanceof Se?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function zi(n,e){I(n.width!==0,function(){return e+" width cannot be 0."}),I(n.height!==0,function(){return e+" height cannot be 0."})}function mR(n,e){var t=function(r,s,o,a){var i=s-r,u=a-o,c=u/i;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return oe(function(){return se(Q(n,t.scale),t.offset)})}function gR(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,a=e.outputTensorFloatRange,i=bb(n),u=function(h,f){return{xCenter:.5*h.width,yCenter:.5*h.height,width:h.width,height:h.height,rotation:0}}(i),c=function(h,f,m){if(m===void 0&&(m=!1),!m)return{top:0,left:0,right:0,bottom:0};var x=f.height,y=f.width;zi(f,"targetSize"),zi(h,"roi");var b,$,E=x/y,C=h.height/h.width,A=0,B=0;return E>C?(b=h.width,$=h.width*E,B=(1-C/E)/2):(b=h.height/E,$=h.height,A=(1-E/C)/2),h.width=b,h.height=$,{top:B,left:A,right:A,bottom:B}}(u,r,s),l=fR(u,i.width,i.height),d=oe(function(){var h,f=(h=n)instanceof Se?h:Za(h),m=mr(function(b,$,E){return zi(E,"inputResolution"),[1/E.width*b[0][0]*$.width,1/E.height*b[0][1]*$.width,b[0][3]*$.width,1/E.width*b[1][0]*$.height,1/E.height*b[1][1]*$.height,b[1][3]*$.height,0,0]}(l,i,r),[1,8]),x=o==="zero"?"constant":"nearest",y=Sr.transform(dt(be(f,"float32")),m,"bilinear",x,0,[r.height,r.width]);return a!=null?mR(y,a):y});return{imageTensor:d,padding:c,transformationMatrix:l}}function yR(n,e,t){return oe(function(){var r=Dt(n,[0]),s=r.shape[2];if(s===1){var o=r;switch(e.activation){case"none":break;case"sigmoid":o=an(o);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var a=t?Sr.resizeBilinear(o,[t.height,t.width]):o;return Dt(a,[2])}throw new Error("Unsupported number of tensor channels "+s)})}var tm={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},nm={flipHorizontal:!1},xR={outputTensorSize:{width:256,height:256},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},bR={outputTensorSize:{width:256,height:144},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},wR={activation:"none"},vR=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,Xh(this.mask)]})})},n.prototype.toImageData=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,ab(this.mask)]})})},n.prototype.toTensor=function(){return me(this,void 0,void 0,function(){return ge(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function $R(n){return ei(n),"person"}var Zs,SR=function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return me(this,void 0,void 0,function(){var r,s=this;return ge(this,function(o){return t=function(a){if(a==null)return et({},nm);var i=et({},a);return i.flipHorizontal==null&&(i.flipHorizontal=nm.flipHorizontal),i}(t),e==null?(this.reset(),[2,[]]):(r=oe(function(){var a=gR(e,s.modelType==="general"?xR:bR).imageTensor,i=Te(s.model.predict(a),[0,0,0,1],-1),u=bb(e),c=yR(i,wR,u),l=dt(c,2),d=_r(l,[[0,0],[0,0],[0,1]]);return ih(d,[[0,0],[0,0],[0,2]],"symmetric")}),[2,[{maskValueToLabel:$R,mask:new vR(r)}]])})})},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n}();function CR(n){return me(this,void 0,void 0,function(){var e,t,r;return ge(this,function(s){switch(s.label){case 0:return e=function(o){if(o==null)return et({},tm);var a=et({},o);if(a.runtime="tfjs",a.modelType==null&&(a.modelType=tm.modelType),a.modelType!=="general"&&a.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+a.modelType);return a.modelUrl==null&&(a.modelType==="general"?a.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":a.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),a}(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Kh(e.modelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[2,new SR(e.modelType,r)]}})})}function TR(n,e){return me(this,void 0,void 0,function(){var t,r;return ge(this,function(s){switch(n){case Zs.MediaPipeSelfieSegmentation:if(t=void 0,(r=e)!=null){if(r.runtime==="tfjs")return[2,CR(r)];if(r.runtime==="mediapipe")return[2,pR(r)];t=r.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case Zs.BodyPix:return[2,cR(r=e)];default:throw new Error(n+" is not a supported model name.")}})})}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(Zs||(Zs={}));var NR="blurred-mask",ER="mask",IR="draw-image",Gi={};function kR(n,e,t,r){var s=n.width,o=n.height,a=e.width,i=e.height;if(s!==a||o!==i)throw new Error("error: dimensions must match. "+t+" has dimensions "+s+"x"+o+", "+r+" has dimensions "+a+"x"+i)}function ni(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof Se)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function wb(n){return Gi[n]||(Gi[n]=function(){if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(0,0);throw new Error("Cannot create a canvas in this context")}()),Gi[n]}function vb(n,e){var t=wb(e);return function(r,s){s.width=r.width,s.height=r.height,s.getContext("2d").putImageData(r,0,0)}(n,t),t}function ri(n,e,t,r,s,o){return me(this,void 0,void 0,function(){var a,i,u,c;return ge(this,function(l){switch(l.label){case 0:return e instanceof Se?[4,go(e)]:[3,2];case 1:a=l.sent(),i=ni(e),u=i[0],c=i[1],e=new ImageData(a,c,u),l.label=2;case 2:return e instanceof ImageData&&(e=vb(e,IR)),s==null||o==null?n.drawImage(e,t,r):n.drawImage(e,t,r,s,o),[2]}})})}function RR(n,e){return me(this,void 0,void 0,function(){var t,r,s;return ge(this,function(o){switch(o.label){case 0:return t=ni(n),r=t[0],s=t[1],e.width=s,e.height=r,[4,ri(e.getContext("2d"),n,0,0,s,r)];case 1:return o.sent(),[2]}})})}function _R(n,e,t){return me(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l;return ge(this,function(d){switch(d.label){case 0:for(r=n.getContext("2d"),s=0,o=5,a=1/(2*Math.PI*o*o),i=1,c=-0;c<=t;c+=i)for(l=-0;l<=t;l+=i)u=a*Math.exp(-(l*l+c*c)/(2*o*o)),s+=u;c=-0,d.label=1;case 1:if(!(c<=t))return[3,6];l=-0,d.label=2;case 2:return l<=t?(r.globalAlpha=a*Math.exp(-(l*l+c*c)/(2*o*o))/s*t,[4,ri(r,e,l,c)]):[3,5];case 3:d.sent(),d.label=4;case 4:return l+=i,[3,2];case 5:return c+=i,[3,1];case 6:return r.globalAlpha=1,[2]}})})}function AR(n,e,t){return me(this,void 0,void 0,function(){var r,s,o,a;return ge(this,function(i){switch(i.label){case 0:return r=ni(n),s=r[0],o=r[1],a=t.getContext("2d"),t.width=o,t.height=s,a.clearRect(0,0,o,s),a.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?[4,_R(t,n,e)]:[3,2];case 1:return i.sent(),[3,4];case 2:return a.filter="blur("+e+"px)",[4,ri(a,n,0,0,o,s)];case 3:i.sent(),i.label=4;case 4:return a.restore(),[2]}})})}function OR(n,e,t){return me(this,void 0,void 0,function(){var r;return ge(this,function(s){switch(s.label){case 0:return r=wb(t),[4,RR(n,r)];case 1:return s.sent(),[3,4];case 2:return[4,AR(n,e,r)];case 3:s.sent(),s.label=4;case 4:return[2,r]}})})}function DR(n,e,t,r,s,o){o===void 0&&(o={r:0,g:255,b:255,a:255});for(var a=-1;a<=s;a++)for(var i=-1;i<=s;i++)if(a!==0&&i!==0){var u=(e+a)*r+(t+i);n[4*u+0]=o.r,n[4*u+1]=o.g,n[4*u+2]=o.b,n[4*u+3]=o.a}}function FR(n,e,t,r,s,o,a){a===void 0&&(a=1);for(var i=0,u=-a;u<=a;u++)for(var c=-a;c<=a;c++)if(u!==0&&c!==0){var l=(e+u)*r+(t+c);(!s[n[4*l]]||n[4*l+3]<o)&&(i+=1)}return i>0}function PR(n,e,t,r,s,o){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),r===void 0&&(r=!1),s===void 0&&(s=.5),o===void 0&&(o=Array.from(Array(256).keys())),me(this,void 0,void 0,function(){var a,i,u,c,l,d,h,f,m,x,y,b,$,E;return ge(this,function(C){switch(C.label){case 0:return(a=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(a.map(function(A){return A.mask.toImageData()}))];case 1:for(i=C.sent(),u=i[0],c=u.width,l=u.height,d=new Uint8ClampedArray(c*l*4),h=Math.round(255*s),f=new Array(256).fill(!1),o.forEach(function(A){return f[A]=!0}),m=0;m<l;m++)for(x=0;x<c;x++)for(d[4*(y=m*c+x)+0]=t.r,d[4*y+1]=t.g,d[4*y+2]=t.b,d[4*y+3]=t.a,b=0,$=i;b<$.length;b++)E=$[b],f[E.data[4*y]]&&E.data[4*y+3]>=h&&(d[4*y]=e.r,d[4*y+1]=e.g,d[4*y+2]=e.b,d[4*y+3]=e.a,r&&m-1>=0&&m+1<l&&x-1>=0&&x+1<c&&FR(E.data,m,x,c,f,h)&&DR(d,m,x,c,1));return[2,new ImageData(d,c,l)]}})})}function LR(n,e,t,r,s,o){return me(this,void 0,void 0,function(){var a,i,u,c,l;return ge(this,function(d){switch(d.label){case 0:return a=ni(e),i=a[0],u=a[1],n.width=u,n.height=i,(c=n.getContext("2d")).save(),[4,ri(c,e,0,0)];case 1:return d.sent(),c.globalAlpha=r,t?(kR({width:u,height:i},t,"image","mask"),[4,OR(vb(t,ER),s,NR)]):[3,3];case 2:l=d.sent(),c.drawImage(l,0,0,u,i),d.label=3;case 3:return c.restore(),[2]}})})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr={},jo={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function BR(n,e){cr[n]=e}function Qt(n,e){if(!(n in cr)||e!=null){const r=MR(n,e);if(r!==null)cr[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=cr[n];return t==null||t.isContextLost()?(delete cr[n],Qt(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),cr[n])}function VR(n){if(!U().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function MR(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??VR(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete cr[n]},!1),U().getBool("SOFTWARE_WEBGL_ENABLED")&&(jo.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",jo)||t.getContext("experimental-webgl",jo):t.getContext("webgl2",jo)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Js;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Js||(Js={}));var Tt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Tt||(Tt={}));var je;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(je||(je={}));function yo(n,e){return[e,n]}function UR(n,e){return n*e}function qo(n){const e=q(n),t=Math.ceil(e/4);return da(t)}function cs(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function WR(n,e){const[t,r]=cs(n,e);return t*r*4}function Qh(n,e){const t=n;let r,s,o,a,i,u,c,l,d,h;return U().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,l=1,d=t.HALF_FLOAT,h=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,c=4,l=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(n,e){const t=e();return U().getBool("DEBUG")&&zR(n),t}function zR(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+qR(n,e))}const GR=596e-10,HR=65504;function jR(n){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||GR<Math.abs(n)&&Math.abs(n)<HR)}function qR(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Ko(n,e){return kn(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function KR(n,e){const t=kn(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function XR(n,e){const t=kn(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),U().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw $b(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const YR=/ERROR: [0-9]+:([0-9]+):/g;function $b(n,e){const t=YR.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((d,h)=>hr((h+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${hr(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function QR(n){return kn(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function ZR(n,e){if(J(n,()=>n.linkProgram(e)),!U().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Hi(n,e){if(J(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function JR(n,e){const t=kn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function e_(n,e){const t=kn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function t_(n){return kn(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function n_(n,e){const t=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function r_(n){return kn(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function rm(n,e,t,r,s,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),J(n,()=>n.vertexAttribPointer(i,s,n.FLOAT,!1,o,a)),J(n,()=>n.enableVertexAttribArray(i)),!0)}function s_(n,e,t){c_(n,t),J(n,()=>n.activeTexture(n.TEXTURE0+t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function o_(n,e,t){return kn(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function a_(n,e,t){return n.getUniformLocation(e,t)}function i_(n,e,t,r){J(n,()=>s_(n,e,r)),J(n,()=>n.uniform1i(t,r))}function ji(n,e,t){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function sm(n,e){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Xo(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+u_(n,e))}function u_(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function kn(n,e,t){const r=J(n,()=>e());if(r==null)throw new Error(t);return r}function c_(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function ns(n,e=2){return q(n.slice(0,n.length-e))}function rs(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Yo(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ns(n),...rs(n)]),e}function l_(n,e=!1){let t=U().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=U().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&U().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((i,u)=>u>=n.length-2?_a(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=En(n).newShape);let s=q(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=ns(n);let u=2,c=2;n.length&&([u,c]=rs(n)),s=i*(u/2)*(c/2),o=da(s).map(l=>l*2)}else o=da(s);return o}function Qo(n){return n%2===0}function Na(n,e){if(n=n.slice(-2),e=e.slice(-2),Ae(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||Qo(t)&&Qo(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Qo(n[0])&&Qo(e[0])}let qi,Ki;function d_(n){if(qi==null){const e=Qt(n);qi=e.getParameter(e.MAX_TEXTURE_SIZE)}return qi}function h_(n){if(Ki==null){const e=Qt(n);Ki=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ki)}function p_(n){if(n===0)return 0;let e;const t=Qt(n);return Ft(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Ft(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Ft(n,e){return n.getExtension(e)!=null}function om(n){try{if(Qt(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function f_(n){if(n===0)return!1;const e=Qt(n);if(n===1){if(!Ft(e,"OES_texture_float"))return!1}else if(!Ft(e,"EXT_color_buffer_float"))return!1;return Ru(e)}function m_(n){if(n===0)return!1;const e=Qt(n);if(n===1){if(!Ft(e,"OES_texture_float")||!Ft(e,"WEBGL_color_buffer_float"))return!1}else{if(Ft(e,"EXT_color_buffer_float"))return Ru(e);const r="EXT_color_buffer_half_float";if(Ft(e,r)){const s=e.getExtension(r);return g_(e,s)}return!1}return Ru(e)}function Ru(n){const e=Qh(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function g_(n,e){const t=Qh(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),i}function y_(n){return n!==2?!1:Qt(n).fenceSync!=null}function xo(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&I(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne=U();ne.registerFlag("HAS_WEBGL",()=>ne.getNumber("WEBGL_VERSION")>0);ne.registerFlag("WEBGL_VERSION",()=>om(2)?2:om(1)?1:0);ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ne.get("WEBGL_VERSION")===2);ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ne.registerFlag("WEBGL_PACK",()=>ne.getBool("HAS_WEBGL"));ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_CLIP",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_REDUCE",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_CONV_IM2COL",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ne.getBool("WEBGL_PACK"));ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>d_(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>h_(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ne.getNumber("WEBGL_VERSION");return n===0?0:p_(n)});ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_d());ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>f_(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>m_(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>y_(ne.getNumber("WEBGL_VERSION")));ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>_d()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ne.registerFlag("WEBGL_EXP_CONV",()=>!1);ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ne.getBool("IS_TEST"));ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ne.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function it(){let n,e,t,r,s,o,a,i,u,c;return U().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=U().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(n,e,t="index"){const r=Ge(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${i};`}).join("")}function si(n,e,t="index"){const r=Ge(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function x_(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function b_(n,e,t="index"){const r=n.map((o,a)=>a),s=x_(r,e);return s.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function Zh(n){const e=Ge(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Jh(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Sb=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Cb}=eb;function w_(n,e,t){const r=[];if(n.forEach(f=>{const m=q(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:x}=ep(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(f=>v_(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=it(),u=C_(i);let c,l,d=E_(i);return e.isPacked?(c=$_(e.logicalShape,a,t.enableShapeUniforms),l=N_(i)):(c=S_(e.logicalShape,a,t.enableShapeUniforms),l=T_(i)),t.packedInputs&&(d+=__),[d,u,l,s,c,o,t.userCode].join(`
`)}function ls(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return z_(n,e);case 1:return H_(n,e);case 2:return q_(n,e);case 3:return X_(n,e);case 4:return Q_(n,e);case 5:return Z_(n);case 6:return J_(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Tb(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return W_(n);case 1:return G_(n,e);case 2:return j_(n,e);case 3:return K_(n,e);default:return Y_(n,e)}}function v_(n,e,t=!1,r){let s="";t?s+=Tb(n,r):s+=ls(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=eA(n,e):s+=tA(n,e)),s}function $_(n,e,t){switch(n.length){case 0:return Nb();case 1:return A_(n,e,t);case 2:return M_(n,e,t);case 3:return D_(n,e,t);default:return P_(n,e,t)}}function S_(n,e,t){switch(n.length){case 0:return Nb();case 1:return O_(n,e,t);case 2:return U_(n,e,t);case 3:return F_(n,e,t);case 4:return L_(n,e,t);case 5:return B_(n,e);case 6:return V_(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function C_(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function T_(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function N_(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function E_(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${I_}
    ${k_}
    ${R_}
  `}const I_=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,k_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,R_=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,__=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Nb(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function A_(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function O_(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function D_(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function F_(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${si(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Ar(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function P_(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function L_(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${si(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Ar(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function B_(n,e){const t=Ar(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function V_(n,e){const t=Ar(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function M_(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ae(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function U_(n,e,t){return Ae(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Or(n){return`offset${n}`}function W_(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=it();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function z_(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Or(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function G_(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=it();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function H_(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${ds(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Or(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function j_(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=it();if(o!=null&&Ae(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function q_(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Ae(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const h=o[0],f=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=En(t),u=a;if(u.length<t.length){const h=hs(n,u),f=["row","col"];return`
      ${ls(h,e)}
      float ${s}(int row, int col) {
        return ${s}(${ps(f,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ds(n)}
      }
    `;const c=o[0],l=o[1],d=Or(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function K_(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const h=t.slice(1),f=[1,2],m=hs(n,h),x=["b","row","col"];return`
        ${Tb(m,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${ps(x,f)});
        }
      `}const i=it();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(t[2]/2),d=l*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function X_(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=En(t),c=i;if(c.length<t.length){const x=hs(n,c),y=["row","col","depth"];return`
        ${ls(x,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${ps(y,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${ds(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],f=n.shapeInfo.flatOffset;if(h===o&&f==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===a&&f==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=Or(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function Y_(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=it();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(o[a-1]/2);let h=d*Math.ceil(o[a-2]/2),f="int b, int row, int col",m=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let x=2;x<a-1;x++)f=`int b${x}, `+f,h*=o[a-x-1],m=`b${x} * ${h} + `+m;return`
    vec4 ${r}(${f}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function Q_(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=En(t);if(u.length<t.length){const $=hs(n,u),E=["row","col","depth","depth2"];return`
      ${ls($,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${ps(E,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${ds(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],f=d[1],m=`int stride2 = ${r}Shape[3];`,x=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=Or(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${x}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${f}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function Z_(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=En(e);if(u.length<e.length){const x=hs(n,u),y=["row","col","depth","depth2","depth3"];return`
      ${ls(x)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${ps(y,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${ds(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],f=d[1];if(f===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Or(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function J_(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=En(e);if(s.length<e.length){const y=hs(n,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${ls(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${ps(b,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ds(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,f=h[0],m=h[1];if(m===l&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===a&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=Or(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${x};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ds(n){const e=n.name,t=q(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function eA(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=Cb(n.shapeInfo.logicalShape,e.logicalShape),u=Ne(a),c=a-o;let l;const d=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map($=>`coords.${d[$+c]} = 0;`).join(`
`);let h="";a<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map(($,E)=>`coords.${d[E+c]}`).join(", ");let f="return outputValue;";const x=q(n.shapeInfo.logicalShape)===1,b=q(e.logicalShape)===1;if(o===1&&!x&&!b)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!b)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){const $=o-2,E=o-1;i.indexOf($)>-1&&i.indexOf(E)>-1?f="return vec4(outputValue.x);":i.indexOf($)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(E)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${h});
      ${f}
    }
  `}function tA(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&Ae(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Ne(u),l=Cb(n.shapeInfo.logicalShape,e.logicalShape),d=u-i;let h;const f=["x","y","z","w","u","v"];i===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(x=>`coords.${f[x+d]} = 0;`).join(`
`);let m="";return u<2&&i>0?m="coords":m=n.shapeInfo.logicalShape.map((x,y)=>`coords.${f[y+d]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${r}(${m});
    }
  `}function Ne(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function ep(n,e,t){const{newShape:r,keptDims:s}=En(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!n&&o>1&&!Ae(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function hs(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ps(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e,t,r){const s=t.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=w_(s,a,e),u=XR(n.gl,i),c=n.createProgram(u);return U().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},Eb(n,e,c)))}function Eb(n,e,t){const r=[],s=[];let o,a,i,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),U().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const l=!1;for(const d of e.variableNames){const h={name:d,uniform:n.getUniformLocation(t,d,l),offset:n.getUniformLocation(t,`offset${d}`,l)};e.enableShapeUniforms&&(h.shape=n.getUniformLocation(t,`${d}Shape`,l),h.texShape=n.getUniformLocation(t,`${d}TexShape`,l)),r.push(h)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",l),i=n.getUniformLocation(t,"outShapeStrides",l),a=n.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(const d of e.customUniforms)s.push(n.getUniformLocation(t,d.name,l));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function am(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!Ae(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Ae(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function rA(n,e,t,r,s){e.program.enableShapeUniforms||(am(e.inShapeInfos,t),am([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),U().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:l,offset:d,shape:h,texShape:f}=e.variablesLocations[u];if(h){const{uniformShape:m}=ep(e.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(h,new Int32Array(m));break;case 2:n.gl.uniform2iv(h,new Int32Array(m));break;case 3:n.gl.uniform3iv(h,new Int32Array(m));break;case 4:n.gl.uniform4iv(h,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(q(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(l,m)}continue}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=Ge(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],d=s[u];if(c.type==="float")n.gl.uniform1fv(l,d);else if(c.type==="vec2")n.gl.uniform2fv(l,d);else if(c.type==="vec3")n.gl.uniform3fv(l,d);else if(c.type==="vec4")n.gl.uniform4fv(l,d);else if(c.type==="int")n.gl.uniform1iv(l,d);else if(c.type==="ivec2")n.gl.uniform2iv(l,d);else if(c.type==="ivec3")n.gl.uniform3iv(l,d);else if(c.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function sA(n,e,t){let r="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=ep(n.packedInputs,a.shape,u);let h="",f="",m="";if(l.length===1&&n.packedInputs){const A=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${A[0]>1}_${A[1]>1}`}else if(l.length===2&&!n.packedInputs)f=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const A=Ge(l);m=`${A[0]===u[1]}_${A[A.length-1]===u[1]}`}const x=a.shape.length,y=l.length===2&&Ae(a.shape,u),b=q(a.shape)===1,$=Hs(a.shape,t.shape),E=!n.packedInputs&&x===t.shape.length&&Ae(u,t.texData.texShape),C=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${x}_${E}_${c?d:""}_${l.length}_${b}_${$}_${y}_${h}_${f}_${m}_${C}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${U().getNumber("WEBGL_VERSION")}`,o}function Je(n){return U().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Js.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=it();this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?si(["r","c","d"],e):Ar(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Js.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=it();this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?si(["r","c","d"],e):Ar(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iA{constructor(e){this.variableNames=["A"],this.outTexUsage=Tt.DOWNLOAD;const t=it();this.outputShape=e,this.userCode=`
      ${Sb}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Tt.DOWNLOAD;const t=it();this.outputShape=e,this.userCode=`
      ${Sb}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA={R:0,G:1,B:2,A:3};class im{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=it();this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${cA[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Jh():Zh(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lA{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=it();this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Jh():Zh(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n){const e=it(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return KR(n,t)}function hA(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return JR(n,e)}function pA(n){const e=new Uint16Array([0,1,2,2,1,3]);return e_(n,e)}function bo(n,e,t,r,s,o){n_(e,t);const a=t_(n),i=n.TEXTURE_2D;return J(n,()=>n.bindTexture(i,a)),J(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),J(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),U().getNumber("WEBGL_VERSION")===1?J(n,()=>n.texImage2D(i,0,r,e,t,0,s,o,null)):J(n,()=>n.texStorage2D(i,1,r,e,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function Ib(n){return n.internalFormatFloat}function fA(n,e,t,r){const[s,o]=yo(e,t);return bo(n,s,o,Ib(r),r.textureFormatFloat,n.FLOAT)}function kb(n){return n.internalFormatHalfFloat}function mA(n,e,t,r){const[s,o]=yo(e,t);return bo(n,s,o,kb(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Rb(n){return n.downloadTextureFormat}function gA(n,e,t,r){const[s,o]=yo(e,t);return bo(n,s,o,Rb(r),n.RGBA,n.UNSIGNED_BYTE)}function _b(n){return n.internalFormatPackedFloat}function yA(n,e,t,r){const[s,o]=cs(e,t);return bo(n,s,o,_b(r),n.RGBA,n.FLOAT)}function Ab(n){return n.internalFormatPackedHalfFloat}function xA(n,e,t,r){const[s,o]=cs(e,t);return bo(n,s,o,Ab(r),n.RGBA,r.textureTypeHalfFloat)}function bA(n,e,t){return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),rm(n,e,"clipSpacePos",t,3,20,0)&&rm(n,e,"uv",t,2,20,12)}function wA(n,e,t,r,s,o){J(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),U().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,i,a)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,i,a)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function vA(n,e,t){J(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?U().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):U().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function $A(n,e,t,r){const s=n.createBuffer();J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return J(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function SA(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function CA(n,e,t,r){const[s,o]=yo(e,t),a=4,i=new Uint8Array(UR(e*t,a));return J(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function TA(n,e,t,r,s,o,a,i){const u=n,c=new Float32Array(WR(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function NA(n,e,t){const r=new Float32Array(e*t*4);return J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xi{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=U().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,BR(t,e)):this.gl=Qt(t),e=this.gl,U().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>J(o,()=>o.createVertexArray()),this.bindVertexArray=a=>J(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>J(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>J(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>J(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>J(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>J(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>J(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),U().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Ko(this.gl,o),Ft(this.gl,a))this.textureHalfFloatExtension=Ko(this.gl,a);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Ft(this.gl,s))this.colorBufferHalfFloatExtension=Ko(this.gl,s);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Ft(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Ft(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=hA(this.gl),this.indexBuffer=pA(this.gl),this.framebuffer=r_(this.gl),this.textureConfig=Qh(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;J(e,()=>e.finish()),J(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),J(e,()=>e.deleteFramebuffer(this.framebuffer)),J(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),J(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),J(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),fA(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),mA(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),gA(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),vA(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),wA(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),xA(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),yA(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(sm(this.gl,this.framebuffer),this.outputTexture=null),J(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>CA(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return TA(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return SA(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=$A(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(U().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>NA(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=dA(t));const r=QR(t);J(t,()=>t.attachShader(r,this.vertexShader)),J(t,()=>t.attachShader(r,e)),ZR(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&Hi(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;J(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bA(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(J(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Hi(this.gl,this.program),J(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?o_(this.gl,e,t):a_(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),J(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),i_(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=cs(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Hi(this.gl,this.program),Xo(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}J(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),J(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ko(this.gl,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Qi(()=>this.disposed||this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=EA(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in U().platform&&(r=U().platform.setTimeoutCustom.bind(U().platform)),Qi(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ji(this.gl,e,this.framebuffer),this.debug&&Xo(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ji(this.gl,this.outputTexture,this.framebuffer),this.debug&&Xo(this.gl)):sm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;ji(s,e,this.framebuffer),this.debug&&Xo(s),this.outputTexture=e,J(s,()=>s.viewport(0,0,t,r)),J(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),J(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function EA(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(n){return(e,t,r,s,o)=>{const a=ye(e,t),i=a.length,u=Ge(a),c=q(a),l=Cn(o,c),d=e.length,h=t.length,f=Ge(e),m=Ge(t),x=Hs(e,a),y=Hs(t,a);if(x.length+y.length===0)for(let b=0;b<l.length;++b)l[b]=n(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){const $=Aa(b,i,u),E=$.slice(-d);x.forEach(M=>E[M]=0);const C=pa(E,d,f),A=$.slice(-h);y.forEach(M=>A[M]=0);const B=pa(A,h,m);l[b]=n(r[C],s[B])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=so([0],t),[o,a]=pt((i,u)=>i!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RA=pt((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t,r,s){const o=q(r),a=Tn(s,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function AA(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=De([s,t],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA=pt((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n){return(e,t,r)=>{const s=Be(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA=Rn(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e,t,r){const s=Be(t,q(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const i=q(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?ts(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let d=0;d<a.shape[1];++d)s[l+d]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA=pt((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA=Rn(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA=Rn(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA=Rn(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA=pt((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,e,t,r,s,o,a,i,u){const c=De([r,o],t);for(let l=0;l<r;l++){const d=[];let h=0;for(let f=0;f<s;f++){const m=n[l*s+f];h+=m*a[f],d.push(m)}if(h<0||h>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let f=0;f<o;f++)c.values[l*o+f]=e.get(...e.indexToLoc(h*o+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,e,t){const r=De(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(r.values[s]=n.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA=pt((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA=pt((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA=pt((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA=pt((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e,t){const r=(e-n)/(t-1),s=Tn(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=Rn(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e,t,r){const s=Cn(r,q(t));for(let o=0;o<s.length;++o){const a=o*e;let i=n[a];for(let u=0;u<e;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA=pt((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QA=pt((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ob=pt((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,e,t){const r=kr(-1,t);return Ob([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA=pt((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n,e,t,r,s){const o=e.length,a=q(e),i=Ge(e),u=Ge(s),c=Cn(t,q(s));for(let l=0;l<a;++l){const d=Aa(l,o,i),h=new Array(d.length);for(let m=0;m<h.length;m++)h[m]=d[r[m]];const f=pa(h,o,u);c[f]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n,e,t,r){const[s,o]=pn(n,r),a=Yt(e,"int32"),i=Tn(q(s),a),u=q(o);for(let c=0;c<i.length;++c){const l=c*u;let d=1;for(let h=0;h<u;++h)d*=t[l+h];i[c]=d}return{outVals:i,outShape:s,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=Aa(s,e.length,Ge(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function rO(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function sO(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);rO(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let d=1;d<u+1;++d)i[c].push(d*l)}for(let c=0;c<n.length;++c){let l=n[c],d=n[c]+1;for(let h=0;h<t.length;++h){const f=t[h],m=h+e.length-1;if(m>=0){const x=i[m],y=x[x.length-1]-f[l];for(let b=l;b<d;++b)i[m].push(f[b+1]+y)}l=f[l],d=f[d]}d!==l&&(s.push([l,d]),o+=d-l)}return{outSplits:i,valueSlices:s,numValues:o}}function oO(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=Be("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function um(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function aO(n,e,t,r,s,o){const a=um(e,2)[1],i=um(o,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let d=0;d<r;++d)s[u*i+d]=n[l*a+d];++u}}function iO(n,e,t,r,s){const o=e.slice();o[0]=s;const a=Be(t,q(o)),i=n.length,u=i===0?0:i/e[0];return aO(n,e,r,u,a,o),[a,o]}function uO(n,e,t,r,s,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(nO(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:d,numValues:h}=sO(o,a,n,c),f=oO(l),m=iO(t,r,s,d,h);return[f,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cm=2147483647;function cO(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let y=1;y<l.length;++y)if(l[y]!==l[y-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=Be("int32",d+1);h[0]=0;for(let y=0;y<d;++y){const b=i?n[0]:n[y],$=u?r[0]:r[y],E=c?o[0]:o[y];if(E===0)throw new Error("Requires delta != 0");let C;if(E>0&&$<b||E<0&&$>b)C=0;else if(C=Math.ceil(Math.abs(($-b)/E)),C>cm)throw new Error(`Requires ((limit - start) / delta) <= ${cm}`);h[y+1]=h[y]+C}const f=h[d],m=Be(t,f);let x=0;for(let y=0;y<d;++y){const b=h[y+1]-h[y];let $=i?n[0]:n[y];const E=c?o[0]:o[y];for(let C=0;C<b;++C)m[x++]=$,$+=E}return[h,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rt=jt;class Ea{constructor(e,t,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=b0(l),this.raggedRank=w0(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Rt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Rt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Rt.VALUE_ROWIDS:return Ea.getMaxWidthValueRowID(t);case Rt.ROW_SPLITS:return Ea.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Rt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return dm(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;v0(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=x0(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=t)o.push(a);for(let i=s;i<e;++i)o.push(-1);return I(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=t[i];l===-1&&(c=0);for(let d=0;d<c;++d)a.push(l),l+=r;for(let d=0;d<u-c;++d)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];a.push(c);for(let l=1;l<o;++l){const d=e[l];if(d===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);c=t[d]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Rt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case Rt.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${Rt[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Rt.FIRST_DIM_SIZE:return e[0];case Rt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Rt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Rt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=dm(r,!1),a=Be(this.valuesDType,q(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=q(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const m=this.defaultValueShape;oe(()=>{const x=G(l,m);l=Hr(x,i).dataSync()})}let d=0,h=0,f=0;for(let m=0;m<=c;++m){let x=m<c?t[m]:-1;if(x===f){++f;continue}if(h<f){const y=o.subarray(d*u),b=a.subarray(h*u),$=(f-h)*u;lm(b,y,$)}if(m>=c){const y=r.length;x=Math.floor(y/u)}if(x>f)if(this.defaultValue.length===1)a.subarray(f*u,x*u).fill(this.defaultValue[0]),f=x;else for(;x>f;){const y=a.slice(f*u);lm(y,l,u),++f}x<0?(d=m+1,h=f):(d=m,h=f,f=h+1)}}}function lm(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function dm(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function lO(n,e,t,r,s,o,a,i,u,c){return new Ea(n,e,t,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return Tn(0,r);const i=Math.abs(Math.ceil((e-n)/t)),u=Tn(i,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO=Rn(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t,r,s,o,a,i,u,c){const l=[r/s,s],d=n.values,h=e.values;if(r===0)return De(t,e.dtype);const f=u instanceof xr?u:De(l,e.dtype);typeof u=="string"||typeof u=="number"?f.values.fill(u):typeof u=="boolean"&&f.values.fill(+u);for(let m=0;m<o;m++){const x=[];let y=0;for(let b=0;b<a;b++){const $=d[m*a+b];x.push($),y+=$*i[b]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${x} does not index into ${t}`);for(let b=0;b<s;b++)c?f.values[y*s+b]+=h[m*s+b]:f.values[y*s+b]=e.rank===0?h[0]:h[m*s+b]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO=Rn(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,e,t,r,s){const o=Uh(r,e,t),a=q(t),i=Ge(r);if(o){const d=Wh(e,i);return s==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const u=s==="string"?ts(n):n,c=De(r,s,u),l=De(t,s);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),f=h.map((m,x)=>m+e[x]);l.set(c.get(...f),...h)}return s==="string"?J0(l.values):l.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e,t,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),d=e[1];if(u===0){if(i!==0)throw new Error(V0(i));const y=Be(t,0),b=Be(s,0);return[y,[0,d],b,c,l]}let h=!0,f=0;const m=new Array(u).fill(0);for(let y=0;y<i;++y){const b=n[y*d];if(b<0)throw new Error(M0(y,b));if(b>=u)throw new Error(U0(y,b,u));++m[b],h=h&&b>=f,f=b}let x=!0;for(let y=0;y<u;++y){const b=m[y]===0;c[y]=b,x=x&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(x&&h){const y=n,b=r;for(let $=0;$<i;++$)l[$]=$;return[y,[i,d],b,c,l]}else{const y=m[u-1],b=Be(t,y*d),$=Be(s,y),E=new Array(u).fill(0);for(let C=0;C<i;++C){const A=n[C*d],B=E[A],M=(A===0?0:m[A-1])+B;E[A]++;for(let V=0;V<d;++V)b[M*d+V]=n[C*d+V];$[M]=r[C],l[C]=M}for(let C=0;C<u;++C)if(E[C]===0){const B=C===0?0:m[C-1];b[B*d+0]=C;for(let M=1;M<d;++M)b[B*d+M]=0;$[B]=a}return[b,[y,d],$,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,e,t,r,s){const o=q(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let y=0;y<i;++y){const b=s[y];if(b===-1){if(l!==-1)throw new Error(W0(l,y));l=y,u.push(1)}else{if(b<0)throw new Error(z0(y,b));c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error(G0());const y=Math.trunc(o/c);if(c*y!==o)throw new Error(H0(r,u));u[l]=y}if(q(u)!==o)throw new Error(j0(r,u));const h=r.length,f=[];if(h>0){f[h-1]=1;for(let y=h-2;y>=0;--y)f[y]=f[y+1]*r[y+1]}const m=[];if(i>0){m[i-1]=1;for(let y=i-2;y>=0;--y)m[y]=m[y+1]*u[y+1]}const x=Be(t,a*i);for(let y=0;y<a;++y){let b=0;for(let $=0;$<h;++$)b+=n[y*h+$]*f[$];for(let $=0;$<i;++$)x[y*i+$]=Math.trunc(b/m[$]),b%=m[$]}return[x,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n,e,t,r,s,o=!1,a=0){const i=r.length,u=[e[0],n.length/e[0]],c=u[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error(gu());const h=e.slice();h[0]=d;const f=h.reduce((E,C)=>E*C,1),m=Be(t,f);if(i===0)return d>0&&m.fill(a),[m,h];if(d<=0)throw new Error(gu());let x=0,y=1,b=0,$=s[x];for(;;){let E=0;if(y<i){if(E=s[y],$===E){++y;continue}if($>=E)throw new Error(q0())}if($<0||$>=d)throw new Error(K0($,d));$>b&&m.fill(a,b*c,$*c);for(let C=x;C<y;++C){const A=r[C];if(A<0||A>=u[0])throw new Error(X0(C,r[C],u[0]));for(let B=0;B<c;B++)m[$*c+B]+=n[A*c+B]}if(o)for(let C=0;C<c;C++)m[$*c+C]/=y-x;if(x=y,++y,b=$+1,$=E,y>i)break}return b<d&&m.fill(a,b*c,d*c),[m,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=Rn(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO=pt((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=Rn((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n,e,t,r){const s=De(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SO{constructor(e,t,r,s,o,a){this.separator=vn(e),this.nGramWidths=t,this.leftPad=vn(r),this.rightPad=vn(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),d=a-(c+l),h=t+(c>0?0:i-u);let f=0;f+=c*this.leftPad.length;for(let $=0;$<d;++$)f+=e[h+$].length;f+=l*this.rightPad.length;const m=c+l+d-1;f+=m*this.separator.length,r[s+i]=new Uint8Array(f);const x=r[s+i];let y=0;const b=$=>$.forEach(E=>x[y++]=E);for(let $=0;$<c;++$)b(this.leftPad),b(this.separator);for(let $=0;$<d-1;++$)b(e[h+$]),b(this.separator);if(d>0){b(e[h+d-1]);for(let $=0;$<l;++$)b(this.separator),b(this.rightPad)}else{for(let $=0;$<l-1;++$)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=t[c]>=u;if(l=l&&t[c]<=r,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=Be("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=t[u];let l=a[u];if(this.nGramWidths.forEach(d=>{const h=t[u+1]-t[u],f=this.getNumNGrams(h,d);this.createNGrams(e,c,i,l,f,d),l+=f}),this.preserveShort&&l===a[u]){const d=t[u+1]-t[u];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,c,i,l,1,h)}}return[i,a]}}function CO(n,e,t,r,s,o,a,i){return new SO(t,r,s,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&r.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function NO(n,e,t){const r=n.length,s=[];let o=0,a=0;const i=new Array(r);for(let h=0;h<r;++h){const f=s.length;TO(n[h],e,t,s);const m=s.length-f;i[h]=m,o+=m,a=Math.max(a,m)}const u=Be("int32",o*2),c=new Array(o),l=[r,a];let d=0;for(let h=0;h<r;++h)for(let f=0;f<i[h];++f)u[d*2]=h,u[d*2+1]=f,c[d]=s[d],++d;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,e){const t=Be("int32",n.length);for(let r=0;r<n.length;++r)t[r]=cg(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO=pt((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=De(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);r.values[s]=n.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Db(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const i=r-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),h=Math.max(t,Math.floor(e-u*l/i+d)),f=Math.min(r,Math.floor(e+(i-u)*l/i+d));Db(n,e,h,f)}const s=n[e];let o=t,a=r;for(xn(n,t,e),Os(n[r],s)>0&&xn(n,t,r);o<a;){for(xn(n,o,a),o++,a--;Os(n[o],s)<0;)o=o+1;for(;Os(n[a],s)>0;)a=a-1}Os(n[t],s)===0?xn(n,t,a):(a=a+1,xn(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function RO(n,e,t,r,s){const o=e[e.length-1],[a,i]=[n.length/o,o],u=Cn(t,a*r),c=Cn("int32",a*r);for(let d=0;d<a;d++){const h=d*i,f=n.subarray(h,h+i);let m=new Array(f.length);f.forEach(($,E)=>m[E]={value:$,index:E}),r<m.length&&(Db(m,r),m=m.slice(0,r)),s&&m.sort(Os);const x=d*r,y=u.subarray(x,x+r),b=c.subarray(x,x+r);for(let $=0;$<r;$++)y[$]=m[$].value,b[$]=m[$].index}const l=e.slice();return l[l.length-1]=r,[De(l,t,u),De(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,e,t,r){const s=Ve(e,t)[0],o=[1,t[0],1];for(let m=0;m<s;m++)o[0]*=t[m];o[1]=t[s];for(let m=s+1;m<t.length;m++)o[2]*=t[m];const a=new Map,i=new Int32Array(t[s]),u=new xr(o,r,n),c=[],l=o[0]===1&&o[2]===1;for(let m=0;m<t[s];m++){let x;if(l)x=n[m].toString();else{const b=[];for(let $=0;$<o[0];$++)for(let E=0;E<o[2];E++)b.push(u.get($,m,E));x=b.join(",")}const y=a.get(x);if(y!=null)i[m]=y;else{const b=a.size;a.set(x,b),i[m]=b,c.push(m)}}const d=o.slice();d[1]=a.size;const h=new xr(d,r);c.forEach((m,x)=>{for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)h.set(u.get(y,m,b),y,x,b)});const f=t.slice();return f[s]=d[1],{outputValues:h.values,outputShape:f,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO=Object.freeze(Object.defineProperty({__proto__:null,addImpl:RA,bincountImpl:_A,bincountReduceImpl:AA,bitwiseAndImpl:OA,castImpl:kA,ceilImpl:DA,concatImpl:FA,equalImpl:PA,expImpl:LA,expm1Impl:BA,floorDivImpl:MA,floorImpl:VA,gatherNdImpl:UA,gatherV2Impl:WA,greaterEqualImpl:GA,greaterImpl:zA,lessEqualImpl:jA,lessImpl:HA,linSpaceImpl:qA,logImpl:KA,maxImpl:XA,maximumImpl:YA,minimumImpl:QA,multiplyImpl:Ob,negImpl:ZA,notEqualImpl:JA,prodImpl:tO,raggedGatherImpl:uO,raggedRangeImpl:cO,raggedTensorToTensorImpl:lO,rangeImpl:dO,rsqrtImpl:hO,scatterImpl:pO,sigmoidImpl:fO,simpleAbsImpl:IA,sliceImpl:mO,sparseFillEmptyRowsImpl:gO,sparseReshapeImpl:yO,sparseSegmentReductionImpl:xO,sqrtImpl:bO,squaredDifferenceImpl:wO,staticRegexReplaceImpl:vO,stridedSliceImpl:$O,stringNGramsImpl:CO,stringSplitImpl:NO,stringToHashBucketFastImpl:EO,subImpl:IO,tileImpl:kO,topKImpl:RO,transposeImpl:eO,uniqueImpl:_O},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:OO,bincountImpl:Fb,bincountReduceImpl:DO,bitwiseAndImpl:FO,castImpl:PO,ceilImpl:LO,concatImpl:BO,equalImpl:VO,expImpl:MO,expm1Impl:UO,floorImpl:WO,gatherNdImpl:zO,gatherV2Impl:GO,greaterImpl:HO,greaterEqualImpl:jO,lessImpl:qO,lessEqualImpl:KO,linSpaceImpl:XO,logImpl:YO,maxImpl:QO,maximumImpl:ZO,minimumImpl:JO,multiplyImpl:eD,negImpl:tD,notEqualImpl:nD,prodImpl:rD,raggedGatherImpl:sD,raggedRangeImpl:oD,raggedTensorToTensorImpl:aD,rangeImpl:iD,rsqrtImpl:uD,scatterImpl:cD,sigmoidImpl:lD,simpleAbsImpl:Pb,sliceImpl:dD,sparseFillEmptyRowsImpl:hD,sparseReshapeImpl:pD,sparseSegmentReductionImpl:Lb,sqrtImpl:fD,staticRegexReplaceImpl:mD,stridedSliceImpl:gD,stringNGramsImpl:yD,stringSplitImpl:xD,stringToHashBucketFastImpl:bD,subImpl:wD,tileImpl:vD,topKImpl:$D,transposeImpl:tp,uniqueImpl:SD}=AO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bb(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function st(n,e){return e===1?[n]:Bb(n,e)}function CD(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TD{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Je(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=st("rc",this.rank),r=Ne(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${ND(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Jh():Zh(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function ND(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?b_(["r","c","d"],"inputShape"):Ar(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ED{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=pm(t,r),o=fm(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=hm(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===je.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===je.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===je.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===je.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===je.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=pm(r,s),a=fm(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=hm(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=U().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ID(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function hm(n,e,t,r,s){const o=kD(e,r);let a;if(s){const[u,c]=cs(n[0],n[1]);a=u*c}else{const[u,c]=yo(n[0],n[1]);a=u*c}const i=ID(t,o);return a*i}function kD(n,e){switch(n){case je.PACKED_2X2_FLOAT32:return _b(e);case je.PACKED_2X2_FLOAT16:return Ab(e);case je.UNPACKED_FLOAT32:return Ib(e);case je.UNPACKED_FLOAT16:return kb(e);case je.PACKED_4X1_UNSIGNED_BYTE:return Rb(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function RD(n){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?je.PACKED_2X2_FLOAT32:je.UNPACKED_FLOAT32:n?je.PACKED_2X2_FLOAT16:je.UNPACKED_FLOAT16}function pm(n,e){if(n===Tt.UPLOAD)return je.PACKED_2X2_FLOAT32;if(n===Tt.RENDER||n==null)return RD(e);if(n===Tt.DOWNLOAD||n===Tt.PIXELS)return je.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function fm(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Ut="if (isnan(x)) return x;",_D="return x;",mm="return abs(x);",AD="return (x >= 0.0) ? x : (exp(x) - 1.0);",OD=Ut+`
  return (x < 0.0) ? 0.0 : x;
`,DD=Ut+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,On="return x;",FD="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD="return x;",LD=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,BD=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,VD=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,MD="return 1.0 / (1.0 + exp(-1.0 * x));";class Ln{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length);const t=e.length,r=st("rc",t),s=Ne(t),o=CD(t,r),a=r.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WD=Ch,zD=1e-7,GD=1e-4,Zo={};function HD(n){return n in Zo||(Zo[n]={}),Zo[n]}const jD=U().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),qD=600;function KD(){return U().global.screen==null?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*qD/1024/1024}class oi extends Du{nextDataId(){return oi.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Xi)t=e;else{const r=Qt(U().getNumber("WEBGL_VERSION"),e);t=new Xi(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Qt(U().getNumber("WEBGL_VERSION"));t=new Xi(r),this.binaryCache=HD(U().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ED(this.gpgpu),this.numMBBeforeWarning=KD(),this.texData=new Dm(this,Gt())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const i=this.makeTensorInfo(t,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=Yo(t),l=new im(c,!1,a),d=this.runWebGLProgram(l,[i],r,[[s,o]]);return d.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,r){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Tt.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(U().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Tt.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=t;if(a!=null){let h;u?h=new Ln(i,On):h=new on(i,On);const f=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:s}],s),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=At());let d;if(s==="complex64"){const h=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);d=mu(h,f)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=At()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(x=>m.push(x))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(o!=null){let m;u?m=new Ln(s,On):m=new on(s,On);const x=this.runWebGLProgram(m,[{dataId:e,shape:s,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(U().getBool("DEBUG")&&!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&U().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&U().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const m=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...qo(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const m=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),x=m[0],y=m[1];d=mu(x,y)}else if(c==null)d=this.getValuesFromTexture(e);else{const m=q(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const m=this.gpgpu.gl;J(m,()=>m.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,d),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(m=>m(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Gt().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new Ln(o,On):f=new on(o,On);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),x=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),x}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=Gt().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>yr(s));return De(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!jR(r))throw U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=q(t);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),f=this.texData.get(h.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...qo(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),m}const a=U().getBool("WEBGL_PACK")&&s===!0,i=a?Yo(t):t,u=a?new uA(i):new iA(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=un(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=un(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=Pm(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:At(),endMs:null}}endTimer(e){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=At(),e)}async getQueryTime(e){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=jD){return U().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&q(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Ot("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return WD(e.shape,t)}packedUnaryOp(e,t,r){const s=new Ln(e.shape,t),o=this.compileAndRun(s,[e],r);return Gt().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=Pb(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mm,e.dtype);const t=new on(e.shape,mm),r=this.compileAndRun(t,[e]);return Gt().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&wn(r[0])){const o=r.map(a=>vn(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Gt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new UD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new TD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[ns(e.shape),...rs(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[ns(t),...rs(t)],a=new Vb(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const h=q(o),f=t[0]*t[1]*4;I(h<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Yo(o);let u;s?u=new aA(i):u=new oA(i);const c=!0,l=[t??qo(i)],d=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,t);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Js.DENSE){const b=a??qo(e.outputShape);u.texShape=b.map($=>$*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),q(i.shape)===0)return u.values=Cn(i.dtype,0),i;const c=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(b.dataId);if($.texture==null){if(!e.packedInputs&&q(b.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!$.isPacked!=!!e.packedInputs)b=$.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),$=this.texData.get(b.dataId);else if($.isPacked&&!Na($.shape,b.shape)){const E=b,C=b.shape;b.shape=$.shape,b=this.packedReshape(b,C),c.push(b),$=this.texData.get(b.dataId),E.shape=C}return{shape:b.shape,texData:$,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:u,isUniform:!1},h=sA(e,l,d),f=this.getAndSaveBinary(h,()=>nA(this.gpgpu,e,l,d)),m=this.activeTimers!=null;let x;m&&(x=this.startTimer()),U().get("ENGINE_COMPILE_ONLY")||rA(this.gpgpu,f,l,d,s),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),m&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const y=U().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=At();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!U().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(U().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=oe(()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=U().getBool("DEBUG");U().set("DEBUG",!1);const t=this.abs(he(1e-8)).dataSync()[0];if(U().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?zD:GD}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=At());let d=t.texShape;if(d==null&&(d=l_(r,u),t.texShape=d),o!=null){const h=Yo(r);let f,m=d[1],x=d[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([m,x]=cs(d[0],d[1])),u?f=new lA(h,y):f=new im(h,y);const b=y?[x,m]:d,$=this.makeTensorInfo(b,s),E=this.texData.get($.dataId);y?E.usage=Tt.PIXELS:E.usage=Tt.UPLOAD,E.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),m,x,o);const C=[[x,m]],B=this.runWebGLProgram(f,[$],s,C,!0),M=this.texData.get(B.dataId);t.texShape=M.texShape,t.isPacked=M.isPacked,t.usage=M.usage,U().get("ENGINE_COMPILE_ONLY")?this.disposeData(B.dataId):(t.texture=M.texture,t.values=null,this.texData.delete(B.dataId)),this.disposeIntermediateTensorInfo($),c&&(this.uploadWaitMs+=At()-l)}else{const h=this.acquireTexture(d,i,s,u);t.texture=h}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=XD(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Ls(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await g0(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?($b(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=Eb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=Gt().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,a,i);return Gt().makeTensorFromDataId(c,t,r,u)}}oi.nextDataId=0;function XD(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ad()&&xg("webgl",()=>new oi,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const np=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Er{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=ye(t,r),this.enableShapeUniforms=Je(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class fs{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ye(t,r);const o=this.outputShape.length;this.enableShapeUniforms=Je(o);let a="";if(s)if(o===0||q(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ne(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=st("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YD={kernelName:Fa,backendName:"webgl",kernelFunc:vt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),i=vt({inputs:{x:r},backend:t}),u=vt({inputs:{x:s},backend:t});return a.complexTensorInfos={real:i,imag:u},o}const QD={kernelName:ac,backendName:"webgl",kernelFunc:Xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mb="return (a < 0.) ? b * a : a;",Ub=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ZD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",kr(o,"float32")),i=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fs(Ub,s.shape,a.shape):new Er(Mb,s.shape,a.shape),u=t.runWebGLProgram(i,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const JD={kernelName:Yc,backendName:"webgl",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wb="return (a < 0.) ? b * a : a;",zb=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function eF(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fs(zb,r.shape,s.shape):new Er(Wb,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const tF={kernelName:Il,backendName:"webgl",kernelFunc:eF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms="if (isnan(x)) return x;";function xe({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),h=t(d.values,u);return i.makeTensorInfo(a.shape,u,h)}const c=U().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new Ln(a.shape,e):l=new on(a.shape,n),i.runWebGLProgram(l,[a],u)}}function Ke({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const m=l.texData.get(u.dataId),x=l.texData.get(c.dataId),[y,b]=[[m.complexTensorInfos.real,x.complexTensorInfos.real],[m.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(E=>{const[C,A]=E,B={dataId:C.dataId,dtype:C.dtype,shape:u.shape},M={dataId:A.dataId,dtype:A.dtype,shape:c.shape},V=new Er(n,u.shape,c.shape);return l.runWebGLProgram(V,[B,M],Yt(C.dtype,A.dtype))}),$=Xn({inputs:{real:y,imag:b},backend:l});return l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(b),$}const d=o||Yt(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const m=l.texData.get(u.dataId).values,x=l.texData.get(c.dataId).values,y=u.dtype==="string"?ts(m):m,b=u.dtype==="string"?ts(x):x,[$,E]=s(u.shape,c.shape,y,b,d),C=l.makeTensorInfo(E,d),A=l.texData.get(C.dataId);return A.values=$,C}const h=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return h?f=new fs(e,u.shape,c.shape,t):f=new Er(n,u.shape,c.shape),l.runWebGLProgram(f,[u,c],d)}}function eo(n,e=!1){if(n==="linear")return e?PD:_D;if(n==="relu")return e?BD:OD;if(n==="elu")return e?LD:AD;if(n==="relu6")return e?VD:DD;if(n==="prelu")return e?zb:Wb;if(n==="leakyrelu")return e?Ub:Mb;if(n==="sigmoid")return e?MD:FD;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gb{constructor(e,t,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Je(this.outputShape.length);const l=s?e[1]:e[2],d=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",m=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";i&&(u?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const $=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let E="rc.x",C="rc.x";e[0]<t[0]?E=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(C=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${E};
        int batchB = ${C};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${x[0]});
          result += (${m[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gm={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ym{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ye(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xm="return a * b;";function rp(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=Yt(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new ym(gm.REAL,r.shape,s.shape),l=new ym(gm.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],h=t.runWebGLProgram(c,d,"float32"),f=t.runWebGLProgram(l,d,"float32"),m=Xn({inputs:{real:h,imag:f},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),m}if(t.shouldExecuteOnCPU([r,s])){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,l]=eD(r.shape,s.shape,i.values,u.values,o),d=t.makeTensorInfo(l,o),h=t.texData.get(d.dataId);return h.values=c,d}let a;return U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new fs(xm,r.shape,s.shape):a=new Er(xm,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const nF={kernelName:yl,backendName:"webgl",kernelFunc:rp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n,e,t){const r=[ns(n.shape),...rs(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[ns(e),...rs(e)],a=new Vb(o,r),i=!0,u=[r],c=t.runWebGLProgram(a,[s],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,i=q(s.shape),u=Bm(o,i),c=q(u);I(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!Na(s.shape,u)&&!(l.texture!==null&&Na(l.shape,u))?rF(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const sF={kernelName:Ll,backendName:"webgl",kernelFunc:X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bm{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const d=1/t;c=`sumValue += dot(values * ${gr(d)?d.toPrecision(2):d}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oF{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,d=r%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Ja(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function Fr(n,e,t,r){const s=aF(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,d;t==="mean"?l=a===0?new bm({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new bm({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new oF({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),d=o,o=r.runWebGLProgram(l,[o],e),d.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iF{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=Ne(this.rank),o=uF(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function uF(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[t[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Ne(this.rank),o=Bb("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(n,e,t){const r=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cF(n.shape,e):new iF(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(n,e,t,r){const s=e,o=n.shape.length,a=Ve(s,n.shape);let i=a;const u=Vt(i,o),c=u!=null;let l=n;c&&(l=ai(n,u,r),i=Mt(i.length,o)),Jt("sum",i,o);const[d,h]=pn(l.shape,i);let f=d;t&&(f=Et(d,a));const m=q(h),y=q(n.shape)/m,b=X({inputs:{x:l},attrs:{shape:[y,m]},backend:r}),$=La(n.dtype),E=Fr(b,$,"sum",r),C=X({inputs:{x:E},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(E),c&&r.disposeIntermediateTensorInfo(l),C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return lF(s,o,a,t)}const dF={kernelName:nd,backendName:"webgl",kernelFunc:ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const d=a.texData.get(s.dataId).values,h=tp(d,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const f=a.texData.get(c.dataId);f.values=h}else c=ai(s,o,a);return c}const hF={kernelName:Fs,backendName:"webgl",kernelFunc:at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hb=1e3;function Ia({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,d=t?n.shape[c-2]:n.shape[c-1],h=r?e.shape[l-1]:e.shape[l-2],f=t?n.shape[c-1]:n.shape[c-2],m=r?e.shape[l-2]:e.shape[l-1],x=n.shape.slice(0,-2),y=e.shape.slice(0,-2),b=q(x),$=q(y),C=ye(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);I(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const A=t?[b,d,f]:[b,f,d],B=r?[$,m,h]:[$,h,m],M=X({inputs:{x:n},backend:s,attrs:{shape:A}}),V=X({inputs:{x:e},backend:s,attrs:{shape:B}}),P=[M,V],F=Math.max(b,$),T=t?M.shape[1]:M.shape[2],z=o!=null,H=a!=null,K=u==="leakyrelu",Z=u!=null?eo(u,!0):null,te=z||H||K||Z!=null;let ae;if((f===1||m===1)&&T>Hb&&te===!1){let le=M,fe=V;t&&(le=at({inputs:{x:M},backend:s,attrs:{perm:[0,2,1]}}),P.push(le)),r&&(fe=at({inputs:{x:V},backend:s,attrs:{perm:[0,2,1]}}),P.push(fe));const Ie=m!==1,we=m===1;let Ce=le;Ie&&(Ce=X({inputs:{x:le},backend:s,attrs:{shape:[F,T,1]}}),P.push(Ce));const Me=m===1?2:1;let ut=fe;we&&(ut=X({inputs:{x:fe},backend:s,attrs:{shape:[F,1,T]}}),P.push(ut));const ct=rp({inputs:{a:Ce,b:ut},backend:s});ae=ii({inputs:{x:ct},backend:s,attrs:{axis:Me,keepDims:!0}}),P.push(ct)}else{const le=Yt(n.dtype,e.dtype),fe=new Gb(A,B,[F,f,m],t,r,z,Z,H,K),Ie=[M,V];if(o!=null&&Ie.push(o),H&&Ie.push(a),K){const we=s.makeTensorInfo([],"float32",kr(i,"float32"));Ie.push(we),P.push(we)}ae=s.runWebGLProgram(fe,Ie,le)}const ie=X({inputs:{x:ae},backend:s,attrs:{shape:C}});P.push(ae);for(const le of P)s.disposeIntermediateTensorInfo(le);return ie}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return Ia({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const fF={kernelName:ma,backendName:"webgl",kernelFunc:pF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wm="return abs(x);";function mF(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=Pb(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ln(r.shape,wm):s=new on(r.shape,wm),t.runWebGLProgram(s,[r],r.dtype)}const gF={kernelName:Bu,backendName:"webgl",kernelFunc:mF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF=Ut+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,xF=xe({opSnippet:yF}),bF={kernelName:Vu,backendName:"webgl",kernelFunc:xF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF=Ut+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,vF=xe({opSnippet:wF}),$F={kernelName:Mu,backendName:"webgl",kernelFunc:vF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vm="return a + b;",SF=Ke({opSnippet:vm,packedOpSnippet:vm,supportsComplex:!0,cpuKernelImpl:OO}),CF={kernelName:Oa,backendName:"webgl",kernelFunc:SF};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TF{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NF{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return vt({inputs:{x:r[0]},backend:t});if(r.length>U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=la({inputs:r.slice(0,u),backend:t}),l=la({inputs:r.slice(u),backend:t});return la({inputs:[c,l],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>Yt(u,c)),o=r.map(u=>u.shape),i=U().getBool("WEBGL_PACK")?new NF(r[0].shape,o):new TF(r[0].shape,o);return t.runWebGLProgram(i,r,s)}const EF={kernelName:Uu,backendName:"webgl",kernelFunc:la};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=Vt(c,i);let d=s;l!=null&&(d=at({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Mt(c.length,i)),Jt("all",c,i);const[h,f]=pn(d.shape,c),m=q(f),x=X({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=Fr(x,x.dtype,"all",t);let b;if(a){const $=Et(h,u);b=X({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=X({inputs:{x:y},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const kF={kernelName:Wu,backendName:"webgl",kernelFunc:IF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=Vt(c,i);let d=s;l!=null&&(d=at({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Mt(c.length,i)),Jt("any",c,i);const[h,f]=pn(d.shape,c),m=q(f),x=X({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=Fr(x,x.dtype,"any",t);let b;if(a){const $=Et(h,u);b=X({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=X({inputs:{x:y},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const _F={kernelName:zu,backendName:"webgl",kernelFunc:RF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AF{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OF{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=Ne(u),l=st("coords",u);let d,h;if(a===1){h=u+1;const V=Ne(h);d=`
        ${V} sourceLocR = ${V}(${l.join()}, 0);
        ++${l[u-1]};
        ${V} sourceLocG = ${V}(${l.join()}, 0);
        ++${l[u-2]};
        ${V} sourceLocA = ${V}(${l.join()}, 0);
        --${l[u-1]};
        ${V} sourceLocB = ${V}(${l.join()}, 0);
        --${l[u-2]};`}else h=u,d=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const f=["x","y","z","w","u","v"].slice(0,h),m="."+f[h-1],x=f.map(V=>"int "+V),y=st("sourceLocR",h-1).concat("inIdx.r"),b=st("sourceLocG",h-1).concat("inIdx.g"),$=st("sourceLocB",h-1).concat("inIdx.b"),E=st("sourceLocA",h-1).concat("inIdx.a"),C=r==="max"?"greaterThan":"lessThan",A=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${E.join()})));`,B=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${E.join()}) : 0.)`,M=s?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${M}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${B};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${A}
          vec4 candidate = ${B};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=Ja(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new AF(i,t,r==null),c=[e];r!=null&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const d=jb(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}function qb(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=Ja(o),i=new OF(s,a,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=qb(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function Kb(n,e,t,r){const s=[t];if(Jt("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!U().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=n.unpackTensor(e),o.push(u));const[c,l]=pn(u.shape,s),d=q(l),h=X({inputs:{x:u},backend:n,attrs:{shape:[-1,d]}});o.push(h);const f=jb(n,h,r);o.push(f);const m=X({inputs:{x:f},backend:n,attrs:{shape:c}});return o.forEach(x=>n.disposeIntermediateTensorInfo(x)),m}return qb(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ve(o,s.shape);const i=Vt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=at({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Mt(a.length,u.shape.length)),Jt("argMax",[a[0]],u.shape.length);const l=Kb(t,u,a[0],"max");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const FF={kernelName:Gu,backendName:"webgl",kernelFunc:DF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ve(o,s.shape);const i=Vt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=at({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Mt(a.length,u.shape.length)),Jt("argMin",[a[0]],u.shape.length);const l=Kb(t,u,a[0],"min");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const LF={kernelName:Hu,backendName:"webgl",kernelFunc:PF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=Ut+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,VF=xe({opSnippet:BF}),MF={kernelName:ju,backendName:"webgl",kernelFunc:VF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF=Ut+"return log(x + sqrt(x * x + 1.0));",WF=xe({opSnippet:UF}),zF={kernelName:qu,backendName:"webgl",kernelFunc:WF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=Ut+`
  return atan(x);
`,HF=xe({opSnippet:GF}),jF={kernelName:Ku,backendName:"webgl",kernelFunc:HF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF=np+`
  return atan(a, b);
`,KF=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Dr+`
  return result;
`,XF=Ke({opSnippet:qF,packedOpSnippet:KF}),YF={kernelName:Yu,backendName:"webgl",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF=Ut+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ZF=xe({opSnippet:QF}),JF={kernelName:Xu,backendName:"webgl",kernelFunc:ZF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class to{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(x||($="-1.0 / 1e-20"),r){const V=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${V} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?y:b:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const E="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const A=Math.floor(a/4)*4,B=a%4,M=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${E}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${A}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${M}
          }

          int xC = xCCorner + ${A};
          if (${B===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${B===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${B===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${M}
          }
        }
        setOutput(${C});
      }
    `}}class sp{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,f=e.effectiveFilterDepth,m=e.effectiveFilterHeight,x=e.effectiveFilterWidth,y=e.padInfo.front,b=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const E=t==="avg";let C="0.0";if(E||(C="-1.0 / 1e-20"),r){const F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${y}, ${b}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const A="max";let B=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(B="avgValue / max(count, 1.0)");const M=Math.floor(a/4)*4,V=a%4,P=`
      if (${E}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${A}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${y}, ${b}, ${$});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${M}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${M};
            if (${V===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${V===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${V===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${P}
            }
          }
        }
        setOutput(${B});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;xo(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;I(St(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Rr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Ae(l.inShape,l.outShape))return vt({inputs:{x:s},backend:t});const d=new to(l,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const tP={kernelName:Qu,backendName:"webgl",kernelFunc:eP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],d=ao(s.shape,o,a,l,i,u,c),h=new sp(d,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const rP={kernelName:Zu,backendName:"webgl",kernelFunc:nP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,d=c-1-e.padInfo.left,h=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class oP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=d-1-e.padInfo.front,x=h-1-e.padInfo.top,y=f-1-e.padInfo.left,b=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${x}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],h=ao(a.shape,i,u,d,c,l),f=new oP(h);return t.runWebGLProgram(f,[s],a.dtype)}const iP={kernelName:Xm,backendName:"webgl",kernelFunc:aP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;xo([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Rr(a.shape,i,u,1,c),d=new sP(l);return t.runWebGLProgram(d,[s],a.dtype)}const cP={kernelName:Km,backendName:"webgl",kernelFunc:uP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return Ia({a:s,b:o,transposeA:a,transposeB:i,backend:t})}const dP={kernelName:Ju,backendName:"webgl",kernelFunc:lP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hP{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ye(e,t),ye(e,r);let i="0.0";s!=null&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(ye(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pP{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ye(e,t),ye(e,r);let i="vec4(0.0)";s!=null&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(ye(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fP=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=n;I(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let d=null;i!=null&&(d=i.shape,c.push(i));const h=U().getBool("WEBGL_PACK_NORMALIZATION")?new pP(r.shape,s.shape,o.shape,l,d,u):new hP(r.shape,s.shape,o.shape,l,d,u);return e.runWebGLProgram(h,c,c[0].dtype)},mP={kernelName:Mc,backendName:"webgl",kernelFunc:fP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gP{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ne(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=yP(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${_u[i]} = start[${i}] + coords.${_u[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const _u=["x","y","z","w","u","v"];function yP(n){if(n===1)return"sourceLoc";if(n<=6)return _u.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xP{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ne(this.rank),r=st("coords",this.rank),s=st("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,d)=>`start[${d}]`).join()});`:e.map((l,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=Wh(e,Ge(n.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function gs(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[i,u]=h0(s,o,a);if(n0(s,i,u),q(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=t.texData.get(s.dataId),h=dD(d.values,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,h)}const{isPacked:c}=t.texData.get(s.dataId),l=Uh(s.shape,i,u);if(c||!l){const d=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xP(u):new gP(u),h=[i];return t.runWebGLProgram(d,[s],s.dtype,h)}return t.uploadToGPU(s.dataId),bP(s,i,u,t)}const wP={kernelName:Xl,backendName:"webgl",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vP=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;I(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce(($,E)=>$*E),u=Gh(s.shape,o,i),c=Hh(u.length,o.length),l=jh(s.shape,o,i),d=S0(a,o.length),h=C0(l,a,o.length),f=[],m=X({inputs:{x:s},backend:t,attrs:{shape:u}}),x=at({inputs:{x:m},backend:t,attrs:{perm:c}}),y=X({inputs:{x},backend:t,attrs:{shape:l}}),b=gs({inputs:{x:y},backend:t,attrs:{begin:d,size:h}});return f.push(m),f.push(x),f.push(y),f.forEach($=>t.disposeIntermediateTensorInfo($)),b},$P={kernelName:ec,backendName:"webgl",kernelFunc:vP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.readSync(s.dataId),u=t.readSync(o.dataId),c=Fb(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const CP={kernelName:tc,backendName:"webgl",kernelFunc:SP};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,NP=`
  return float(int(a.r) & int(b.r));
`;function EP(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=U().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const u=t.texData.get(r.dataId).values,c=t.texData.get(s.dataId).values,[l,d]=FO(r.shape,s.shape,u,c,r.dtype),h=t.makeTensorInfo(d,r.dtype),f=t.texData.get(h.dataId);return f.values=l,h}let i;return o?i=new fs(TP,r.shape,s.shape,!1):i=new Er(NP,r.shape,s.shape),t.runWebGLProgram(i,[r,s],r.dtype)}const IP={kernelName:nc,backendName:"webgl",kernelFunc:EP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),i=ye(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const RP={kernelName:rc,backendName:"webgl",kernelFunc:kP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P="return float(a != b);",Xb=Ke({opSnippet:_P,cpuKernelImpl:nD,dtype:"bool"}),AP={kernelName:bl,backendName:"webgl",kernelFunc:Xb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return vt({inputs:{x:s.complexTensorInfos.real},backend:t})}const OP={kernelName:Dl,backendName:"webgl",kernelFunc:wo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP="return float(int(x));";function FP(n,e){const t=new on(n.shape,DP),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return vt({inputs:{x:s},backend:t});const a=zn(s.shape),i=Au({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=Xn({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=wo({inputs:{input:s},backend:t}),i=Au({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Um(s.dtype,o)){const a=vt({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[i,u,c]=PO(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}if(o==="int32")return FP(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",Cn("bool",1)),u=Xb({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const PP={kernelName:Da,backendName:"webgl",kernelFunc:Au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m="return ceil(x);",LP=xe({opSnippet:$m,packedOpSnippet:$m,cpuKernelImpl:LO}),BP={kernelName:sc,backendName:"webgl",kernelFunc:LP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VP{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;U().getBool("WEBGL_PACK_CLIP")?i=new MP(s.shape):i=new VP(s.shape);const u=[[o],[a]];return t.runWebGLProgram(i,[s],s.dtype,u)}const WP={kernelName:oc,backendName:"webgl",kernelFunc:UP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zP{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function GP(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new zP(r.shape),a=[Sm(r,s.complexTensorInfos.real),Sm(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const HP={kernelName:ic,backendName:"webgl",kernelFunc:GP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jP{constructor(e){this.outputShape=[],this.outputShape=Tr(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qP{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Tr(e,t);const r=this.outputShape,s=r.length,o=Ne(s),a=st("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((x,y)=>`T${y}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let x=1;x<u.length;x++)u[x]=u[x-1]+e[x][t];const c=i[t],l=i.slice(-2),d=i.join();let h=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let x=1;x<u.length;x++){const y=u[x-1];h+=`
        if (${c} < ${u[x]}  && ${c} >= ${u[x-1]}) {
          return getChannel(
            getT${x}(${Jo(i,c,y)}),
            vec2(${Jo(l,c,y)}));
        }`}const f=u.length,m=u[u.length-1];h+=`
        return getChannel(
          getT${f}(${Jo(i,c,m)}),
          vec2(${Jo(l,c,m)}));`,this.userCode=`
      float getValue(${i.map(x=>"int "+x)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Jo(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return vt({inputs:{x:s.complexTensorInfos.imag},backend:t})}const KP={kernelName:jc,backendName:"webgl",kernelFunc:ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(n,e,t){const r=n[0].dtype;if(r==="complex64"){const f=n.map($=>wo({inputs:{input:$},backend:t})),m=n.map($=>ui({inputs:{input:$},backend:t})),x=Ds(f,e,t),y=Ds(m,e,t),b=Xn({inputs:{real:x,imag:y},backend:t});return f.forEach($=>t.disposeIntermediateTensorInfo($)),m.forEach($=>t.disposeIntermediateTensorInfo($)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),b}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const f=n.map(C=>{const B=[-1,q(C.shape.slice(e))];return X({inputs:{x:C},backend:t,attrs:{shape:B}})}),m=f.map(C=>({vals:t.readSync(C.dataId),shape:C.shape})),x=Tr(f.map(C=>C.shape),1),y=f[0].shape[0]===1,b=BO(m,x,r,y),$=Tr(n.map(C=>C.shape),e),E=t.makeTensorInfo($,r,b);return f.forEach(C=>t.disposeIntermediateTensorInfo(C)),E}const o=n.filter(f=>q(f.shape)>0),a=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=a?new on(n[0].shape,On):new Ln(n[0].shape,On);return t.runWebGLProgram(f,n,r)}const i=U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const f=[];for(let x=0;x<o.length;x+=i){const y=o.slice(x,x+i);f.push(Ds(y,e,t))}const m=Ds(f,e,t);for(const x of f)t.disposeIntermediateTensorInfo(x);return m}if(a){const f=new qP(o.map(m=>m.shape),e);return t.runWebGLProgram(f,o,r)}const{tensors2D:u,outShape:c}=XP(o,e,t),l=new jP(u.map(f=>f.shape)),d=t.runWebGLProgram(l,u,r);u.forEach(f=>t.disposeIntermediateTensorInfo(f));const h=X({inputs:{x:d},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(d),h}function XP(n,e,t){const r=Tr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>X({inputs:{x:o},attrs:{shape:[-1,q(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=Ve(s,e[0].shape)[0],a=e.map(c=>c.shape);y0(a,o);const i=Tr(e.map(c=>c.shape),o);if(q(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>q(c.shape)>0);return u.length===1?vt({inputs:{x:u[0]},backend:t}):Ds(u,o,t)}const YP={kernelName:uc,backendName:"webgl",kernelFunc:Yb};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qb{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,y=e.dataFormat==="channelsLast",b=y?1:2,$=y?2:3,E=y?3:1;let C="",A="";r&&(s?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:C=`
          float activation(float x) {
            ${r}
          }
        `,A="result = activation(result);");const B=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${E}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${B}
        ${A}
        setOutput(result);
      }
    `}}class QP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zb{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Je(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<l;y++)h+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<l;y++)h+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(d+1)/2;y++){const b=y*2;if(h+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?h+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const $=a%2===0?_a(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:h+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):$===1?h+=`
                     xC${b+1} = xTexelC${b};
                     `:h+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(h+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(h+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(h+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let f="",m="";r&&(s?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:f=`vec4 activation(vec4 x) {
           ${r}
         }`,m="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Je(this.outputShape.length);const{dataFormat:r}=t,s=it(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Jb({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=r.texData.get(n.dataId),l=t.inChannels,d=u[0]*u[1]*u[2],h=t.outChannels,f=t.dataFormat==="channelsLast",m=!1,x=!1;let y;const b=[];if(o!=null){const C=ka(o.shape,f);C!=null&&(o=X({inputs:{x:o},backend:r,attrs:{shape:C}}),b.push(o))}if(s!=null){const C=ka(s.shape,f);C!=null&&(s=X({inputs:{x:s},backend:r,attrs:{shape:C}}),b.push(s))}if(!((d===1||h===1)&&l>Hb)&&c.isPacked&&f&&c.texture!=null&&u[2]%2!==0&&Ae(c.shape.slice(-3),u.slice(-3))){const C=u[0]*u[1]*(u[2]+1),A={dataId:n.dataId,shape:[1,C,t.inChannels],dtype:n.dtype},B=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,I(Na(c.shape,A.shape),()=>`packed reshape ${c.shape} to ${A.shape} isn't free`);const M=X({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(M);const V=Ia({a:A,b:M,backend:r,transposeA:m,transposeB:x,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),P=r.texData.get(V.dataId);I(P.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=B,P.shape=t.outShape,y=vt({inputs:{x:V},backend:r}),y.shape=t.outShape,b.push(V)}else{const C=t.outHeight*t.outWidth,A=X({inputs:{x:n},backend:r,attrs:{shape:f?[t.batchSize,C,t.inChannels]:[t.batchSize,t.inChannels,C]}}),B=X({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),M=Ia({a:f?A:B,b:f?B:A,transposeA:!f,transposeB:x,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=X({inputs:{x:M},backend:r,attrs:{shape:t.outShape}}),b.push(A),b.push(B),b.push(M)}for(const C of b)r.disposeIntermediateTensorInfo(C);return y}function e1({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:f}=t,m=f==="channelsLast",x=u*c*l,y=h*d,b=[t.batchSize,x,y],$=!0,E=!1,C=[];if(o!=null){const ie=ka(o.shape,m);ie!=null&&(o=X({inputs:{x:o},backend:r,attrs:{shape:ie}}),C.push(o))}if(s!=null){const ie=ka(s.shape,m);ie!=null&&(s=X({inputs:{x:s},backend:r,attrs:{shape:ie}}),C.push(s))}const A=X({inputs:{x:e},backend:r,attrs:{shape:[1,x,q(e.shape)/x]}});C.push(A);const B=new ZP(b,t),M=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],V=r.runWebGLProgram(B,[n],"float32",M),P=X({inputs:{x:V},backend:r,attrs:{shape:b}});C.push(V),C.push(P);const F=s!=null,T=o!=null,z=i==="leakyrelu",H=i?eo(i,!0):null,K=new Gb(m?P.shape:A.shape,m?A.shape:P.shape,m?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],$,E,F,H,T,z),Z=m?[P,A]:[A,P];if(s&&Z.push(s),T&&Z.push(o),z){const ie=r.makeTensorInfo([],"float32",kr(a,"float32"));Z.push(ie),C.push(ie)}const te=r.runWebGLProgram(K,Z,"float32"),ae=X({inputs:{x:te},backend:r,attrs:{shape:t.outShape}});C.push(te);for(const ie of C)r.disposeIntermediateTensorInfo(ie);return ae}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=os(u),h=Nt(s.shape,o.shape,a,c,i,l,!1,d);let f;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))f=Jb({x:s,filter:o,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const x=new Zb(h),y=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];f=t.runWebGLProgram(x,[s,o],"float32",y)}else if(U().getBool("WEBGL_CONV_IM2COL"))f=e1({x:s,filter:o,convInfo:h,backend:t});else{const x=new Qb(h);f=t.runWebGLProgram(x,[s,o],"float32")}const m=X({inputs:{x:f},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(f),m}const e3={kernelName:cc,backendName:"webgl",kernelFunc:JP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t3{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class n3{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class r3{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class s3{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=os(u),h=Nt(s.shape,l,a,1,i,c,!1,d),f=new t3(h);return t.runWebGLProgram(f,[s,o],"float32")}const a3={kernelName:lc,backendName:"webgl",kernelFunc:o3};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i3{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Je(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=os(c),h=Nt(a,o.shape,i,1,u,l,!1,d);if(U().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const f=[[h.strideHeight,h.strideWidth]],m=new i3(h);return t.runWebGLProgram(m,[s,o],"float32",f)}else{const f=new n3(h);return t.runWebGLProgram(f,[s,o],"float32")}}const c3={kernelName:dc,backendName:"webgl",kernelFunc:u3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=io(s.shape,o.shape,a,u,i),l=new QP(c);return t.runWebGLProgram(l,[s,o],"float32")}const d3={kernelName:hc,backendName:"webgl",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=io(s.shape,u,a,1,i),l=new r3(c);return t.runWebGLProgram(l,[s,o],"float32")}const p3={kernelName:Ym,backendName:"webgl",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=io(u,o.shape,i,1,a),l=new s3(c);return t.runWebGLProgram(l,[s,o],"float32")}const m3={kernelName:pc,backendName:"webgl",kernelFunc:f3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3=ms+`
  return cos(x);
`,y3=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Dr}
  return result;
`,x3=xe({opSnippet:g3,packedOpSnippet:y3}),b3={kernelName:fc,backendName:"webgl",kernelFunc:x3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,v3=xe({opSnippet:w3}),$3={kernelName:mc,backendName:"webgl",kernelFunc:v3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S3{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=t,[d,h]=r;this.outputShape=[l,d,h,c];const f=s==="bilinear"?1:0,[m,x]=[`${i-1}.0`,`${u-1}.0`],[y,b,$]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[E,C,A]=h>1?[`${(u-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${E});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${C};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${A};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new S3(s.shape,o.shape,i,u,c);return t.runWebGLProgram(l,[s,o,a],"float32")},T3={kernelName:xc,backendName:"webgl",kernelFunc:C3};var no;(function(n){n.Prod="*",n.Sum="+"})(no||(no={}));class Cm{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===no.Prod?"1.0":"0.0",i=r?a:`getX(${Tm(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ne(o)} coords = getOutputCoords();
        int end = ${Nm(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${Nm(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Tm(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Tm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Nm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(n,e,t,r,s,o){const a=e.shape.length,i=Vt([r],a);let u=e;i!=null&&(u=at({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=Mt(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let d=vt({inputs:{x:u},backend:t});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const f=new Cm(n,u.shape,!1,o),m=[[h]],x=d;d=t.runWebGLProgram(f,[d],d.dtype,m),t.disposeIntermediateTensorInfo(x)}if(s){const h=new Cm(n,u.shape,s,o),f=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(f)}if(i!=null){const h=Kd(i),f=at({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),f}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return t1(no.Prod,s,t,o,a,i)}const E3={kernelName:gc,backendName:"webgl",kernelFunc:N3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return t1(no.Sum,s,t,o,a,i)}const k3={kernelName:yc,backendName:"webgl",kernelFunc:I3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=Fb(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=DO(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const _3={kernelName:bc,backendName:"webgl",kernelFunc:R3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A3{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],d=u*o,h=c*o,f=l/(o*o),m=a==="NHWC"?[i,d,h,f]:[i,f,d,h],x=new A3(m,o,a);return t.runWebGLProgram(x,[s],s.dtype)}const D3={kernelName:wc,backendName:"webgl",kernelFunc:O3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n1{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Je(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r1{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Je(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)f+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;f+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<d;b++)f+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(h+1)/2;b++){const $=b*2;if(f+=`
          xC = xCCorner + ${$*c};
          `,u===1){if($<d&&(i%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,c===1&&$>0?f+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<d)){const E=i%2===0?_a(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${E};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:f+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):E===1?f+=`
                    xC${$+1} = xTexelC${$};
                    `:f+=`
                    xCOffset = xC + ${E};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<d&&(i%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<d&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<d&&(f+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<d&&(f+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<d&&(f+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let m="",x="";r&&(s?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,x="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),I(St(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const d=Nt(s.shape,o.shape,a,l,i,c,!0);let h;U().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new r1(d):h=new n1(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[s,o],"float32",f)}const P3={kernelName:vc,backendName:"webgl",kernelFunc:F3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L3{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class B3{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,d=Nt(s.shape,l,a,i,u,c,!0),h=new L3(d);return t.runWebGLProgram(h,[s,o],"float32")}const M3={kernelName:$c,backendName:"webgl",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,d=Nt(l,o.shape,a,i,u,c,!0),h=new B3(d);return t.runWebGLProgram(h,[s,o],"float32")}const W3={kernelName:Sc,backendName:"webgl",kernelFunc:U3};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z3{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=q(r.shape),a=X({inputs:{x:r},backend:t,attrs:{shape:[o]}}),i=new z3(o),u=t.runWebGLProgram(i,[a],a.dtype),c=X({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),c}const H3={kernelName:Cc,backendName:"webgl",kernelFunc:G3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j3{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:d,left:h}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Wg(s.shape,o.shape,a,i,"NHWC",u);let l;const d=new j3(c);l=t.runWebGLProgram(d,[s,o],"float32");const h=X({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),h}const K3={kernelName:Tc,backendName:"webgl",kernelFunc:q3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=O0(s,o.length);F0(a.length,u,o);const{path:c,steps:l}=P0(i,u),d=l.length;let h=null,f=a.length;const m=[];for(let x=0;x<d;++x){for(const y of l[x]){const{permutationIndices:b,expandDims:$}=D0(f,u[y]);let E;L0(b)?E=o[y]:(E=at({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),m.push(E));const C=E.shape.slice();for(let A=0;A<$.length;++A)C.splice($[A],0,1);Ae(E.shape,C)||(E=X({inputs:{x:E},backend:t,attrs:{shape:C}}),m.push(E)),h===null?h=E:(h=rp({inputs:{a:E,b:h},backend:t}),m.push(h))}x<d-1&&(c[x]>=0&&(h=ii({inputs:{x:h},backend:t,attrs:{axis:c[x]-(a.length-f),keepDims:!1}}),m.push(h)),f--)}for(const x of m)x!==h&&t.disposeIntermediateTensorInfo(x);return h}const Y3={kernelName:Ic,backendName:"webgl",kernelFunc:X3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3="return (x >= 0.0) ? x : (exp(x) - 1.0);",Z3=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,J3=xe({opSnippet:Q3,packedOpSnippet:Z3}),eL={kernelName:kc,backendName:"webgl",kernelFunc:J3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL="return (b >= 0.0) ? a : a * (b + 1.0);",nL=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,rL=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fs(nL,r.shape,s.shape):new Er(tL,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},sL={kernelName:Qm,backendName:"webgl",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=`
  return vec4(equal(a, b));
`,aL="return float(a == b);",iL=Ke({opSnippet:aL,packedOpSnippet:oL,dtype:"bool",cpuKernelImpl:VO}),uL={kernelName:_c,backendName:"webgl",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${E0};
  float a1 = ${I0};
  float a2 = ${k0};
  float a3 = ${R0};
  float a4 = ${_0};
  float a5 = ${A0};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,lL=xe({opSnippet:cL}),dL={kernelName:Rc,backendName:"webgl",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=ms+`
  return exp(x);
`,pL=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,s1=xe({opSnippet:hL,packedOpSnippet:pL,cpuKernelImpl:MO,dtype:"float32"}),fL={kernelName:Ac,backendName:"webgl",kernelFunc:s1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(I(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),X({inputs:{x:o},backend:r,attrs:{shape:i}})}const mL={kernelName:Oc,backendName:"webgl",kernelFunc:Ou};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Em="return exp(x) - 1.0;",gL=xe({opSnippet:Em,packedOpSnippet:Em,cpuKernelImpl:UO}),yL={kernelName:Dc,backendName:"webgl",kernelFunc:gL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1(n,e,t){const r=t.texData.get(n.dataId),s=q(n.shape),o=n.shape[n.shape.length-1],a=s/o,i=X({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=i.shape,c=new Im("real",u,e),l=new Im("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=t.runWebGLProgram(c,d,"float32"),f=t.runWebGLProgram(l,d,"float32"),m=Xn({inputs:{real:h,imag:f},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f);const x=X({inputs:{x:m},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(m),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const{inputs:e,backend:t}=n,{input:r}=e;return o1(r,!1,t)}const bL={kernelName:Fc,backendName:"webgl",kernelFunc:xL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||ss(s),o==="string"){const a=Be(o,q(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new wL(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const vL={kernelName:Pc,backendName:"webgl",kernelFunc:vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $L{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL={kernelName:Lc,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new $L(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const km="return floor(x);",CL=xe({opSnippet:km,packedOpSnippet:km,cpuKernelImpl:WO}),TL={kernelName:Bc,backendName:"webgl",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,EL=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,IL=Ke({opSnippet:NL,packedOpSnippet:EL,dtype:"int32"}),kL={kernelName:Vc,backendName:"webgl",kernelFunc:IL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RL{constructor(e){this.variableNames=["A"];const t=it(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _L{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=it(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL={kernelName:fa,backendName:"webgl",kernelFunc:OL};let Mr,Yi=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function OL(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],d=[c,u,o];if(i||a){const x=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Mr==null||x!==Yi)&&(Yi=x,Mr=document.createElement("canvas").getContext("2d",{willReadFrequently:Yi})),Mr.canvas.width=u,Mr.canvas.height=c,Mr.drawImage(s,0,0,u,c),s=Mr.canvas}const h=t.makeTensorInfo(l,"int32");t.texData.get(h.dataId).usage=Tt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),s);const f=U().getBool("WEBGL_PACK")?new _L(d):new RL(d),m=t.runWebGLProgram(f,[h],"int32");return t.disposeData(h.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,x=os(l),y=Nt(s.shape,o.shape,u,d,c,h,!1,x);let b;const $=[],E=a!=null,C=i!=null,A=f==="leakyrelu",B=()=>{const V=[s,o],P=(F,T)=>{if(T==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){const z=X({inputs:{x:F},backend:t,attrs:{shape:[F.shape[0],1,1]}});return $.push(z),z}return F};if(E&&V.push(P(a,l)),C&&V.push(P(i,l)),A){const F=t.makeTensorInfo([],"float32",kr(m,"float32"));V.push(F),$.push(F)}return V};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=Jb({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:m});else if(y.strideWidth<=2&&x==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){const V=f?eo(f,!0):null,P=new Zb(y,E,V,C,A),F=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=B();b=t.runWebGLProgram(P,T,"float32",F)}else if(U().getBool("WEBGL_CONV_IM2COL"))b=e1({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:m});else{const V=f?eo(f,!1):null,P=new Qb(y,E,V,C,A),F=B();b=t.runWebGLProgram(P,F,"float32")}const M=X({inputs:{x:b},backend:t,attrs:{shape:y.outShape}});return $.push(b),$.forEach(V=>t.disposeIntermediateTensorInfo(V)),M}const FL={kernelName:ga,backendName:"webgl",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r,m=[];let x=l;x==null&&(x=[1,1]),I(St(u,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`);const y=Nt(s.shape,o.shape,u,x,c,d,!0),b=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,$=h?eo(h,b):null,E=[s,o],C=a!=null,A=i!=null,B=h==="leakyrelu";if(C&&E.push(a),A&&E.push(i),B){const F=t.makeTensorInfo([],"float32",kr(f,"float32"));E.push(F),m.push(F)}let M;b?M=new r1(y,C,$,A,B):M=new n1(y,C,$,A,B);const V=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],P=t.runWebGLProgram(M,E,"float32",V);return m.forEach(F=>t.disposeIntermediateTensorInfo(F)),P}const LL={kernelName:ya,backendName:"webgl",kernelFunc:PL};class BL{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=Ne(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=q(r.shape),[u,c,l,d]=Mh(r,s),h=X({inputs:{x:s},backend:t,attrs:{shape:[c,a]}}),f=X({inputs:{x:r},backend:t,attrs:{shape:[q(r.shape)/l,l]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const b=t.readSync(s.dataId),$=t.bufferSync(r),E=zO(b,$,r.dtype,c,a,l,d,r.shape,i);return t.makeTensorInfo(u,r.dtype,E.values)}const m=new BL(a,d,[c,l],r.shape),x=t.runWebGLProgram(m,[f,h],f.dtype),y=X({inputs:{x},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),y}const ML={kernelName:Wc,backendName:"webgl",kernelFunc:VL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Ne(this.rank),s=WL(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function WL(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a1(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=Ve(a,s.shape)[0];if(U().get("DEBUG")){const $=t.readSync(o.dataId),E=s.shape[u];for(let C=0;C<$.length;++C){const A=$[C];I(A<=E-1&&A>=0,()=>`GatherV2: the index value ${A} is not in [0, ${E-1}]`)}}const c=Z0(s,o,u,i),l=q(o.shape),d=[],h=X({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=X({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(f);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const $=t.bufferSync(f),E=t.bufferSync(h),C=GO(E,$,m);return d.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.makeTensorInfo(c.outputShape,C.dtype,C.values)}const x=new UL(h.shape,m),y=t.runWebGLProgram(x,[h,f],h.dtype);d.push(y);const b=X({inputs:{x:y},backend:t,attrs:{shape:c.outputShape}});return d.forEach($=>t.disposeIntermediateTensorInfo($)),b}const zL={kernelName:Uc,backendName:"webgl",kernelFunc:a1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL="return float(a > b);",HL=`
  return vec4(greaterThan(a, b));
`,jL=Ke({opSnippet:GL,packedOpSnippet:HL,cpuKernelImpl:HO,dtype:"bool"}),qL={kernelName:zc,backendName:"webgl",kernelFunc:jL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL="return float(a >= b);",XL=`
  return vec4(greaterThanEqual(a, b));
`,YL=Ke({opSnippet:KL,packedOpSnippet:XL,dtype:"bool",cpuKernelImpl:jO}),QL={kernelName:Gc,backendName:"webgl",kernelFunc:YL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:e,backend:t}=n,{input:r}=e;return o1(r,!0,t)}const JL={kernelName:Hc,backendName:"webgl",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eB="return float(!isnan(x) && !isinf(x));",tB=xe({opSnippet:eB,dtype:"bool"}),nB={kernelName:qc,backendName:"webgl",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rB="return float(isinf(x));",sB=xe({opSnippet:rB,dtype:"bool"}),oB={kernelName:Kc,backendName:"webgl",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aB="return float(isnan(x));",iB=xe({opSnippet:aB,dtype:"bool"}),uB={kernelName:Xc,backendName:"webgl",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB="return float(a < b);",lB=`
  return vec4(lessThan(a, b));
`,dB=Ke({opSnippet:cB,packedOpSnippet:lB,cpuKernelImpl:qO,dtype:"bool"}),hB={kernelName:Qc,backendName:"webgl",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB="return float(a <= b);",fB=`
  return vec4(lessThanEqual(a, b));
`,mB=Ke({opSnippet:pB,packedOpSnippet:fB,cpuKernelImpl:KO,dtype:"bool"}),gB={kernelName:Zc,backendName:"webgl",kernelFunc:mB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=XO(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const xB={kernelName:Jc,backendName:"webgl",kernelFunc:yB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bB=ms+`
  return x < 0.0 ? 0./0. : log(x);
`,wB=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,vB=xe({opSnippet:bB,packedOpSnippet:wB,cpuKernelImpl:YO}),$B={kernelName:el,backendName:"webgl",kernelFunc:vB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=ms+`
  return log(1.0 + x);
`,CB=xe({opSnippet:SB}),TB={kernelName:tl,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NB="return float(a >= 1.0 && b >= 1.0);",EB=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,IB=Ke({opSnippet:NB,packedOpSnippet:EB,dtype:"bool"}),kB={kernelName:nl,backendName:"webgl",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB="return float(!(x >= 1.0));",_B=xe({opSnippet:RB}),AB={kernelName:rl,backendName:"webgl",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB="return float(a >= 1.0 || b >= 1.0);",DB=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,FB=Ke({opSnippet:OB,packedOpSnippet:DB,dtype:"bool"}),PB={kernelName:sl,backendName:"webgl",kernelFunc:FB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LB{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BB{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=U().getBool("WEBGL_PACK_NORMALIZATION")?new BB(s.shape,o,a,i,u):new LB(s.shape,o,a,i,u);return t.runWebGLProgram(c,[s],s.dtype)},MB={kernelName:ol,backendName:"webgl",kernelFunc:VB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UB{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new UB(s.shape,i,u,c,l);return t.runWebGLProgram(d,[s,o,a],s.dtype)},zB={kernelName:Zm,backendName:"webgl",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,e,t,r){const s=q(e),a=q(n.shape)/s,i=X({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=Fr(i,n.dtype,"max",r),c=X({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=Vt(c,i),d=l!=null,h=t.shouldExecuteOnCPU([s]);let f=s;if(d){if(h){const E=t.texData.get(f.dataId).values,C=new Array(i);for(let M=0;M<C.length;M++)C[M]=s.shape[l[M]];const A=tp(E,s.shape,s.dtype,l,C);f=t.makeTensorInfo(C,s.dtype);const B=t.texData.get(f.dataId);B.values=A}else f=ai(s,l,t);c=Mt(c.length,i)}Jt("max",c,i);const[m,x]=pn(f.shape,c);let y=m;a&&(y=Et(m,u));let b;if(h){const E=t.texData.get(f.dataId).values,C=QO(E,q(x),y,s.dtype);b=t.makeTensorInfo(y,s.dtype);const A=t.texData.get(b.dataId);A.values=C}else b=GB(f,x,y,t);return d&&t.disposeIntermediateTensorInfo(f),b}const HB={kernelName:al,backendName:"webgl",kernelFunc:i1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=np+`
  return max(a, b);
`,qB=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Dr+`
  return result;
`,KB=Ke({opSnippet:jB,packedOpSnippet:qB,cpuKernelImpl:ZO}),XB={kernelName:il,backendName:"webgl",kernelFunc:KB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;xo(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;I(St(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Rr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Ae(l.inShape,l.outShape))return vt({inputs:{x:s},backend:t});const d=new to(l,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const QB={kernelName:ul,backendName:"webgl",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],d=ao(s.shape,o,a,l,i,c,u),h=new sp(d,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const JB={kernelName:cl,backendName:"webgl",kernelFunc:ZB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e4{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class t4{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=u-1-e.padInfo.front,h=c-1-e.padInfo.top,f=l-1-e.padInfo.left,m=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],h=ao(a.shape,i,u,d,c,l),f=new sp(h,"max",!0),m=t.runWebGLProgram(f,[a],a.dtype),x=new t4(h),y=t.runWebGLProgram(x,[s,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const r4={kernelName:eg,backendName:"webgl",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;xo([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=Rr(i.shape,u,c,1,l,d),f=!0,m=new to(h,"max",f),x=t.runWebGLProgram(m,[i],i.dtype),y=new e4(h),b=t.runWebGLProgram(y,[s,x],i.dtype);return t.disposeIntermediateTensorInfo(x),b}const o4={kernelName:Jm,backendName:"webgl",kernelFunc:s4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n,e,t,r){let s=new to(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new to(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:ll,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;I(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];I(St(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Rr(r.shape,s,o,c,a),[d,h]=a4(r,i,l,u);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,e,t,r){const s=q(e),a=q(n.shape)/s,i=X({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=Fr(i,"float32","mean",r),c=X({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4={kernelName:dl,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,i=r.shape.length,u=Ve(o,r.shape);let c=u;const l=Vt(c,i),d=l!=null,h=a.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(h){const C=a.texData.get(m.dataId).values,A=new Array(i);for(let V=0;V<A.length;V++)A[V]=r.shape[l[V]];const B=tp(C,r.shape,r.dtype,l,A);m=a.makeTensorInfo(A,r.dtype);const M=a.texData.get(m.dataId);M.values=B}else m=ai(r,l,a);f.push(m),c=Mt(c.length,i)}Jt("sum",c,i);const[x,y]=pn(m.shape,c);let b=x;s&&(b=Et(x,u));const $=u4(m,y,b,a);for(const E of f)a.disposeIntermediateTensorInfo(E);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=Vt(c,i);let d=s;l!=null&&(d=at({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Mt(c.length,s.shape.length)),Jt("min",c,i);const[h,f]=pn(d.shape,c),m=q(f),x=X({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=Fr(x,x.dtype,"min",t);let b;if(a){const $=Et(h,u);b=X({inputs:{x:y},backend:t,attrs:{shape:$}})}else b=X({inputs:{x:y},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(d),b}const d4={kernelName:hl,backendName:"webgl",kernelFunc:l4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4=np+`
  return min(a, b);
`,p4=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Dr+`
  return result;
`,f4=Ke({opSnippet:h4,packedOpSnippet:p4,cpuKernelImpl:JO}),m4={kernelName:pl,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g4{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const s=e.length,o=Ne(s),a=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y4{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,x)=>m[0]+e[x]+m[1]);const s=e.length,o=Ne(s),a=t.map(m=>m[0]).join(","),i=t.map((m,x)=>m[0]+e[x]).join(","),u=st("rc",s),c=st("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,h=r==="reflect"?0:1;let f="";if(s===1){const m=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const m=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${u[s-1]} += 1;
          if(${l}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new y4(r.shape,s,o):new g4(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},b4={kernelName:fl,backendName:"webgl",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4=`if (b == 0.0) return NAN;
  return mod(a, b);`,v4=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Dr+`
  return result;
`,$4=Ke({opSnippet:w4,packedOpSnippet:v4}),S4={kernelName:ml,backendName:"webgl",kernelFunc:$4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C4{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4=`
if (a == b) {
  return 1.0;
};
return a / b;`,N4=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,u1=Ke({opSnippet:T4,packedOpSnippet:N4,checkOutOfBounds:!0}),E4={kernelName:Ec,backendName:"webgl",kernelFunc:u1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rm="return a - b;",c1=Ke({opSnippet:Rm,packedOpSnippet:Rm,supportsComplex:!0,cpuKernelImpl:wD}),I4={kernelName:yd,backendName:"webgl",kernelFunc:c1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=Ve([o],s.shape),i=i1({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Et(i.shape,a),c=X({inputs:{x:i},backend:t,attrs:{shape:u}}),l=c1({inputs:{a:s,b:c},backend:t}),d=s1({inputs:{x:l},backend:t}),h=ii({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),f=X({inputs:{x:h},backend:t,attrs:{shape:u}}),m=u1({inputs:{a:d,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),m}const k4={kernelName:od,backendName:"webgl",kernelFunc:l1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:l1({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new C4(c,l,o),h=[[a]],f=t.runWebGLProgram(d,[u],"int32",h);return i||t.disposeIntermediateTensorInfo(u),f}const _4={kernelName:gl,backendName:"webgl",kernelFunc:R4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4=Ut+`
  return -x;
`,O4=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function D4(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,i]=tD(o.values,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,a)}let s;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ln(r.shape,O4):s=new on(r.shape,A4),t.runWebGLProgram(s,[r],r.dtype)}const F4={kernelName:xl,backendName:"webgl",kernelFunc:D4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4=Eh;function L4(n){Ot("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),{selectedIndices:d}=P4(c,l,a,i,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const B4={kernelName:wl,backendName:"webgl",kernelFunc:L4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4=Ih;function M4(n){Ot("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=t.readSync(s.dataId),d=t.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=V4(l,d,a,i,u,c);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const U4={kernelName:vl,backendName:"webgl",kernelFunc:M4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=kh;function z4(n){Ot("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=t.readSync(s.dataId),d=t.readSync(o.dataId),h=a,f=i,m=u,x=c,{selectedIndices:y,selectedScores:b}=W4(l,d,h,f,m,x);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const G4={kernelName:$l,backendName:"webgl",kernelFunc:z4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H4{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=q(s.shape),l=new H4(c,a,i,u),d=X({inputs:{x:s},backend:t,attrs:{shape:[c]}}),h=t.runWebGLProgram(l,[d],o);t.disposeIntermediateTensorInfo(d);const f=[...s.shape,a],m=X({inputs:{x:h},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(h),m},q4={kernelName:Cl,backendName:"webgl",kernelFunc:j4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=wo({inputs:{input:r},backend:t}),o=Ra({inputs:{x:s},backend:t}),a=ui({inputs:{input:r},backend:t}),i=Ra({inputs:{x:a},backend:t}),u=Xn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return vo({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const K4={kernelName:Td,backendName:"webgl",kernelFunc:Ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d1(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=wo({inputs:{input:r},backend:t}),o=d1({inputs:{x:s},backend:t}),a=ui({inputs:{input:r},backend:t}),i=Ra({inputs:{x:a},backend:t}),u=Xn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return vo({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const X4={kernelName:Sl,backendName:"webgl",kernelFunc:d1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Ou({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Ze(o,l.shape,"All tensors passed to stack must have matching shapes"),I(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const d=Ou({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(d),d}),c=Yb({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const Q4={kernelName:Tl,backendName:"webgl",kernelFunc:Y4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z4{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=Ne(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J4{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((x,y)=>x[0]+e[y]+x[1]);const s=e.length,o=Ne(s),a=t.map(x=>x[0]).join(","),i=t.map((x,y)=>x[0]+e[y]).join(","),u=st("rc",s),c=st("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],f=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let x=0,y=s===1?2:4;x<y;x++)m+=`
        ${h[x]}
        if (${f}) {
          result[${x}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${x}] = getChannel(getX(${c.join()}), ${d});
        }
      `;m+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h1=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(q(s.shape)===0){const c=o.map((l,d)=>l[0]+s.shape[d]+l[1]);return vo({backend:t,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J4(s.shape,o,a):new Z4(s.shape,o,a),u=[[a]];return t.runWebGLProgram(i,[s],s.dtype,u)},eV={kernelName:Nl,backendName:"webgl",kernelFunc:h1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,nV=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Dr+`
  return result;
`,rV=Ke({opSnippet:tV,packedOpSnippet:nV}),sV={kernelName:El,backendName:"webgl",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=Ve(o,s.shape);let l=c;const d=Vt(l,i);let h=s;d!=null&&(h=at({inputs:{x:s},backend:t,attrs:{perm:d}}),l=Mt(l.length,i),u.push(h)),Jt("prod",l,i);let f;if(t.shouldExecuteOnCPU([h])){const m=t.texData.get(h.dataId).values,{outVals:x,outShape:y,outDtype:b}=rD(h.shape,h.dtype,m,l);f=t.makeTensorInfo(y,b,x)}else{const[m,x]=pn(h.shape,l),y=q(x),b=X({inputs:{x:h},backend:t,attrs:{shape:[-1,y]}}),$=La(s.dtype),E=Fr(b,$,"prod",t);f=X({inputs:{x:E},backend:t,attrs:{shape:m}}),u.push(b),u.push(E)}if(a){u.push(f);const m=Et(f.shape,c);f=X({inputs:{x:f},backend:t,attrs:{shape:m}})}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const aV={kernelName:kl,backendName:"webgl",kernelFunc:oV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(b=>t.readSync(b.dataId)),c=s.map(b=>b.shape),l=t.readSync(o.dataId),d=t.readSync(a.dataId),[h,f,m]=sD(u,c,l,o.shape,o.dtype,d,a.shape,i),x=h.map(b=>t.makeTensorInfo([b.length],"int32",b)),y=t.makeTensorInfo(m,o.dtype,f);return x.concat([y])}const uV={kernelName:Rl,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=oD(a,r.shape,r.dtype,i,s.shape,u,o.shape),d=t.makeTensorInfo([c.length],"int32",c),h=t.makeTensorInfo([l.length],r.dtype,l);return[d,h]}const lV={kernelName:_l,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),d=t.readSync(a.dataId),h=i.map(y=>t.readSync(y.dataId)),f=i.map(y=>y.shape),[m,x]=aD(c,s.shape,l,o.shape,o.dtype,d,a.shape,h,f,u);return t.makeTensorInfo(m,o.dtype,x)}const hV={kernelName:Al,backendName:"webgl",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p1=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,i=iD(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},pV={kernelName:Ol,backendName:"webgl",kernelFunc:p1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fV="return 1.0 / x;",mV=xe({opSnippet:fV}),gV={kernelName:Fl,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV=Ut+`
  return (x < 0.0) ? 0.0 : x;
`,xV=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bV=xe({opSnippet:yV,packedOpSnippet:xV}),wV={kernelName:Pl,backendName:"webgl",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV=Ut+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$V=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SV=xe({opSnippet:vV,packedOpSnippet:$V}),CV={kernelName:Ml,backendName:"webgl",kernelFunc:SV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TV{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new NV(s.shape,u,c,o,a):new TV(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],"float32")}const IV={kernelName:Vl,backendName:"webgl",kernelFunc:EV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kV{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,f=1/d,m=Math.ceil(h)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new kV(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const _V={kernelName:ng,backendName:"webgl",kernelFunc:RV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AV{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],h=s?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OV{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],h=s?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OV(s.shape,u,c,o,a):new AV(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],s.dtype)}const FV={kernelName:Bl,backendName:"webgl",kernelFunc:DV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PV{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,f=1/d,m=Math.ceil(h)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new PV(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const BV={kernelName:tg,backendName:"webgl",kernelFunc:LV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VV{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=Ne(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MV{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=st("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=Ne(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(m){return h(m)}function c(m){return m[r-1]="("+m[r-1]+" + 1)",h(m)}function l(m){return m[r-2]="("+m[r-2]+" + 1)",h(m)}function d(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",h(m)}function h(m){const x=e.map(($,E)=>f(E,m)),y=x.join(","),b=x.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function f(m,x){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${x[m]} - 1`:`${x[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,i=Ve(o,s.shape);if(a===0)return vt({inputs:{x:s},backend:t});const u=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MV(s.shape,i):new VV(s.shape,i);return t.runWebGLProgram(u,[s],s.dtype)}const WV={kernelName:Ul,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zV{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:Ed,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=new zV(r.shape,o),[c,l]=$0(a,r.shape[1],r.shape[2]),d=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,jV=xe({opSnippet:HV}),qV={kernelName:Wl,backendName:"webgl",kernelFunc:jV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV="return inversesqrt(x);",XV=xe({opSnippet:KV,cpuKernelImpl:uD}),YV={kernelName:zl,backendName:"webgl",kernelFunc:XV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class op{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Ne(o.length),l=Ne(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let f="";s===1?f="i":s===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=Ne(o.length),l=Ne(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let f="";s===1?f="i":s===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=t>1?"strides[j]":"strides",$=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${$};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=mo(o,s,a),h=[d/c,c];if(d===0)return t.makeTensorInfo(a,s.dtype);const f=X({inputs:{x:s},backend:t,attrs:{shape:[u,i]}}),m=X({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),x=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;U().getBool("WEBGL_PACK")?y=new QV(u,i,f.shape.length,m.shape.length,l,h):y=new op(u,i,f.shape.length,m.shape.length,l,h);const b=t.runWebGLProgram(y,[m,f,x],m.dtype),$=X({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),$}const JV={kernelName:Gl,backendName:"webgl",kernelFunc:ZV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eM{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=U().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=new eM(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(i,[s,o],"int32",u)}const nM={kernelName:jl,backendName:"webgl",kernelFunc:tM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rM{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=Ne(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new rM(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],Yt(s.dtype,o.dtype))}const oM={kernelName:ql,backendName:"webgl",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T0};
  float scale = ${N0};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iM=xe({opSnippet:aM}),uM={kernelName:Kl,backendName:"webgl",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM=ms+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,lM=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dM=xe({opSnippet:cM,packedOpSnippet:lM,cpuKernelImpl:lD}),hM={kernelName:Jl,backendName:"webgl",kernelFunc:dM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,fM=xe({opSnippet:pM}),mM={kernelName:Zl,backendName:"webgl",kernelFunc:fM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=ms+`
  return sin(x);
`,yM=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Dr}
  return result;
`,xM=xe({opSnippet:gM,packedOpSnippet:yM}),bM={kernelName:Yl,backendName:"webgl",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,vM=xe({opSnippet:wM}),$M={kernelName:Ql,backendName:"webgl",kernelFunc:vM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,CM=xe({opSnippet:SM}),TM={kernelName:ed,backendName:"webgl",kernelFunc:CM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;I(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,$)=>b*$),u=[[0,0]];u.push(...a);for(let b=1+o.length;b<s.shape.length;++b)u.push([0,0]);const c=[],l=h1({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),d=Gh(l.shape,o,i,!1),h=Hh(d.length,o.length,!1),f=jh(l.shape,o,i,!1),m=X({inputs:{x:l},backend:t,attrs:{shape:d}}),x=at({inputs:{x:m},backend:t,attrs:{perm:h}}),y=X({inputs:{x},backend:t,attrs:{shape:f}});return c.push(l),c.push(m),c.push(x),c.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},EM={kernelName:rd,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[d,h,f,m,x]=hD(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(h,r.dtype,d),t.makeTensorInfo([h[0]],s.dtype,f),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),t.makeTensorInfo([x.length],r.dtype,new Int32Array(x))]}const kM={kernelName:ad,backendName:"webgl",kernelFunc:IM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),i=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,l,d]=pD(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const _M={kernelName:id,backendName:"webgl",kernelFunc:RM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=Lb(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const OM={kernelName:ud,backendName:"webgl",kernelFunc:AM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=Lb(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const FM={kernelName:cd,backendName:"webgl",kernelFunc:DM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=mo(o,s,i),f=!1;if(o.dtype==="string"){const b=t.bufferSync(s),$=t.bufferSync(o),E=yr(t.readSync(a.dataId)[0]),C=cD(b,$,i,h,l,c,u,d,E,f);return t.makeTensorInfo(i,C.dtype,C.values)}const m=new op(c,u,s.shape.length,o.shape.length,d,[h,1],f),x=t.runWebGLProgram(m,[o,s,a],o.dtype),y=X({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(x),y}const LM={kernelName:ld,backendName:"webgl",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ve(a,s.shape)[0],u=B0(s,o,i),c=s.shape.length,l=new Array(c).fill(0),d=s.shape.slice();return u.map(h=>{const f=[...d];f[i]=h;const m=gs({inputs:{x:s},backend:t,attrs:{begin:l,size:f}});return l[i]+=h,m})}const VM={kernelName:sd,backendName:"webgl",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _m="return sqrt(x);",MM=xe({opSnippet:_m,packedOpSnippet:_m,cpuKernelImpl:fD}),UM={kernelName:td,backendName:"webgl",kernelFunc:MM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM="return x * x;",zM=xe({opSnippet:WM}),GM={kernelName:rg,backendName:"webgl",kernelFunc:zM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Am="return (a - b) * (a - b);",HM=Ke({opSnippet:Am,packedOpSnippet:Am}),jM={kernelName:dd,backendName:"webgl",kernelFunc:HM};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),a=ts(o),i=mD(a,"string",r);return t.makeTensorInfo(s.shape,"string",i)}const KM={kernelName:hd,backendName:"webgl",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=Ut+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new on(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const YM={kernelName:Nd,backendName:"webgl",kernelFunc:XM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QM{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=Ne(r.length),a=Ne(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:x,sliceDim0:y,isSimpleSlice:b,begin:$,end:E,strides:C}=p0(s.shape,o,a,i,u,c,l,d,h);let A;if(x)A=X({inputs:{x:s},backend:t,attrs:{shape:m}});else if(y||b){I(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const M=r0($,E,C),V=gs({inputs:{x:s},backend:t,attrs:{begin:$,size:M}});A=X({inputs:{x:V},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(V)}else if(t.shouldExecuteOnCPU([s])){const V=t.readSync(s.dataId),P=De(s.shape,s.dtype,V),F=gD(f,P,C,$);A=t.makeTensorInfo(m,s.dtype,F.values)}else{const V=new QM($,C,f);A=t.runWebGLProgram(V,[s],s.dtype)}const B=X({inputs:{x:A},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(A),B}const JM={kernelName:pd,backendName:"webgl",kernelFunc:ZM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=e,h=t.readSync(l.dataId),f=t.readSync(d.dataId),[m,x]=yD(h,f,s,o,a,i,u,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(d.shape,"int32",x)]}const tU={kernelName:fd,backendName:"webgl",kernelFunc:eU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[c,l,d]=xD(i,u,s),h=l.length;return[t.makeTensorInfo([h,2],"int32",c),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const rU={kernelName:md,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=bD(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const oU={kernelName:gd,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU="return tan(x);",iU=xe({opSnippet:aU}),uU={kernelName:xd,backendName:"webgl",kernelFunc:iU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lU=xe({opSnippet:cU}),dU={kernelName:bd,backendName:"webgl",kernelFunc:lU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=mo(a,o,s.shape),h=[d/c,c];if(d===0)return t.makeTensorInfo(s.shape,o.dtype);const f=X({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),m=X({inputs:{x:a},backend:t,attrs:{shape:[u,c]}}),x=X({inputs:{x:s},backend:t,attrs:{shape:h}}),y=new op(u,i,f.shape.length,m.shape.length,l,h,!1,!0),b=t.runWebGLProgram(y,[m,f,x],x.dtype),$=X({inputs:{x:b},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),$}const pU={kernelName:Hl,backendName:"webgl",kernelFunc:hU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fU{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=Ne(this.rank),o=mU(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function mU(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(h=>yr(h)):u,l=De(s.shape,s.dtype,c),d=vD(l,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new fU(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const gU={kernelName:Pa,backendName:"webgl",kernelFunc:f1};class yU{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class xU{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function Om(n){let e=1;for(;e<n;)e*=2;return e}function bU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,i=U().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=U().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([s])||l<i||o>u){const F=t.readSync(s.dataId),[T,z]=$D(F,c,s.dtype,o,a);return[t.makeTensorInfo(T.shape,T.dtype,T.values),t.makeTensorInfo(z.shape,z.dtype,z.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[s,vo({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const d=t.texData.get(s.dataId),h=d!==null&&d.isPacked,f=h?t.unpackTensor(s):s,x=q(c)/l,y=X({inputs:{x:f},attrs:{shape:[x,l]},backend:t});h&&sr(t,f);const b=Om(o),$=Om(l);let E=null;const C=()=>E===null?[y,y]:[y,E],A=(F,T,z)=>{const H=C(),K=new yU(z),te=[[l],[E===null?1:0],[Number.NEGATIVE_INFINITY],[F],[T]],ae=E;E=t.runWebGLProgram(K,H,"int32",te),sr(t,ae)};for(let F=1;F<b;F*=2){const T=F*2;for(let z=F;z>=1;z/=2)A(T,z,[x,$])}for(let F=$;F>b;F/=2){const T=C(),z=new xU([x,F/2]),K=[[l],[E===null?1:0],[b]],Z=E;E=t.runWebGLProgram(z,T,"int32",K),sr(t,Z);const te=b/2,ae=te*2;for(let ie=te;ie>=1;ie/=2)A(ae,ie,E.shape)}let B=E;E=gs({inputs:{x:E},backend:t,attrs:{begin:0,size:[x,o]}}),sr(t,B);let M=a1({inputs:{x:y,indices:E},backend:t,attrs:{axis:1,batchDims:1}});sr(t,y);const V=c.slice(0,-1);V.push(o),B=E,E=X({inputs:{x:E},attrs:{shape:V},backend:t}),sr(t,B);const P=M;return M=X({inputs:{x:M},attrs:{shape:V},backend:t}),sr(t,P),[M,E]}const wU={kernelName:wd,backendName:"webgl",kernelFunc:bU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vU{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,h,f]=s.shape,[m,x]=c??[d,h],y=[l,m,x,f],b=new vU(d,h,a,i,u,y);return t.runWebGLProgram(b,[s,o],"float32")}const SU={kernelName:vd,backendName:"webgl",kernelFunc:$U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;xo(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=SD(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const TU={kernelName:$d,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let x=0;x<i;x++)x!==o&&(c[l++]=a.shape[x]);const d=[],h=new Array(i).fill(0),f=a.shape.slice();f[o]=1;const m=new Array(u);for(let x=0;x<m.length;x++){h[o]=x;const y=gs({inputs:{x:a},backend:t,attrs:{begin:h,size:f}}),b=X({inputs:{x:y},backend:t,attrs:{shape:c}});m[x]=b,d.push(y)}return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),m}const EU={kernelName:Sd,backendName:"webgl",kernelFunc:NU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IU{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,d=r%4,h=`
        sumValue += dot(values, segFilter);
    `;let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=Vt([c],i);let d=s;l!=null&&(d=at({inputs:{x:s},backend:t,attrs:{perm:l}}),u.push(d),c=Mt(1,i)[0]);const h=Q0(d.shape,c,a),f=q([d.shape[c]]),m=X({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}});u.push(m);const x=La(s.dtype),y=(C,A,B,M,V)=>{const P=C.shape[0],F=C.shape[1],T=Y0(F,V),z={windowSize:T,inSize:F,batchSize:P,numSegments:V},H=new IU(z,A),K=t.compileAndRun(H,[C,B],M);if(u.push(K),K.shape[1]===V)return K;const Z=p1({backend:t,attrs:{start:0,stop:V,step:1,dtype:"float32"}}),te=f1({inputs:{x:Z},backend:t,attrs:{reps:[F/T]}});return u.push(Z),u.push(te),y(K,A,te,M,V)},b=y(m,"unsortedSegmentSum",o,x,a),$=X({inputs:{x:b},backend:t,attrs:{shape:h}});let E=$;if(l!=null){u.push($);const C=Kd(l);E=at({inputs:{x:E},backend:t,attrs:{perm:C}})}return u.forEach(C=>t.disposeIntermediateTensorInfo(C)),E}const RU={kernelName:Cd,backendName:"webgl",kernelFunc:kU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U=[fF,gF,bF,$F,CF,EF,kF,_F,FF,LF,MF,zF,jF,YF,JF,tP,rP,iP,cP,dP,mP,$P,CP,IP,RP,PP,BP,WP,QD,HP,YP,e3,a3,c3,d3,p3,m3,b3,$3,T3,E3,k3,_3,D3,P3,M3,W3,H3,K3,Y3,eL,sL,uL,dL,fL,mL,yL,bL,vL,SL,TL,kL,AL,FL,LL,ML,zL,qL,QL,YD,JL,KP,nB,oB,uB,JD,hB,gB,xB,$B,TB,kB,AB,PB,MB,zB,HB,XB,QB,JB,r4,o4,i4,c4,d4,m4,b4,S4,_4,nF,F4,B4,U4,G4,AP,q4,X4,Q4,eV,sV,tF,aV,uV,lV,hV,pV,OP,E4,gV,wV,CV,sF,IV,_V,FV,BV,WV,GV,qV,YV,JV,nM,oM,uM,hM,mM,bM,$M,wP,k4,TM,EM,kM,_M,OM,FM,LM,VM,UM,GM,jM,KM,YM,JM,tU,rU,oU,I4,dF,uU,dU,pU,gU,wU,SU,hF,TU,EU,RU,K4];for(const n of _U)Id(n);const AU=async()=>{const n=Zs.MediaPipeSelfieSegmentation;return TR(n,{runtime:"mediapipe",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation",modelType:"general"})};var dr,qr,sn,Kr;class OU{constructor(){Ts(this,dr);Ts(this,qr);Ts(this,sn,null);Ts(this,Kr,[]);Do(this,"getSegmenter",async()=>(kt(this,qr)||nr(this,qr,await AU()),kt(this,qr)));Do(this,"stop",()=>{cancelAnimationFrame(kt(this,dr)),console.log("Stopped background removal"),kt(this,sn)&&kt(this,sn).state!=="inactive"&&kt(this,sn).stop()});Do(this,"remove",async(e,t)=>{if(t.readyState<2){console.error("Video not ready!");return}e.width=t.videoWidth,e.height=t.videoHeight;const r=e.getContext("2d");if(!r){console.error("Canvas context not found!");return}const s=await this.getSegmenter();console.log("Removing background -> Video Size:",t.videoWidth,t.videoHeight);const o=e.captureStream(30);nr(this,sn,new MediaRecorder(o,{mimeType:"video/webm"})),nr(this,Kr,[]),kt(this,sn).ondataavailable=i=>{i.data.size>0&&kt(this,Kr).push(i.data)},kt(this,sn).onstop=()=>{const i=new Blob(kt(this,Kr),{type:"video/webm"}),u=URL.createObjectURL(i),c=document.getElementById("previewVideo"),l=document.getElementById("downloadBtn");c.src=u,c.load(),c.style.display="block",l.href=u,l.style.display="inline-block"},kt(this,sn).start();const a=async()=>{r.drawImage(t,0,0,t.videoWidth,t.videoHeight);const i=await s.segmentPeople(t);if(!i||i.length===0){console.warn("No segmentation data received."),nr(this,dr,requestAnimationFrame(a));return}const u=await PR(i);if(await LR(e,t,u,1,0),t.paused||t.ended){this.stop();return}nr(this,dr,requestAnimationFrame(a))};nr(this,dr,requestAnimationFrame(a))})}}dr=new WeakMap,qr=new WeakMap,sn=new WeakMap,Kr=new WeakMap;const DU=new OU;document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("videoInput"),e=document.getElementById("videoElement"),t=document.getElementById("canvasElement"),r=document.getElementById("removeBgButton");n.addEventListener("change",s=>{const o=s.target;if(o.files&&o.files[0]){const a=URL.createObjectURL(o.files[0]);e.src=a,e.play()}}),r.addEventListener("click",()=>{t.hidden=!1,DU.remove(t,e)})});
